# although this is a node.js project, specify the use of java in order for OTP
# and datatools-server to run as expected on java 8 specifically
dist: trusty # jdk 8 not available on xenial
language: java
java:
  - oraclejdk8
install: true
notifications:
  email: false
services:
  # needed for e2e tests to start datatools-server
  - mongodb
  - postgresql
addons:
  postgresql: 9.6
cache:
  directories:
    # not sure which yarn directory to cache, so specify both just in case
    - $HOME/.cache/yarn
    - $HOME/.yarn-cache
    - $HOME/.cache/pip
before_install:
  # install node 12
  - nvm install 12
  # install yarn
  - curl -o- -L https://yarnpkg.com/install.sh | bash
  - pip install --user mkdocs
  - source ./scripts/check-if-e2e-should-run-on-travis.sh
  # create database for e2e tests
  - if [ "$SHOULD_RUN_E2E" = "true" ]; then psql -U postgres -c 'CREATE DATABASE catalogue;'; fi
  # add aws credentials for datatools-server
  - if [ "$SHOULD_RUN_E2E" = "true" ]; then mkdir ~/.aws && printf '%s\n' '[default]' 'aws_access_key_id=${AWS_ACCESS_KEY_ID}' 'aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}' 'region=us-east-1' > ~/.aws/config; else mkdir ~/.aws && printf '%s\n' '[default]' 'aws_access_key_id=foo' 'aws_secret_access_key=bar' 'region=us-east-1' > ~/.aws/config; fi
script:
  - yarn
  - yarn run lint
  - yarn run lint-messages
  - yarn run flow
  - yarn run cover-client
  # upload coverage results from unit tests and then delete coverage reports
  - bash <(curl -s https://codecov.io/bash) -c -F unit_tests
  - if [ "$SHOULD_RUN_E2E" = "true" ]; then yarn run cover-end-to-end; fi
  # upload coverage results from e2e tests and then delete coverage reports
  - if [ "$SHOULD_RUN_E2E" = "true" ]; then bash <(curl -s https://codecov.io/bash) -c -F end_to_end_tests; fi
  - yarn run build -- --minify
  - mkdocs build

# If sudo is disabled, CI runs on container based infrastructure (allows caching &c.)
sudo: false

# Push results to codecov.io
after_success:
  # only deploy the release to github as the package is not needed on npm
  - semantic-release --prepare false --publish @semantic-release/github --verify-conditions @semantic-release/github
