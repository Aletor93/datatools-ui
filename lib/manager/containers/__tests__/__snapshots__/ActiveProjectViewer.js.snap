// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lib > manager > ActiveProjectViewer should render with newly created project 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ProjectViewer)
    location={
      Object {
        "action": "",
        "hash": "",
        "key": "",
        "pathname": "",
        "query": Object {},
        "search": "",
      }
    }
    routeParams={
      Object {
        "projectId": "mock-project-id",
      }
    }
  >
    <ProjectViewer
      createDeployment={[Function]}
      createDeploymentFromFeedSource={[Function]}
      createFeedSource={[Function]}
      deleteDeployment={[Function]}
      deleteFeedSource={[Function]}
      deleteProject={[Function]}
      deployPublic={[Function]}
      downloadFeedForProject={[Function]}
      fetchFeedsForProject={[Function]}
      fetchProjectDeployments={[Function]}
      fetchProjectFeeds={[Function]}
      isFetching={false}
      location={
        Object {
          "action": "",
          "hash": "",
          "key": "",
          "pathname": "",
          "query": Object {},
          "search": "",
        }
      }
      onProjectViewerMount={[Function]}
      project={
        Object {
          "autoFetchFeeds": true,
          "autoFetchHour": 0,
          "autoFetchMinute": 0,
          "bounds": null,
          "buildConfig": Object {
            "fares": null,
            "fetchElevationUS": null,
            "stationTransfers": null,
            "subwayAccessTime": null,
          },
          "dateCreated": 1526305321824,
          "defaultTimeZone": null,
          "deployments": Array [],
          "feedSources": Array [],
          "id": "mock-project-id",
          "lastUpdated": 1553236399556,
          "name": "mock-project",
          "organizationId": null,
          "otpServers": Array [],
          "pinnedDeploymentId": null,
          "routerConfig": Object {
            "carDropoffTime": null,
            "numItineraries": null,
            "requestLogFile": null,
            "stairsReluctance": null,
            "updaters": null,
            "walkSpeed": null,
          },
          "useCustomOsmBounds": false,
          "user": null,
        }
      }
      projectId="mock-project-id"
      routeParams={
        Object {
          "projectId": "mock-project-id",
        }
      }
      runFetchFeed={[Function]}
      saveDeployment={[Function]}
      setVisibilityFilter={[Function]}
      setVisibilitySearchText={[Function]}
      thirdPartySync={[Function]}
      updateDeployment={[Function]}
      updateFeedSource={[Function]}
      updateProject={[Function]}
      uploadFeed={[Function]}
      user={
        Object {
          "isCheckingLogin": false,
          "permissions": UserPermissions {
            "appPermissionLookup": Object {
              "administer-application": Object {
                "type": "administer-application",
              },
            },
            "orgPermissionLookup": Object {},
            "organizationLookup": Object {},
            "projectLookup": Object {},
          },
          "profile": Object {
            "app_metadata": Object {
              "datatools": Array [
                Object {
                  "client_id": "mock-client-id",
                  "organizations": Array [],
                  "permissions": Array [
                    Object {
                      "type": "administer-application",
                    },
                  ],
                  "projects": Array [],
                  "subscriptions": Array [],
                },
              ],
            },
            "clientID": "mock-client-id",
            "created_at": "2016-03-04T18:59:22.569Z",
            "email": "mock-user@conveyal.com",
            "email_verified": true,
            "identities": Array [
              Object {
                "connection": "Username-Password-Authentication",
                "isSocial": false,
                "provider": "auth0",
                "user_id": "12345",
              },
            ],
            "jti": "gibberish",
            "last_password_reset": "2017-07-13T13:58:01.021Z",
            "name": "mock-user@conveyal.com",
            "nickname": "mock-user",
            "persistent": Object {},
            "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
            "sub": "auth0|12345",
            "updated_at": "2019-03-21T19:05:30.180Z",
            "user_id": "auth0|12345",
            "user_metadata": Object {
              "datatools": Array [
                Object {
                  "client_id": "mock-client-id",
                  "editor": Object {
                    "map_id": "mapbox.streets",
                  },
                  "hideTutorial": true,
                  "sidebarExpanded": false,
                },
              ],
              "lang": "en",
            },
          },
          "recentActivity": null,
          "redirectOnSuccess": null,
          "subscriptions": UserSubscriptions {
            "subscriptionLookup": Object {},
          },
          "token": "mock-token",
        }
      }
      visibilityFilter={
        Object {
          "feedSourceTableComparisonColumn": null,
          "feedSourceTableFilterCountStrategy": "LATEST",
          "filter": null,
          "searchText": null,
        }
      }
    >
      <ManagerPage
        title="mock-project"
      >
        <div>
          <Title />
          <Connect(StatusMessage)>
            <StatusMessage
              dispatch={[Function]}
              message={null}
              sidebarExpanded={true}
            >
              <div
                style={
                  Object {
                    "bottom": "0px",
                    "height": "60px",
                    "left": "140px",
                    "position": "fixed",
                    "zIndex": 1000,
                  }
                }
              />
            </StatusMessage>
          </Connect(StatusMessage)>
          <ConfirmModal>
            <Modal
              animation={true}
              autoFocus={true}
              backdrop={true}
              bsClass="modal"
              dialogComponentClass={[Function]}
              enforceFocus={true}
              keyboard={true}
              manager={
                ModalManager {
                  "containers": Array [],
                  "data": Array [],
                  "handleContainerOverflow": true,
                  "hideSiblingNodes": true,
                  "modals": Array [],
                }
              }
              onHide={[Function]}
              renderBackdrop={[Function]}
              restoreFocus={true}
              show={false}
            >
              <Modal
                autoFocus={true}
                backdrop={true}
                backdropClassName="modal-backdrop"
                backdropTransitionTimeout={150}
                containerClassName="modal-open"
                dialogTransitionTimeout={300}
                enforceFocus={true}
                keyboard={true}
                manager={
                  ModalManager {
                    "containers": Array [],
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "modals": Array [],
                  }
                }
                onEntering={[Function]}
                onExited={[Function]}
                onHide={[Function]}
                renderBackdrop={[Function]}
                restoreFocus={true}
                show={false}
                transition={[Function]}
              />
            </Modal>
          </ConfirmModal>
          <InfoModal>
            <Modal
              animation={true}
              autoFocus={true}
              backdrop={true}
              bsClass="modal"
              dialogComponentClass={[Function]}
              enforceFocus={true}
              keyboard={true}
              manager={
                ModalManager {
                  "containers": Array [],
                  "data": Array [],
                  "handleContainerOverflow": true,
                  "hideSiblingNodes": true,
                  "modals": Array [],
                }
              }
              onHide={[Function]}
              renderBackdrop={[Function]}
              restoreFocus={true}
              show={false}
            >
              <Modal
                autoFocus={true}
                backdrop={true}
                backdropClassName="modal-backdrop"
                backdropTransitionTimeout={150}
                containerClassName="modal-open"
                dialogTransitionTimeout={300}
                enforceFocus={true}
                keyboard={true}
                manager={
                  ModalManager {
                    "containers": Array [],
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "modals": Array [],
                  }
                }
                onEntering={[Function]}
                onExited={[Function]}
                onHide={[Function]}
                renderBackdrop={[Function]}
                restoreFocus={true}
                show={false}
                transition={[Function]}
              />
            </Modal>
          </InfoModal>
          <SelectFileModal>
            <Modal
              animation={true}
              autoFocus={true}
              backdrop={true}
              bsClass="modal"
              dialogComponentClass={[Function]}
              enforceFocus={true}
              keyboard={true}
              manager={
                ModalManager {
                  "containers": Array [],
                  "data": Array [],
                  "handleContainerOverflow": true,
                  "hideSiblingNodes": true,
                  "modals": Array [],
                }
              }
              onHide={[Function]}
              renderBackdrop={[Function]}
              restoreFocus={true}
              show={false}
            >
              <Modal
                autoFocus={true}
                backdrop={true}
                backdropClassName="modal-backdrop"
                backdropTransitionTimeout={150}
                containerClassName="modal-open"
                dialogTransitionTimeout={300}
                enforceFocus={true}
                keyboard={true}
                manager={
                  ModalManager {
                    "containers": Array [],
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "modals": Array [],
                  }
                }
                onEntering={[Function]}
                onExited={[Function]}
                onHide={[Function]}
                renderBackdrop={[Function]}
                restoreFocus={true}
                show={false}
                transition={[Function]}
              />
            </Modal>
          </SelectFileModal>
          <Connect(StatusModal)>
            <StatusModal
              clearStatusModal={[Function]}
              removeEditorLock={[Function]}
            >
              <Modal
                animation={true}
                autoFocus={true}
                backdrop={true}
                bsClass="modal"
                dialogComponentClass={[Function]}
                enforceFocus={true}
                keyboard={true}
                manager={
                  ModalManager {
                    "containers": Array [],
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "modals": Array [],
                  }
                }
                onHide={[Function]}
                renderBackdrop={[Function]}
                restoreFocus={true}
                show={false}
              >
                <Modal
                  autoFocus={true}
                  backdrop={true}
                  backdropClassName="modal-backdrop"
                  backdropTransitionTimeout={150}
                  containerClassName="modal-open"
                  dialogTransitionTimeout={300}
                  enforceFocus={true}
                  keyboard={true}
                  manager={
                    ModalManager {
                      "containers": Array [],
                      "data": Array [],
                      "handleContainerOverflow": true,
                      "hideSiblingNodes": true,
                      "modals": Array [],
                    }
                  }
                  onEntering={[Function]}
                  onExited={[Function]}
                  onHide={[Function]}
                  renderBackdrop={[Function]}
                  restoreFocus={true}
                  show={false}
                  transition={[Function]}
                />
              </Modal>
            </StatusModal>
          </Connect(StatusModal)>
          <Connect(Sidebar)>
            <Sidebar
              appInfo={null}
              expanded={true}
              fetchAppInfo={[Function]}
              hideTutorial={false}
              jobMonitor={
                Object {
                  "jobs": Array [],
                  "retired": Array [],
                  "timer": null,
                  "visible": false,
                }
              }
              languages={
                Object {
                  "active": Object {
                    "_id": "en-US",
                    "_name": "English",
                    "components": Object {
                      "Breadcrumbs": Object {
                        "deployments": "Deployments",
                        "projects": "Projects",
                        "root": "Explore",
                      },
                      "CollapsiblePanel": Object {
                        "deployment": Object {
                          "buildConfig": Object {
                            "elevationBucket": Object {
                              "accessKey": "Access Key",
                              "bucketName": "S3 Bucket Name",
                              "secretKey": "Secret Key",
                            },
                            "fares": "Fares",
                            "fetchElevationUS": "Fetch Elevation",
                            "stationTransfers": "Sta. Transfers",
                            "subwayAccessTime": "Subway Access Time",
                            "title": "Build Config",
                          },
                          "osm": Object {
                            "bounds": "Custom Extract Bounds",
                            "custom": "Use Custom Extract Bounds",
                            "gtfs": "Use GTFS-Derived Extract Bounds",
                            "title": "OSM Extract",
                          },
                          "otpServers": Object {
                            "$index": Object {
                              "admin": "Admin access only?",
                              "delete": "Remove",
                              "internalUrl": "Internal URLs",
                              "name": "Name",
                              "namePlaceholder": "Production",
                              "publicUrl": "Public URL",
                              "s3Bucket": "S3 bucket name",
                            },
                            "new": "Add server",
                            "serverPlaceholder": "Server name",
                            "title": "Servers",
                          },
                          "routerConfig": Object {
                            "brandingUrlRoot": "Branding URL Root",
                            "carDropoffTime": "Car Dropoff Time",
                            "numItineraries": "# of itineraries",
                            "requestLogFile": "Request log file",
                            "stairsReluctance": "Stairs Reluctance",
                            "title": "Router Config",
                            "updaters": Object {
                              "$index": Object {
                                "defaultAgencyId": "Default agency ID",
                                "frequencySec": "Frequency (in seconds)",
                                "sourceType": "Source type",
                                "type": "Type",
                                "url": "URL",
                              },
                              "new": "Add updater",
                              "placeholder": "Updater name",
                              "title": "Real-time updaters",
                            },
                            "walkSpeed": "Walk Speed",
                          },
                          "title": "Deployment",
                        },
                      },
                      "CreateUser": Object {
                        "new": "Create User",
                      },
                      "DatatoolsNavbar": Object {
                        "account": "My Account",
                        "alerts": "Alerts",
                        "editor": "Editor",
                        "guide": "Guide",
                        "login": "Log In",
                        "logout": "Log Out",
                        "manager": "Manager",
                        "resetPassword": "Reset Password",
                        "signConfig": "eTID Config",
                        "users": "Users",
                      },
                      "DeploymentConfirmModal": Object {
                        "alert": Object {
                          "alreadyDeployed": "is already deployed to this server at the same router. (Deploying would evict the current graph.)",
                          "boundsTooLarge": "Bounds are much too large to successfully deploy to OpenTripPlanner. Deployment is disabled.",
                          "expiredFeeds": "The following feeds have expired (all scheduled trips are for past dates)",
                          "missingBounds": "There are no bounds defined for the set of feeds. Deployment is disabled.",
                          "missingFeeds": "There are no feeds defined for this deployment. Deployment is disabled.",
                          "success": "Deployment successfully deployed.",
                        },
                        "cancel": "Cancel",
                        "close": "Close",
                        "danger": "Danger!",
                        "deploy": "Deploy",
                        "invalidBounds": "Bounds are invalid!",
                        "success": "Success!",
                        "to": "to",
                        "warning": "Warning!",
                      },
                      "DeploymentConfirmModalAlert": Object {
                        "danger": "Danger!",
                        "success": "Success!",
                        "warning": "Warning!",
                      },
                      "DeploymentSettings": Object {
                        "buildConfig": Object {
                          "elevationBucket": Object {
                            "accessKey": "Access Key",
                            "bucketName": "S3 Bucket Name",
                            "secretKey": "Secret Key",
                          },
                          "fares": "Fares",
                          "fetchElevationUS": "Fetch Elevation",
                          "save": "Save",
                          "stationTransfers": "Sta. Transfers",
                          "subwayAccessTime": "Subway Access Time",
                          "title": "Build Config",
                        },
                        "osm": Object {
                          "bounds": "Custom Extract Bounds",
                          "custom": "Use Custom Extract Bounds",
                          "gtfs": "Use GTFS-Derived Extract Bounds",
                          "title": "OSM Extract",
                        },
                        "otpServers": Object {
                          "$index": Object {
                            "admin": "Admin access only?",
                            "delete": "Remove",
                            "internalUrl": "Internal URLs",
                            "name": "Name",
                            "namePlaceholder": "Production",
                            "publicUrl": "Public URL",
                            "s3Bucket": "S3 bucket name",
                          },
                          "new": "Add server",
                          "serverPlaceholder": "Server name",
                          "title": "Servers",
                        },
                        "routerConfig": Object {
                          "brandingUrlRoot": "Branding URL Root",
                          "carDropoffTime": "Car Dropoff Time",
                          "numItineraries": "# of itineraries",
                          "requestLogFile": "Request log file",
                          "stairsReluctance": "Stairs Reluctance",
                          "title": "Router Config",
                          "updaters": Object {
                            "$index": Object {
                              "defaultAgencyId": "Default agency ID",
                              "frequencySec": "Frequency (in seconds)",
                              "sourceType": "Source type",
                              "type": "Type",
                              "url": "URL",
                            },
                            "new": "Add updater",
                            "placeholder": "Updater name",
                            "title": "Real-time updaters",
                          },
                          "walkSpeed": "Walk Speed",
                        },
                        "save": "Save",
                        "title": "Deployment",
                      },
                      "DeploymentVersionsTable": Object {
                        "dateRetrieved": "Date Retrieved",
                        "errorCount": "Error Count",
                        "expires": "Expires",
                        "loadStatus": "Loaded Successfully",
                        "name": "Name",
                        "routeCount": "Route Count",
                        "stopTimesCount": "Stop time count",
                        "tripCount": "Trip Count",
                        "validFrom": "Valid from",
                        "version": "Version",
                      },
                      "DeploymentViewer": Object {
                        "addFeedSource": "Add Feed Source",
                        "allFeedsAdded": "All feeds added",
                        "deploy": "Deploy",
                        "download": "Download",
                        "noServers": "No servers defined",
                        "search": "Search by name",
                        "table": Object {
                          "dateRetrieved": "Date Retrieved",
                          "errorCount": "Error Count",
                          "expires": "Expires",
                          "loadStatus": "Loaded Successfully",
                          "name": "Name",
                          "routeCount": "Route Count",
                          "stopTimesCount": "Stop time count",
                          "tripCount": "Trip Count",
                          "validFrom": "Valid from",
                          "version": "Version",
                        },
                        "to": "to",
                        "versions": "Feed Versions",
                      },
                      "DeploymentsList": Object {
                        "delete": "Remove deployment",
                        "new": "New Deployment",
                        "search": "Search for deployments",
                        "table": Object {
                          "creationDate": "Created",
                          "deployedTo": "Deployed to",
                          "feedCount": "# of feeds",
                          "lastDeployed": "Last deployed",
                          "name": "Name",
                          "testDeployment": "Test?",
                        },
                        "title": "Deployments",
                      },
                      "DeploymentsPanel": Object {
                        "delete": "Remove deployment",
                        "new": "New Deployment",
                        "search": "Search for deployments",
                        "table": Object {
                          "creationDate": "Created",
                          "deployedTo": "Deployed to",
                          "feedCount": "# of feeds",
                          "lastDeployed": "Last deployed",
                          "name": "Name",
                          "testDeployment": "Test?",
                        },
                        "title": "Deployments",
                      },
                      "EditorFeedSourcePanel": Object {
                        "active": "Active",
                        "confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                        "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                        "createFromScratch": "Create GTFS from Scratch",
                        "created": "created",
                        "date": "Date",
                        "delete": "Delete",
                        "download": "Download",
                        "feed": "Feed",
                        "help": Object {
                          "body": Array [
                            "Snapshots are save points you can always revert back to when editing a GTFS feed.",
                            "A snapshot might represent a work-in-progress, future planning scenario or even different service patterns (e.g., summer schedule markup).",
                          ],
                          "title": "What are snapshots?",
                        },
                        "load": "Load for Editing",
                        "loadLatest": "Load latest for editing",
                        "name": "Name",
                        "noSnapshotsExist": "No snapshots currently exist for this feed. Snapshots can be created within the Editor. Click \\"Edit Feed\\" to enter editing mode.",
                        "noVersions": "(No Versions)",
                        "noVersionsExist": "No versions exist for this feed source.",
                        "of": "of",
                        "publish": "Publish",
                        "restore": "Restore",
                        "snapshot": "snapshot",
                        "title": "Snapshots",
                        "version": "Version",
                      },
                      "FeedInfoPanel": Object {
                        "uploadShapefile": Object {
                          "body": "Select a zipped shapefile to display on map. Note: this is only for use as a visual aid.",
                          "error": "Uploaded file must be a valid zip file (.zip).",
                          "title": "Upload route shapefile",
                        },
                      },
                      "FeedSourceAttributes": Object {
                        "lastUpdated": "Updated",
                      },
                      "FeedSourcePanel": Object {
                        "search": "Search feeds",
                      },
                      "FeedSourceTable": Object {
                        "comparisonColumn": Object {
                          "DEPLOYED": "Deployed Version",
                          "PUBLISHED": "Published Version",
                        },
                        "createFirst": "Create first feed source!",
                      },
                      "FeedSourceTableRow": Object {
                        "status": Object {
                          "active": "Active",
                          "all": "All",
                          "expired": "Expired",
                          "expiring-within-20-days": "Expiring within 20 days",
                          "expiring-within-5-days": "Expiring within 5 days",
                          "feedNotInDeployment": "Feed not in deployment",
                          "feedNotPublished": "Feed not published",
                          "future": "Future",
                          "no-version": "No version",
                          "same-as-deployed": "Same as Deployed",
                          "same-as-published": "Same as Published",
                        },
                      },
                      "FeedSourceViewer": Object {
                        "deploy": "Deploy",
                        "edit": "Edit GTFS",
                        "gtfs": "GTFS",
                        "notesTitle": "Notes",
                        "private": "Private view",
                        "properties": Object {
                          "deployable": "Deployable?",
                          "name": "Name",
                          "noneSelected": "(None Selected)",
                          "property": "Property",
                          "public": "Public?",
                          "retrievalMethod": Object {
                            "fetchedAutomatically": "Fetched Automatically",
                            "manuallyUploaded": "Manually Uploaded",
                            "producedInHouse": "Produced In-house",
                            "title": "Retrieval Method",
                          },
                          "snapshot": "Editor Snapshot",
                          "title": "Settings",
                          "value": "Value",
                        },
                        "snapshotsTitle": "Snapshots",
                        "update": "Update",
                        "upload": "Upload",
                        "versions": "Versions",
                        "viewPublic": "View public page",
                      },
                      "FeedVersionNavigator": Object {
                        "confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                        "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                        "delete": "Delete",
                        "download": "Download",
                        "feed": "Feed",
                        "load": "Load for Editing",
                        "next": "Next",
                        "of": "of",
                        "previous": "Previous",
                        "version": "Version",
                      },
                      "FeedVersionTabs": Object {
                        "agencyCount": "Agency Count",
                        "routeCount": "Route Count",
                        "stopTimesCount": "Stop time Count",
                        "tripCount": "Trip Count",
                        "validDates": "Valid Dates",
                      },
                      "FeedVersionViewer": Object {
                        "confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                        "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                        "delete": "Delete",
                        "download": "Download",
                        "feed": "Feed",
                        "load": "Load",
                        "noVersionsExist": "No versions exist for this feed source.",
                        "status": "Status",
                        "timestamp": "File Timestamp",
                        "version": "version",
                      },
                      "GeneralSettings": Object {
                        "confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                        "deleteProject": "Delete Project?",
                        "deployment": Object {
                          "buildConfig": Object {
                            "elevationBucket": Object {
                              "accessKey": "Access Key",
                              "bucketName": "S3 Bucket Name",
                              "secretKey": "Secret Key",
                            },
                            "fares": "Fares",
                            "fetchElevationUS": "Fetch Elevation",
                            "stationTransfers": "Sta. Transfers",
                            "subwayAccessTime": "Subway Access Time",
                            "title": "Build Config",
                          },
                          "osm": Object {
                            "bounds": "Custom Extract Bounds",
                            "custom": "Use Custom Extract Bounds",
                            "gtfs": "Use GTFS-Derived Extract Bounds",
                            "title": "OSM Extract",
                          },
                          "otpServers": Object {
                            "$index": Object {
                              "admin": "Admin access only?",
                              "delete": "Remove",
                              "internalUrl": "Internal URLs",
                              "name": "Name",
                              "namePlaceholder": "Production",
                              "publicUrl": "Public URL",
                              "s3Bucket": "S3 bucket name",
                            },
                            "new": "Add server",
                            "serverPlaceholder": "Server name",
                            "title": "Servers",
                          },
                          "routerConfig": Object {
                            "brandingUrlRoot": "Branding URL Root",
                            "carDropoffTime": "Car Dropoff Time",
                            "numItineraries": "# of itineraries",
                            "requestLogFile": "Request log file",
                            "stairsReluctance": "Stairs Reluctance",
                            "title": "Router Config",
                            "updaters": Object {
                              "$index": Object {
                                "defaultAgencyId": "Default agency ID",
                                "frequencySec": "Frequency (in seconds)",
                                "sourceType": "Source type",
                                "type": "Type",
                                "url": "URL",
                              },
                              "new": "Add updater",
                              "placeholder": "Updater name",
                              "title": "Real-time updaters",
                            },
                            "walkSpeed": "Walk Speed",
                          },
                          "title": "Deployment",
                        },
                        "general": Object {
                          "location": Object {
                            "boundingBox": "Bounding box (W,S,E,N)",
                            "defaultLanguage": "Default language",
                            "defaultLocation": "Default location (lat, lng)",
                            "defaultTimeZone": "Default time zone",
                            "title": "Location",
                          },
                          "name": "Project name",
                          "title": "General",
                          "updates": Object {
                            "autoFetchFeeds": "Auto fetch feed sources?",
                            "title": "Updates",
                          },
                        },
                        "rename": "Rename",
                        "save": "Save",
                        "title": "Settings",
                      },
                      "GtfsValidationExplorer": Object {
                        "accessibilityValidation": "Accessibility Explorer",
                        "table": Object {
                          "count": "Count",
                          "file": "File",
                          "issue": "Issue",
                          "priority": "Priority",
                        },
                        "timeValidation": "Time-based Validation",
                        "title": "Validation Explorer",
                        "validationIssues": "Validation Issues",
                      },
                      "GtfsValidationViewer": Object {
                        "explorer": "Validation Explorer",
                        "issues": Object {
                          "other": "Other issues",
                          "routes": "Route issues",
                          "shapes": "Shape issues",
                          "stop_times": "Stop times issues",
                          "stops": "Stop issues",
                          "trips": "Trip issues",
                        },
                        "noResults": "No validation results to show.",
                        "title": "Validation Results",
                      },
                      "LanguageSelect": Object {
                        "placeholder": "Select language...",
                      },
                      "Login": Object {
                        "title": "Log in",
                      },
                      "NotesViewer": Object {
                        "all": "All Comments",
                        "feedSource": "Feed Source",
                        "feedVersion": "Version",
                        "new": "Post",
                        "none": "No comments.",
                        "postComment": "Post a New Comment",
                        "refresh": "Refresh",
                        "title": "Comments",
                      },
                      "OrganizationList": Object {
                        "new": "Create org",
                        "search": "Search orgs",
                      },
                      "OrganizationSettings": Object {
                        "extensions": "Extensions",
                        "logoUrl": Object {
                          "label": "Logo URL",
                          "placeholder": "http://example.com/logo_30x30.png",
                        },
                        "name": Object {
                          "label": "Name",
                          "placeholder": "Big City Transit",
                        },
                        "orgDetails": "Organization details",
                        "projects": "Projects",
                        "subDetails": "Subscription details",
                        "subscriptionBeginDate": "Subscription begins",
                        "subscriptionEndDate": "Subscription ends",
                        "usageTier": Object {
                          "high": "High",
                          "low": "Low",
                          "medium": "Medium",
                        },
                      },
                      "ProjectAccessSettings": Object {
                        "admin": "Admin",
                        "cannotFetchFeeds": "Cannot fetch feeds",
                        "custom": "Custom",
                        "feeds": "Feed Sources",
                        "noAccess": "No Access",
                        "permissions": "Permissions",
                        "title": "Project Settings for",
                      },
                      "ProjectFeedListToolbar": Object {
                        "comparison": Object {
                          "DEPLOYED": "Deployed",
                          "LATEST": "Latest",
                          "PUBLISHED": "Published",
                        },
                        "deployments": "Deployments",
                        "feeds": Object {
                          "createFirst": "Create first feed source!",
                          "new": "New",
                          "search": "Search by name",
                          "table": Object {
                            "deployable": "Deployable?",
                            "errorCount": "Errors",
                            "lastUpdated": "Updated",
                            "name": "Name",
                            "public": "Public?",
                            "retrievalMethod": "Retrieval Method",
                            "validRange": "Valid Range",
                          },
                          "title": "Feed Sources",
                          "update": "Fetch all",
                        },
                        "filter": Object {
                          "active": "Active",
                          "all": "All",
                          "expired": "Expired",
                          "expiring": "Expiring",
                          "future": "Future",
                        },
                        "makePublic": "Publish public feeds",
                        "mergeFeeds": "Merge all",
                        "settings": "Settings",
                        "sort": Object {
                          "alphabetically": Object {
                            "asc": "A-Z",
                            "desc": "Z-A",
                            "title": "Alphabetically",
                          },
                          "endDate": Object {
                            "asc": "Soonest-Latest",
                            "desc": "Latest-Soonest",
                            "title": "Expiration Date",
                          },
                          "lastUpdated": Object {
                            "asc": "Stale-Recent",
                            "desc": "Recent-Stale",
                            "title": "Last Update",
                          },
                          "numErrors": Object {
                            "asc": "Least-Most",
                            "desc": "Most-Least",
                            "title": "Number of Errors",
                          },
                          "startDate": Object {
                            "asc": "Soonest-Latest",
                            "desc": "Latest-Soonest",
                            "title": "Start Date",
                          },
                        },
                        "sync": Object {
                          "mtc": "Sync from MTC",
                          "transitfeeds": "Sync from transitfeeds",
                          "transitland": "Sync from transit.land",
                        },
                      },
                      "ProjectSettings": Object {
                        "deployment": Object {
                          "buildConfig": Object {
                            "elevationBucket": Object {
                              "accessKey": "Access Key",
                              "bucketName": "S3 Bucket Name",
                              "secretKey": "Secret Key",
                            },
                            "fares": "Fares",
                            "fetchElevationUS": "Fetch Elevation",
                            "stationTransfers": "Sta. Transfers",
                            "subwayAccessTime": "Subway Access Time",
                            "title": "Build Config",
                          },
                          "osm": Object {
                            "bounds": "Custom Extract Bounds",
                            "custom": "Use Custom Extract Bounds",
                            "gtfs": "Use GTFS-Derived Extract Bounds",
                            "title": "OSM Extract",
                          },
                          "otpServers": Object {
                            "$index": Object {
                              "admin": "Admin access only?",
                              "delete": "Remove",
                              "internalUrl": "Internal URLs",
                              "name": "Name",
                              "namePlaceholder": "Production",
                              "publicUrl": "Public URL",
                              "s3Bucket": "S3 bucket name",
                            },
                            "new": "Add server",
                            "serverPlaceholder": "Server name",
                            "title": "Servers",
                          },
                          "routerConfig": Object {
                            "brandingUrlRoot": "Branding URL Root",
                            "carDropoffTime": "Car Dropoff Time",
                            "numItineraries": "# of itineraries",
                            "requestLogFile": "Request log file",
                            "stairsReluctance": "Stairs Reluctance",
                            "title": "Router Config",
                            "updaters": Object {
                              "$index": Object {
                                "defaultAgencyId": "Default agency ID",
                                "frequencySec": "Frequency (in seconds)",
                                "sourceType": "Source type",
                                "type": "Type",
                                "url": "URL",
                              },
                              "new": "Add updater",
                              "placeholder": "Updater name",
                              "title": "Real-time updaters",
                            },
                            "walkSpeed": "Walk Speed",
                          },
                          "title": "Deployment",
                        },
                        "project": Object {
                          "cannotFetchFeeds": "Cannot fetch feeds",
                          "feeds": "Feeds",
                          "permissions": "Permissions",
                        },
                        "rename": "Rename",
                        "save": "Save",
                        "title": "Settings",
                      },
                      "ProjectSettingsForm": Object {
                        "cancel": "Cancel",
                        "confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                        "deleteProject": "Delete Project?",
                        "fields": Object {
                          "location": Object {
                            "boundingBox": "Bounding box (W,S,E,N)",
                            "defaultLanguage": "Default language",
                            "defaultLocation": "Default location (lat, lng)",
                            "defaultTimeZone": "Default time zone",
                            "title": "Location",
                          },
                          "name": "Project name",
                          "title": "General",
                          "updates": Object {
                            "autoFetchFeeds": "Auto fetch feed sources?",
                            "title": "Updates",
                          },
                        },
                        "save": "Save",
                        "title": "Settings",
                      },
                      "ProjectViewer": Object {
                        "deployments": "Deployments",
                        "feeds": Object {
                          "createFirst": "Create first feed source!",
                          "new": "New Feed Source",
                          "search": "Search by name",
                          "table": Object {
                            "deployable": "Deployable?",
                            "errorCount": "Errors",
                            "lastUpdated": "Updated",
                            "name": "Name",
                            "public": "Public?",
                            "retrievalMethod": "Retrieval Method",
                            "validRange": "Valid Range",
                          },
                          "title": "Feed Sources",
                          "update": "Fetch all",
                        },
                        "makePublic": "Publish public feeds",
                        "mergeFeeds": "Merge all",
                        "settings": "Settings",
                      },
                      "ProjectsList": Object {
                        "createFirst": "Create my first project",
                        "help": Object {
                          "content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                          "title": "What's a project?",
                        },
                        "new": "New Project",
                        "noProjects": "You currently do not have any projects.",
                        "search": "Search by project name",
                        "table": Object {
                          "name": "Project Name",
                        },
                        "title": "Projects",
                      },
                      "PublicFeedsTable": Object {
                        "country": "Country",
                        "lastUpdated": "Last Updated",
                        "link": "Link to GTFS",
                        "name": "Feed Name",
                        "region": "Region",
                        "search": "Search",
                        "stateProvince": "State or Province",
                      },
                      "PublicFeedsViewer": Object {
                        "title": "Catalogue",
                      },
                      "RegionSearch": Object {
                        "placeholder": "Search for regions or agencies",
                      },
                      "ResultTable": Object {
                        "affectedIds": "Affected ID(s)",
                        "description": "Description",
                        "line": "Line",
                        "priority": "Priority",
                        "problemType": "Problem Type",
                      },
                      "Sidebar": Object {
                        "unknown": "Unknown",
                      },
                      "SnapshotItem": Object {
                        "active": "Active",
                        "confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                        "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                        "createFromScratch": "Create GTFS from Scratch",
                        "created": "created",
                        "date": "Date",
                        "delete": "Delete",
                        "download": "Download",
                        "feed": "Feed",
                        "load": "Load for Editing",
                        "loadLatest": "Load latest for editing",
                        "name": "Name",
                        "noVersions": "(No Versions)",
                        "noVersionsExist": "No versions exist for this feed source.",
                        "of": "of",
                        "publish": "Publish",
                        "restore": "Restore",
                        "snapshot": "snapshot",
                        "title": "Snapshots",
                        "version": "Version",
                      },
                      "StarButton": Object {
                        "star": "Star",
                        "unstar": "Unstar",
                      },
                      "TimetableHelpModal": Object {
                        "shortcuts": Object {
                          "modify": Object {
                            "desc": Array [
                              "Delete selected trip(s)",
                              "New trip",
                              "Clone selected trip(s)",
                              "Copy time value from adjacent cell (the cell immediately to the left)",
                              "Copy value from cell directly above",
                            ],
                            "title": "Modify trips",
                          },
                          "navigate": Object {
                            "desc": Array [
                              "Previous/next trip",
                              "Previous/next column",
                              "Select trip",
                              "Select all trips",
                              "Deselect all trips",
                            ],
                            "title": "Navigating and selecting trips",
                          },
                          "offset": Object {
                            "desc": Array [
                              "Offset selected trips' stop times by adding offset time",
                              "Offset selected trips' stop times by subtracting offset time",
                              "Offset only active cell's time by adding offset time",
                              "Offset only active cell's time by subtracting offset time",
                              "Decrease offset time by 1 minute",
                              "Decrease offset time by 10 minutes",
                              "Increase offset time by 1 minute",
                              "Increase offset time by 10 minutes",
                            ],
                            "title": "Offsetting times",
                          },
                        },
                        "title": "Timetable editor keyboard shortcuts",
                      },
                      "TimezoneSelect": Object {
                        "placeholder": "Select timezone...",
                      },
                      "UserAccount": Object {
                        "account": Object {
                          "title": "Account",
                        },
                        "billing": Object {
                          "title": "Billing",
                        },
                        "notifications": Object {
                          "methods": "Notification methods",
                          "subscriptions": "Your subscriptions",
                          "title": "Notifications",
                          "unsubscribeAll": "Unsubscribe from all",
                        },
                        "organizationSettings": "Organization settings",
                        "organizations": Object {
                          "title": "Organizations",
                        },
                        "personalSettings": "Personal settings",
                        "profile": Object {
                          "profileInformation": "Profile information",
                          "title": "Profile",
                        },
                        "title": "My settings",
                      },
                      "UserAdmin": Object {
                        "noAccess": "You do not have sufficient user privileges to access this area.",
                        "title": "Administration",
                      },
                      "UserHomePage": Object {
                        "createFirst": "Create my first project",
                        "help": Object {
                          "content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                          "title": "What's a project?",
                        },
                        "new": "New Project",
                        "noProjects": "You currently do not have any projects.",
                        "table": Object {
                          "name": "Project Name",
                        },
                        "title": "Projects",
                      },
                      "UserList": Object {
                        "filterByOrg": "Filter by org.",
                        "of": "of",
                        "search": "Search by username",
                        "showing": "Showing Users",
                        "title": "User Management",
                      },
                      "UserRow": Object {
                        "appAdmin": "App admin",
                        "cancel": "Cancel",
                        "delete": "Delete",
                        "deleteConfirm": "Are you sure you want to permanently delete this user?",
                        "edit": "Edit",
                        "orgAdmin": "Org admin",
                        "save": "Save",
                      },
                      "UserSettings": Object {
                        "admin": Object {
                          "description": "Application administrators have full access to all projects.",
                          "title": "Application Admininistrator",
                        },
                        "application": "Application Settings",
                        "cancel": "Cancel",
                        "delete": "Delete",
                        "edit": "Edit",
                        "org": Object {
                          "admin": "Organization administrator",
                          "billing": "Billing admin",
                          "description": "Organization administrators have full access to projects within the organization.",
                        },
                        "project": Object {
                          "admin": "Admin",
                          "custom": "Custom",
                          "noAccess": "No Access",
                        },
                        "save": "Save",
                      },
                      "VersionButtonToolbar": Object {
                        "confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                        "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                        "delete": "Delete",
                        "download": "Download",
                        "feed": "Feed",
                        "load": "Load",
                        "noVersionsExist": "No versions exist for this feed source.",
                        "status": "Status",
                        "timestamp": "File Timestamp",
                        "version": "version",
                      },
                      "WatchButton": Object {
                        "unwatch": "Unwatch",
                        "watch": "Watch",
                      },
                    },
                    "components.Breadcrumbs.deployments": "Deployments",
                    "components.Breadcrumbs.projects": "Projects",
                    "components.Breadcrumbs.root": "Explore",
                    "components.CollapsiblePanel.deployment.buildConfig.elevationBucket.accessKey": "Access Key",
                    "components.CollapsiblePanel.deployment.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                    "components.CollapsiblePanel.deployment.buildConfig.elevationBucket.secretKey": "Secret Key",
                    "components.CollapsiblePanel.deployment.buildConfig.fares": "Fares",
                    "components.CollapsiblePanel.deployment.buildConfig.fetchElevationUS": "Fetch Elevation",
                    "components.CollapsiblePanel.deployment.buildConfig.stationTransfers": "Sta. Transfers",
                    "components.CollapsiblePanel.deployment.buildConfig.subwayAccessTime": "Subway Access Time",
                    "components.CollapsiblePanel.deployment.buildConfig.title": "Build Config",
                    "components.CollapsiblePanel.deployment.osm.bounds": "Custom Extract Bounds",
                    "components.CollapsiblePanel.deployment.osm.custom": "Use Custom Extract Bounds",
                    "components.CollapsiblePanel.deployment.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                    "components.CollapsiblePanel.deployment.osm.title": "OSM Extract",
                    "components.CollapsiblePanel.deployment.otpServers.$index.admin": "Admin access only?",
                    "components.CollapsiblePanel.deployment.otpServers.$index.delete": "Remove",
                    "components.CollapsiblePanel.deployment.otpServers.$index.internalUrl": "Internal URLs",
                    "components.CollapsiblePanel.deployment.otpServers.$index.name": "Name",
                    "components.CollapsiblePanel.deployment.otpServers.$index.namePlaceholder": "Production",
                    "components.CollapsiblePanel.deployment.otpServers.$index.publicUrl": "Public URL",
                    "components.CollapsiblePanel.deployment.otpServers.$index.s3Bucket": "S3 bucket name",
                    "components.CollapsiblePanel.deployment.otpServers.new": "Add server",
                    "components.CollapsiblePanel.deployment.otpServers.serverPlaceholder": "Server name",
                    "components.CollapsiblePanel.deployment.otpServers.title": "Servers",
                    "components.CollapsiblePanel.deployment.routerConfig.brandingUrlRoot": "Branding URL Root",
                    "components.CollapsiblePanel.deployment.routerConfig.carDropoffTime": "Car Dropoff Time",
                    "components.CollapsiblePanel.deployment.routerConfig.numItineraries": "# of itineraries",
                    "components.CollapsiblePanel.deployment.routerConfig.requestLogFile": "Request log file",
                    "components.CollapsiblePanel.deployment.routerConfig.stairsReluctance": "Stairs Reluctance",
                    "components.CollapsiblePanel.deployment.routerConfig.title": "Router Config",
                    "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                    "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                    "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.sourceType": "Source type",
                    "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.type": "Type",
                    "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.url": "URL",
                    "components.CollapsiblePanel.deployment.routerConfig.updaters.new": "Add updater",
                    "components.CollapsiblePanel.deployment.routerConfig.updaters.placeholder": "Updater name",
                    "components.CollapsiblePanel.deployment.routerConfig.updaters.title": "Real-time updaters",
                    "components.CollapsiblePanel.deployment.routerConfig.walkSpeed": "Walk Speed",
                    "components.CollapsiblePanel.deployment.title": "Deployment",
                    "components.CreateUser.new": "Create User",
                    "components.DatatoolsNavbar.account": "My Account",
                    "components.DatatoolsNavbar.alerts": "Alerts",
                    "components.DatatoolsNavbar.editor": "Editor",
                    "components.DatatoolsNavbar.guide": "Guide",
                    "components.DatatoolsNavbar.login": "Log In",
                    "components.DatatoolsNavbar.logout": "Log Out",
                    "components.DatatoolsNavbar.manager": "Manager",
                    "components.DatatoolsNavbar.resetPassword": "Reset Password",
                    "components.DatatoolsNavbar.signConfig": "eTID Config",
                    "components.DatatoolsNavbar.users": "Users",
                    "components.DeploymentConfirmModal.alert.alreadyDeployed": "is already deployed to this server at the same router. (Deploying would evict the current graph.)",
                    "components.DeploymentConfirmModal.alert.boundsTooLarge": "Bounds are much too large to successfully deploy to OpenTripPlanner. Deployment is disabled.",
                    "components.DeploymentConfirmModal.alert.expiredFeeds": "The following feeds have expired (all scheduled trips are for past dates)",
                    "components.DeploymentConfirmModal.alert.missingBounds": "There are no bounds defined for the set of feeds. Deployment is disabled.",
                    "components.DeploymentConfirmModal.alert.missingFeeds": "There are no feeds defined for this deployment. Deployment is disabled.",
                    "components.DeploymentConfirmModal.alert.success": "Deployment successfully deployed.",
                    "components.DeploymentConfirmModal.cancel": "Cancel",
                    "components.DeploymentConfirmModal.close": "Close",
                    "components.DeploymentConfirmModal.danger": "Danger!",
                    "components.DeploymentConfirmModal.deploy": "Deploy",
                    "components.DeploymentConfirmModal.invalidBounds": "Bounds are invalid!",
                    "components.DeploymentConfirmModal.success": "Success!",
                    "components.DeploymentConfirmModal.to": "to",
                    "components.DeploymentConfirmModal.warning": "Warning!",
                    "components.DeploymentConfirmModalAlert.danger": "Danger!",
                    "components.DeploymentConfirmModalAlert.success": "Success!",
                    "components.DeploymentConfirmModalAlert.warning": "Warning!",
                    "components.DeploymentSettings.buildConfig.elevationBucket.accessKey": "Access Key",
                    "components.DeploymentSettings.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                    "components.DeploymentSettings.buildConfig.elevationBucket.secretKey": "Secret Key",
                    "components.DeploymentSettings.buildConfig.fares": "Fares",
                    "components.DeploymentSettings.buildConfig.fetchElevationUS": "Fetch Elevation",
                    "components.DeploymentSettings.buildConfig.save": "Save",
                    "components.DeploymentSettings.buildConfig.stationTransfers": "Sta. Transfers",
                    "components.DeploymentSettings.buildConfig.subwayAccessTime": "Subway Access Time",
                    "components.DeploymentSettings.buildConfig.title": "Build Config",
                    "components.DeploymentSettings.osm.bounds": "Custom Extract Bounds",
                    "components.DeploymentSettings.osm.custom": "Use Custom Extract Bounds",
                    "components.DeploymentSettings.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                    "components.DeploymentSettings.osm.title": "OSM Extract",
                    "components.DeploymentSettings.otpServers.$index.admin": "Admin access only?",
                    "components.DeploymentSettings.otpServers.$index.delete": "Remove",
                    "components.DeploymentSettings.otpServers.$index.internalUrl": "Internal URLs",
                    "components.DeploymentSettings.otpServers.$index.name": "Name",
                    "components.DeploymentSettings.otpServers.$index.namePlaceholder": "Production",
                    "components.DeploymentSettings.otpServers.$index.publicUrl": "Public URL",
                    "components.DeploymentSettings.otpServers.$index.s3Bucket": "S3 bucket name",
                    "components.DeploymentSettings.otpServers.new": "Add server",
                    "components.DeploymentSettings.otpServers.serverPlaceholder": "Server name",
                    "components.DeploymentSettings.otpServers.title": "Servers",
                    "components.DeploymentSettings.routerConfig.brandingUrlRoot": "Branding URL Root",
                    "components.DeploymentSettings.routerConfig.carDropoffTime": "Car Dropoff Time",
                    "components.DeploymentSettings.routerConfig.numItineraries": "# of itineraries",
                    "components.DeploymentSettings.routerConfig.requestLogFile": "Request log file",
                    "components.DeploymentSettings.routerConfig.stairsReluctance": "Stairs Reluctance",
                    "components.DeploymentSettings.routerConfig.title": "Router Config",
                    "components.DeploymentSettings.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                    "components.DeploymentSettings.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                    "components.DeploymentSettings.routerConfig.updaters.$index.sourceType": "Source type",
                    "components.DeploymentSettings.routerConfig.updaters.$index.type": "Type",
                    "components.DeploymentSettings.routerConfig.updaters.$index.url": "URL",
                    "components.DeploymentSettings.routerConfig.updaters.new": "Add updater",
                    "components.DeploymentSettings.routerConfig.updaters.placeholder": "Updater name",
                    "components.DeploymentSettings.routerConfig.updaters.title": "Real-time updaters",
                    "components.DeploymentSettings.routerConfig.walkSpeed": "Walk Speed",
                    "components.DeploymentSettings.save": "Save",
                    "components.DeploymentSettings.title": "Deployment",
                    "components.DeploymentVersionsTable.dateRetrieved": "Date Retrieved",
                    "components.DeploymentVersionsTable.errorCount": "Error Count",
                    "components.DeploymentVersionsTable.expires": "Expires",
                    "components.DeploymentVersionsTable.loadStatus": "Loaded Successfully",
                    "components.DeploymentVersionsTable.name": "Name",
                    "components.DeploymentVersionsTable.routeCount": "Route Count",
                    "components.DeploymentVersionsTable.stopTimesCount": "Stop time count",
                    "components.DeploymentVersionsTable.tripCount": "Trip Count",
                    "components.DeploymentVersionsTable.validFrom": "Valid from",
                    "components.DeploymentVersionsTable.version": "Version",
                    "components.DeploymentViewer.addFeedSource": "Add Feed Source",
                    "components.DeploymentViewer.allFeedsAdded": "All feeds added",
                    "components.DeploymentViewer.deploy": "Deploy",
                    "components.DeploymentViewer.download": "Download",
                    "components.DeploymentViewer.noServers": "No servers defined",
                    "components.DeploymentViewer.search": "Search by name",
                    "components.DeploymentViewer.table.dateRetrieved": "Date Retrieved",
                    "components.DeploymentViewer.table.errorCount": "Error Count",
                    "components.DeploymentViewer.table.expires": "Expires",
                    "components.DeploymentViewer.table.loadStatus": "Loaded Successfully",
                    "components.DeploymentViewer.table.name": "Name",
                    "components.DeploymentViewer.table.routeCount": "Route Count",
                    "components.DeploymentViewer.table.stopTimesCount": "Stop time count",
                    "components.DeploymentViewer.table.tripCount": "Trip Count",
                    "components.DeploymentViewer.table.validFrom": "Valid from",
                    "components.DeploymentViewer.table.version": "Version",
                    "components.DeploymentViewer.to": "to",
                    "components.DeploymentViewer.versions": "Feed Versions",
                    "components.DeploymentsList.delete": "Remove deployment",
                    "components.DeploymentsList.new": "New Deployment",
                    "components.DeploymentsList.search": "Search for deployments",
                    "components.DeploymentsList.table.creationDate": "Created",
                    "components.DeploymentsList.table.deployedTo": "Deployed to",
                    "components.DeploymentsList.table.feedCount": "# of feeds",
                    "components.DeploymentsList.table.lastDeployed": "Last deployed",
                    "components.DeploymentsList.table.name": "Name",
                    "components.DeploymentsList.table.testDeployment": "Test?",
                    "components.DeploymentsList.title": "Deployments",
                    "components.DeploymentsPanel.delete": "Remove deployment",
                    "components.DeploymentsPanel.new": "New Deployment",
                    "components.DeploymentsPanel.search": "Search for deployments",
                    "components.DeploymentsPanel.table.creationDate": "Created",
                    "components.DeploymentsPanel.table.deployedTo": "Deployed to",
                    "components.DeploymentsPanel.table.feedCount": "# of feeds",
                    "components.DeploymentsPanel.table.lastDeployed": "Last deployed",
                    "components.DeploymentsPanel.table.name": "Name",
                    "components.DeploymentsPanel.table.testDeployment": "Test?",
                    "components.DeploymentsPanel.title": "Deployments",
                    "components.EditorFeedSourcePanel.active": "Active",
                    "components.EditorFeedSourcePanel.confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                    "components.EditorFeedSourcePanel.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                    "components.EditorFeedSourcePanel.createFromScratch": "Create GTFS from Scratch",
                    "components.EditorFeedSourcePanel.created": "created",
                    "components.EditorFeedSourcePanel.date": "Date",
                    "components.EditorFeedSourcePanel.delete": "Delete",
                    "components.EditorFeedSourcePanel.download": "Download",
                    "components.EditorFeedSourcePanel.feed": "Feed",
                    "components.EditorFeedSourcePanel.help.body.0": "Snapshots are save points you can always revert back to when editing a GTFS feed.",
                    "components.EditorFeedSourcePanel.help.body.1": "A snapshot might represent a work-in-progress, future planning scenario or even different service patterns (e.g., summer schedule markup).",
                    "components.EditorFeedSourcePanel.help.title": "What are snapshots?",
                    "components.EditorFeedSourcePanel.load": "Load for Editing",
                    "components.EditorFeedSourcePanel.loadLatest": "Load latest for editing",
                    "components.EditorFeedSourcePanel.name": "Name",
                    "components.EditorFeedSourcePanel.noSnapshotsExist": "No snapshots currently exist for this feed. Snapshots can be created within the Editor. Click \\"Edit Feed\\" to enter editing mode.",
                    "components.EditorFeedSourcePanel.noVersions": "(No Versions)",
                    "components.EditorFeedSourcePanel.noVersionsExist": "No versions exist for this feed source.",
                    "components.EditorFeedSourcePanel.of": "of",
                    "components.EditorFeedSourcePanel.publish": "Publish",
                    "components.EditorFeedSourcePanel.restore": "Restore",
                    "components.EditorFeedSourcePanel.snapshot": "snapshot",
                    "components.EditorFeedSourcePanel.title": "Snapshots",
                    "components.EditorFeedSourcePanel.version": "Version",
                    "components.FeedInfoPanel.uploadShapefile.body": "Select a zipped shapefile to display on map. Note: this is only for use as a visual aid.",
                    "components.FeedInfoPanel.uploadShapefile.error": "Uploaded file must be a valid zip file (.zip).",
                    "components.FeedInfoPanel.uploadShapefile.title": "Upload route shapefile",
                    "components.FeedSourceAttributes.lastUpdated": "Updated",
                    "components.FeedSourcePanel.search": "Search feeds",
                    "components.FeedSourceTable.comparisonColumn.DEPLOYED": "Deployed Version",
                    "components.FeedSourceTable.comparisonColumn.PUBLISHED": "Published Version",
                    "components.FeedSourceTable.createFirst": "Create first feed source!",
                    "components.FeedSourceTableRow.status.active": "Active",
                    "components.FeedSourceTableRow.status.all": "All",
                    "components.FeedSourceTableRow.status.expired": "Expired",
                    "components.FeedSourceTableRow.status.expiring-within-20-days": "Expiring within 20 days",
                    "components.FeedSourceTableRow.status.expiring-within-5-days": "Expiring within 5 days",
                    "components.FeedSourceTableRow.status.feedNotInDeployment": "Feed not in deployment",
                    "components.FeedSourceTableRow.status.feedNotPublished": "Feed not published",
                    "components.FeedSourceTableRow.status.future": "Future",
                    "components.FeedSourceTableRow.status.no-version": "No version",
                    "components.FeedSourceTableRow.status.same-as-deployed": "Same as Deployed",
                    "components.FeedSourceTableRow.status.same-as-published": "Same as Published",
                    "components.FeedSourceViewer.deploy": "Deploy",
                    "components.FeedSourceViewer.edit": "Edit GTFS",
                    "components.FeedSourceViewer.gtfs": "GTFS",
                    "components.FeedSourceViewer.notesTitle": "Notes",
                    "components.FeedSourceViewer.private": "Private view",
                    "components.FeedSourceViewer.properties.deployable": "Deployable?",
                    "components.FeedSourceViewer.properties.name": "Name",
                    "components.FeedSourceViewer.properties.noneSelected": "(None Selected)",
                    "components.FeedSourceViewer.properties.property": "Property",
                    "components.FeedSourceViewer.properties.public": "Public?",
                    "components.FeedSourceViewer.properties.retrievalMethod.fetchedAutomatically": "Fetched Automatically",
                    "components.FeedSourceViewer.properties.retrievalMethod.manuallyUploaded": "Manually Uploaded",
                    "components.FeedSourceViewer.properties.retrievalMethod.producedInHouse": "Produced In-house",
                    "components.FeedSourceViewer.properties.retrievalMethod.title": "Retrieval Method",
                    "components.FeedSourceViewer.properties.snapshot": "Editor Snapshot",
                    "components.FeedSourceViewer.properties.title": "Settings",
                    "components.FeedSourceViewer.properties.value": "Value",
                    "components.FeedSourceViewer.snapshotsTitle": "Snapshots",
                    "components.FeedSourceViewer.update": "Update",
                    "components.FeedSourceViewer.upload": "Upload",
                    "components.FeedSourceViewer.versions": "Versions",
                    "components.FeedSourceViewer.viewPublic": "View public page",
                    "components.FeedVersionNavigator.confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                    "components.FeedVersionNavigator.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                    "components.FeedVersionNavigator.delete": "Delete",
                    "components.FeedVersionNavigator.download": "Download",
                    "components.FeedVersionNavigator.feed": "Feed",
                    "components.FeedVersionNavigator.load": "Load for Editing",
                    "components.FeedVersionNavigator.next": "Next",
                    "components.FeedVersionNavigator.of": "of",
                    "components.FeedVersionNavigator.previous": "Previous",
                    "components.FeedVersionNavigator.version": "Version",
                    "components.FeedVersionTabs.agencyCount": "Agency Count",
                    "components.FeedVersionTabs.routeCount": "Route Count",
                    "components.FeedVersionTabs.stopTimesCount": "Stop time Count",
                    "components.FeedVersionTabs.tripCount": "Trip Count",
                    "components.FeedVersionTabs.validDates": "Valid Dates",
                    "components.FeedVersionViewer.confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                    "components.FeedVersionViewer.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                    "components.FeedVersionViewer.delete": "Delete",
                    "components.FeedVersionViewer.download": "Download",
                    "components.FeedVersionViewer.feed": "Feed",
                    "components.FeedVersionViewer.load": "Load",
                    "components.FeedVersionViewer.noVersionsExist": "No versions exist for this feed source.",
                    "components.FeedVersionViewer.status": "Status",
                    "components.FeedVersionViewer.timestamp": "File Timestamp",
                    "components.FeedVersionViewer.version": "version",
                    "components.GeneralSettings.confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                    "components.GeneralSettings.deleteProject": "Delete Project?",
                    "components.GeneralSettings.deployment.buildConfig.elevationBucket.accessKey": "Access Key",
                    "components.GeneralSettings.deployment.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                    "components.GeneralSettings.deployment.buildConfig.elevationBucket.secretKey": "Secret Key",
                    "components.GeneralSettings.deployment.buildConfig.fares": "Fares",
                    "components.GeneralSettings.deployment.buildConfig.fetchElevationUS": "Fetch Elevation",
                    "components.GeneralSettings.deployment.buildConfig.stationTransfers": "Sta. Transfers",
                    "components.GeneralSettings.deployment.buildConfig.subwayAccessTime": "Subway Access Time",
                    "components.GeneralSettings.deployment.buildConfig.title": "Build Config",
                    "components.GeneralSettings.deployment.osm.bounds": "Custom Extract Bounds",
                    "components.GeneralSettings.deployment.osm.custom": "Use Custom Extract Bounds",
                    "components.GeneralSettings.deployment.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                    "components.GeneralSettings.deployment.osm.title": "OSM Extract",
                    "components.GeneralSettings.deployment.otpServers.$index.admin": "Admin access only?",
                    "components.GeneralSettings.deployment.otpServers.$index.delete": "Remove",
                    "components.GeneralSettings.deployment.otpServers.$index.internalUrl": "Internal URLs",
                    "components.GeneralSettings.deployment.otpServers.$index.name": "Name",
                    "components.GeneralSettings.deployment.otpServers.$index.namePlaceholder": "Production",
                    "components.GeneralSettings.deployment.otpServers.$index.publicUrl": "Public URL",
                    "components.GeneralSettings.deployment.otpServers.$index.s3Bucket": "S3 bucket name",
                    "components.GeneralSettings.deployment.otpServers.new": "Add server",
                    "components.GeneralSettings.deployment.otpServers.serverPlaceholder": "Server name",
                    "components.GeneralSettings.deployment.otpServers.title": "Servers",
                    "components.GeneralSettings.deployment.routerConfig.brandingUrlRoot": "Branding URL Root",
                    "components.GeneralSettings.deployment.routerConfig.carDropoffTime": "Car Dropoff Time",
                    "components.GeneralSettings.deployment.routerConfig.numItineraries": "# of itineraries",
                    "components.GeneralSettings.deployment.routerConfig.requestLogFile": "Request log file",
                    "components.GeneralSettings.deployment.routerConfig.stairsReluctance": "Stairs Reluctance",
                    "components.GeneralSettings.deployment.routerConfig.title": "Router Config",
                    "components.GeneralSettings.deployment.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                    "components.GeneralSettings.deployment.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                    "components.GeneralSettings.deployment.routerConfig.updaters.$index.sourceType": "Source type",
                    "components.GeneralSettings.deployment.routerConfig.updaters.$index.type": "Type",
                    "components.GeneralSettings.deployment.routerConfig.updaters.$index.url": "URL",
                    "components.GeneralSettings.deployment.routerConfig.updaters.new": "Add updater",
                    "components.GeneralSettings.deployment.routerConfig.updaters.placeholder": "Updater name",
                    "components.GeneralSettings.deployment.routerConfig.updaters.title": "Real-time updaters",
                    "components.GeneralSettings.deployment.routerConfig.walkSpeed": "Walk Speed",
                    "components.GeneralSettings.deployment.title": "Deployment",
                    "components.GeneralSettings.general.location.boundingBox": "Bounding box (W,S,E,N)",
                    "components.GeneralSettings.general.location.defaultLanguage": "Default language",
                    "components.GeneralSettings.general.location.defaultLocation": "Default location (lat, lng)",
                    "components.GeneralSettings.general.location.defaultTimeZone": "Default time zone",
                    "components.GeneralSettings.general.location.title": "Location",
                    "components.GeneralSettings.general.name": "Project name",
                    "components.GeneralSettings.general.title": "General",
                    "components.GeneralSettings.general.updates.autoFetchFeeds": "Auto fetch feed sources?",
                    "components.GeneralSettings.general.updates.title": "Updates",
                    "components.GeneralSettings.rename": "Rename",
                    "components.GeneralSettings.save": "Save",
                    "components.GeneralSettings.title": "Settings",
                    "components.GtfsValidationExplorer.accessibilityValidation": "Accessibility Explorer",
                    "components.GtfsValidationExplorer.table.count": "Count",
                    "components.GtfsValidationExplorer.table.file": "File",
                    "components.GtfsValidationExplorer.table.issue": "Issue",
                    "components.GtfsValidationExplorer.table.priority": "Priority",
                    "components.GtfsValidationExplorer.timeValidation": "Time-based Validation",
                    "components.GtfsValidationExplorer.title": "Validation Explorer",
                    "components.GtfsValidationExplorer.validationIssues": "Validation Issues",
                    "components.GtfsValidationViewer.explorer": "Validation Explorer",
                    "components.GtfsValidationViewer.issues.other": "Other issues",
                    "components.GtfsValidationViewer.issues.routes": "Route issues",
                    "components.GtfsValidationViewer.issues.shapes": "Shape issues",
                    "components.GtfsValidationViewer.issues.stop_times": "Stop times issues",
                    "components.GtfsValidationViewer.issues.stops": "Stop issues",
                    "components.GtfsValidationViewer.issues.trips": "Trip issues",
                    "components.GtfsValidationViewer.noResults": "No validation results to show.",
                    "components.GtfsValidationViewer.title": "Validation Results",
                    "components.LanguageSelect.placeholder": "Select language...",
                    "components.Login.title": "Log in",
                    "components.NotesViewer.all": "All Comments",
                    "components.NotesViewer.feedSource": "Feed Source",
                    "components.NotesViewer.feedVersion": "Version",
                    "components.NotesViewer.new": "Post",
                    "components.NotesViewer.none": "No comments.",
                    "components.NotesViewer.postComment": "Post a New Comment",
                    "components.NotesViewer.refresh": "Refresh",
                    "components.NotesViewer.title": "Comments",
                    "components.OrganizationList.new": "Create org",
                    "components.OrganizationList.search": "Search orgs",
                    "components.OrganizationSettings.extensions": "Extensions",
                    "components.OrganizationSettings.logoUrl.label": "Logo URL",
                    "components.OrganizationSettings.logoUrl.placeholder": "http://example.com/logo_30x30.png",
                    "components.OrganizationSettings.name.label": "Name",
                    "components.OrganizationSettings.name.placeholder": "Big City Transit",
                    "components.OrganizationSettings.orgDetails": "Organization details",
                    "components.OrganizationSettings.projects": "Projects",
                    "components.OrganizationSettings.subDetails": "Subscription details",
                    "components.OrganizationSettings.subscriptionBeginDate": "Subscription begins",
                    "components.OrganizationSettings.subscriptionEndDate": "Subscription ends",
                    "components.OrganizationSettings.usageTier.high": "High",
                    "components.OrganizationSettings.usageTier.low": "Low",
                    "components.OrganizationSettings.usageTier.medium": "Medium",
                    "components.ProjectAccessSettings.admin": "Admin",
                    "components.ProjectAccessSettings.cannotFetchFeeds": "Cannot fetch feeds",
                    "components.ProjectAccessSettings.custom": "Custom",
                    "components.ProjectAccessSettings.feeds": "Feed Sources",
                    "components.ProjectAccessSettings.noAccess": "No Access",
                    "components.ProjectAccessSettings.permissions": "Permissions",
                    "components.ProjectAccessSettings.title": "Project Settings for",
                    "components.ProjectFeedListToolbar.comparison.DEPLOYED": "Deployed",
                    "components.ProjectFeedListToolbar.comparison.LATEST": "Latest",
                    "components.ProjectFeedListToolbar.comparison.PUBLISHED": "Published",
                    "components.ProjectFeedListToolbar.deployments": "Deployments",
                    "components.ProjectFeedListToolbar.feeds.createFirst": "Create first feed source!",
                    "components.ProjectFeedListToolbar.feeds.new": "New",
                    "components.ProjectFeedListToolbar.feeds.search": "Search by name",
                    "components.ProjectFeedListToolbar.feeds.table.deployable": "Deployable?",
                    "components.ProjectFeedListToolbar.feeds.table.errorCount": "Errors",
                    "components.ProjectFeedListToolbar.feeds.table.lastUpdated": "Updated",
                    "components.ProjectFeedListToolbar.feeds.table.name": "Name",
                    "components.ProjectFeedListToolbar.feeds.table.public": "Public?",
                    "components.ProjectFeedListToolbar.feeds.table.retrievalMethod": "Retrieval Method",
                    "components.ProjectFeedListToolbar.feeds.table.validRange": "Valid Range",
                    "components.ProjectFeedListToolbar.feeds.title": "Feed Sources",
                    "components.ProjectFeedListToolbar.feeds.update": "Fetch all",
                    "components.ProjectFeedListToolbar.filter.active": "Active",
                    "components.ProjectFeedListToolbar.filter.all": "All",
                    "components.ProjectFeedListToolbar.filter.expired": "Expired",
                    "components.ProjectFeedListToolbar.filter.expiring": "Expiring",
                    "components.ProjectFeedListToolbar.filter.future": "Future",
                    "components.ProjectFeedListToolbar.makePublic": "Publish public feeds",
                    "components.ProjectFeedListToolbar.mergeFeeds": "Merge all",
                    "components.ProjectFeedListToolbar.settings": "Settings",
                    "components.ProjectFeedListToolbar.sort.alphabetically.asc": "A-Z",
                    "components.ProjectFeedListToolbar.sort.alphabetically.desc": "Z-A",
                    "components.ProjectFeedListToolbar.sort.alphabetically.title": "Alphabetically",
                    "components.ProjectFeedListToolbar.sort.endDate.asc": "Soonest-Latest",
                    "components.ProjectFeedListToolbar.sort.endDate.desc": "Latest-Soonest",
                    "components.ProjectFeedListToolbar.sort.endDate.title": "Expiration Date",
                    "components.ProjectFeedListToolbar.sort.lastUpdated.asc": "Stale-Recent",
                    "components.ProjectFeedListToolbar.sort.lastUpdated.desc": "Recent-Stale",
                    "components.ProjectFeedListToolbar.sort.lastUpdated.title": "Last Update",
                    "components.ProjectFeedListToolbar.sort.numErrors.asc": "Least-Most",
                    "components.ProjectFeedListToolbar.sort.numErrors.desc": "Most-Least",
                    "components.ProjectFeedListToolbar.sort.numErrors.title": "Number of Errors",
                    "components.ProjectFeedListToolbar.sort.startDate.asc": "Soonest-Latest",
                    "components.ProjectFeedListToolbar.sort.startDate.desc": "Latest-Soonest",
                    "components.ProjectFeedListToolbar.sort.startDate.title": "Start Date",
                    "components.ProjectFeedListToolbar.sync.mtc": "Sync from MTC",
                    "components.ProjectFeedListToolbar.sync.transitfeeds": "Sync from transitfeeds",
                    "components.ProjectFeedListToolbar.sync.transitland": "Sync from transit.land",
                    "components.ProjectSettings.deployment.buildConfig.elevationBucket.accessKey": "Access Key",
                    "components.ProjectSettings.deployment.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                    "components.ProjectSettings.deployment.buildConfig.elevationBucket.secretKey": "Secret Key",
                    "components.ProjectSettings.deployment.buildConfig.fares": "Fares",
                    "components.ProjectSettings.deployment.buildConfig.fetchElevationUS": "Fetch Elevation",
                    "components.ProjectSettings.deployment.buildConfig.stationTransfers": "Sta. Transfers",
                    "components.ProjectSettings.deployment.buildConfig.subwayAccessTime": "Subway Access Time",
                    "components.ProjectSettings.deployment.buildConfig.title": "Build Config",
                    "components.ProjectSettings.deployment.osm.bounds": "Custom Extract Bounds",
                    "components.ProjectSettings.deployment.osm.custom": "Use Custom Extract Bounds",
                    "components.ProjectSettings.deployment.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                    "components.ProjectSettings.deployment.osm.title": "OSM Extract",
                    "components.ProjectSettings.deployment.otpServers.$index.admin": "Admin access only?",
                    "components.ProjectSettings.deployment.otpServers.$index.delete": "Remove",
                    "components.ProjectSettings.deployment.otpServers.$index.internalUrl": "Internal URLs",
                    "components.ProjectSettings.deployment.otpServers.$index.name": "Name",
                    "components.ProjectSettings.deployment.otpServers.$index.namePlaceholder": "Production",
                    "components.ProjectSettings.deployment.otpServers.$index.publicUrl": "Public URL",
                    "components.ProjectSettings.deployment.otpServers.$index.s3Bucket": "S3 bucket name",
                    "components.ProjectSettings.deployment.otpServers.new": "Add server",
                    "components.ProjectSettings.deployment.otpServers.serverPlaceholder": "Server name",
                    "components.ProjectSettings.deployment.otpServers.title": "Servers",
                    "components.ProjectSettings.deployment.routerConfig.brandingUrlRoot": "Branding URL Root",
                    "components.ProjectSettings.deployment.routerConfig.carDropoffTime": "Car Dropoff Time",
                    "components.ProjectSettings.deployment.routerConfig.numItineraries": "# of itineraries",
                    "components.ProjectSettings.deployment.routerConfig.requestLogFile": "Request log file",
                    "components.ProjectSettings.deployment.routerConfig.stairsReluctance": "Stairs Reluctance",
                    "components.ProjectSettings.deployment.routerConfig.title": "Router Config",
                    "components.ProjectSettings.deployment.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                    "components.ProjectSettings.deployment.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                    "components.ProjectSettings.deployment.routerConfig.updaters.$index.sourceType": "Source type",
                    "components.ProjectSettings.deployment.routerConfig.updaters.$index.type": "Type",
                    "components.ProjectSettings.deployment.routerConfig.updaters.$index.url": "URL",
                    "components.ProjectSettings.deployment.routerConfig.updaters.new": "Add updater",
                    "components.ProjectSettings.deployment.routerConfig.updaters.placeholder": "Updater name",
                    "components.ProjectSettings.deployment.routerConfig.updaters.title": "Real-time updaters",
                    "components.ProjectSettings.deployment.routerConfig.walkSpeed": "Walk Speed",
                    "components.ProjectSettings.deployment.title": "Deployment",
                    "components.ProjectSettings.project.cannotFetchFeeds": "Cannot fetch feeds",
                    "components.ProjectSettings.project.feeds": "Feeds",
                    "components.ProjectSettings.project.permissions": "Permissions",
                    "components.ProjectSettings.rename": "Rename",
                    "components.ProjectSettings.save": "Save",
                    "components.ProjectSettings.title": "Settings",
                    "components.ProjectSettingsForm.cancel": "Cancel",
                    "components.ProjectSettingsForm.confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                    "components.ProjectSettingsForm.deleteProject": "Delete Project?",
                    "components.ProjectSettingsForm.fields.location.boundingBox": "Bounding box (W,S,E,N)",
                    "components.ProjectSettingsForm.fields.location.defaultLanguage": "Default language",
                    "components.ProjectSettingsForm.fields.location.defaultLocation": "Default location (lat, lng)",
                    "components.ProjectSettingsForm.fields.location.defaultTimeZone": "Default time zone",
                    "components.ProjectSettingsForm.fields.location.title": "Location",
                    "components.ProjectSettingsForm.fields.name": "Project name",
                    "components.ProjectSettingsForm.fields.title": "General",
                    "components.ProjectSettingsForm.fields.updates.autoFetchFeeds": "Auto fetch feed sources?",
                    "components.ProjectSettingsForm.fields.updates.title": "Updates",
                    "components.ProjectSettingsForm.save": "Save",
                    "components.ProjectSettingsForm.title": "Settings",
                    "components.ProjectViewer.deployments": "Deployments",
                    "components.ProjectViewer.feeds.createFirst": "Create first feed source!",
                    "components.ProjectViewer.feeds.new": "New Feed Source",
                    "components.ProjectViewer.feeds.search": "Search by name",
                    "components.ProjectViewer.feeds.table.deployable": "Deployable?",
                    "components.ProjectViewer.feeds.table.errorCount": "Errors",
                    "components.ProjectViewer.feeds.table.lastUpdated": "Updated",
                    "components.ProjectViewer.feeds.table.name": "Name",
                    "components.ProjectViewer.feeds.table.public": "Public?",
                    "components.ProjectViewer.feeds.table.retrievalMethod": "Retrieval Method",
                    "components.ProjectViewer.feeds.table.validRange": "Valid Range",
                    "components.ProjectViewer.feeds.title": "Feed Sources",
                    "components.ProjectViewer.feeds.update": "Fetch all",
                    "components.ProjectViewer.makePublic": "Publish public feeds",
                    "components.ProjectViewer.mergeFeeds": "Merge all",
                    "components.ProjectViewer.settings": "Settings",
                    "components.ProjectsList.createFirst": "Create my first project",
                    "components.ProjectsList.help.content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                    "components.ProjectsList.help.title": "What's a project?",
                    "components.ProjectsList.new": "New Project",
                    "components.ProjectsList.noProjects": "You currently do not have any projects.",
                    "components.ProjectsList.search": "Search by project name",
                    "components.ProjectsList.table.name": "Project Name",
                    "components.ProjectsList.title": "Projects",
                    "components.PublicFeedsTable.country": "Country",
                    "components.PublicFeedsTable.lastUpdated": "Last Updated",
                    "components.PublicFeedsTable.link": "Link to GTFS",
                    "components.PublicFeedsTable.name": "Feed Name",
                    "components.PublicFeedsTable.region": "Region",
                    "components.PublicFeedsTable.search": "Search",
                    "components.PublicFeedsTable.stateProvince": "State or Province",
                    "components.PublicFeedsViewer.title": "Catalogue",
                    "components.RegionSearch.placeholder": "Search for regions or agencies",
                    "components.ResultTable.affectedIds": "Affected ID(s)",
                    "components.ResultTable.description": "Description",
                    "components.ResultTable.line": "Line",
                    "components.ResultTable.priority": "Priority",
                    "components.ResultTable.problemType": "Problem Type",
                    "components.Sidebar.unknown": "Unknown",
                    "components.SnapshotItem.active": "Active",
                    "components.SnapshotItem.confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                    "components.SnapshotItem.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                    "components.SnapshotItem.createFromScratch": "Create GTFS from Scratch",
                    "components.SnapshotItem.created": "created",
                    "components.SnapshotItem.date": "Date",
                    "components.SnapshotItem.delete": "Delete",
                    "components.SnapshotItem.download": "Download",
                    "components.SnapshotItem.feed": "Feed",
                    "components.SnapshotItem.load": "Load for Editing",
                    "components.SnapshotItem.loadLatest": "Load latest for editing",
                    "components.SnapshotItem.name": "Name",
                    "components.SnapshotItem.noVersions": "(No Versions)",
                    "components.SnapshotItem.noVersionsExist": "No versions exist for this feed source.",
                    "components.SnapshotItem.of": "of",
                    "components.SnapshotItem.publish": "Publish",
                    "components.SnapshotItem.restore": "Restore",
                    "components.SnapshotItem.snapshot": "snapshot",
                    "components.SnapshotItem.title": "Snapshots",
                    "components.SnapshotItem.version": "Version",
                    "components.StarButton.star": "Star",
                    "components.StarButton.unstar": "Unstar",
                    "components.TimetableHelpModal.shortcuts.modify.desc.0": "Delete selected trip(s)",
                    "components.TimetableHelpModal.shortcuts.modify.desc.1": "New trip",
                    "components.TimetableHelpModal.shortcuts.modify.desc.2": "Clone selected trip(s)",
                    "components.TimetableHelpModal.shortcuts.modify.desc.3": "Copy time value from adjacent cell (the cell immediately to the left)",
                    "components.TimetableHelpModal.shortcuts.modify.desc.4": "Copy value from cell directly above",
                    "components.TimetableHelpModal.shortcuts.modify.title": "Modify trips",
                    "components.TimetableHelpModal.shortcuts.navigate.desc.0": "Previous/next trip",
                    "components.TimetableHelpModal.shortcuts.navigate.desc.1": "Previous/next column",
                    "components.TimetableHelpModal.shortcuts.navigate.desc.2": "Select trip",
                    "components.TimetableHelpModal.shortcuts.navigate.desc.3": "Select all trips",
                    "components.TimetableHelpModal.shortcuts.navigate.desc.4": "Deselect all trips",
                    "components.TimetableHelpModal.shortcuts.navigate.title": "Navigating and selecting trips",
                    "components.TimetableHelpModal.shortcuts.offset.desc.0": "Offset selected trips' stop times by adding offset time",
                    "components.TimetableHelpModal.shortcuts.offset.desc.1": "Offset selected trips' stop times by subtracting offset time",
                    "components.TimetableHelpModal.shortcuts.offset.desc.2": "Offset only active cell's time by adding offset time",
                    "components.TimetableHelpModal.shortcuts.offset.desc.3": "Offset only active cell's time by subtracting offset time",
                    "components.TimetableHelpModal.shortcuts.offset.desc.4": "Decrease offset time by 1 minute",
                    "components.TimetableHelpModal.shortcuts.offset.desc.5": "Decrease offset time by 10 minutes",
                    "components.TimetableHelpModal.shortcuts.offset.desc.6": "Increase offset time by 1 minute",
                    "components.TimetableHelpModal.shortcuts.offset.desc.7": "Increase offset time by 10 minutes",
                    "components.TimetableHelpModal.shortcuts.offset.title": "Offsetting times",
                    "components.TimetableHelpModal.title": "Timetable editor keyboard shortcuts",
                    "components.TimezoneSelect.placeholder": "Select timezone...",
                    "components.UserAccount.account.title": "Account",
                    "components.UserAccount.billing.title": "Billing",
                    "components.UserAccount.notifications.methods": "Notification methods",
                    "components.UserAccount.notifications.subscriptions": "Your subscriptions",
                    "components.UserAccount.notifications.title": "Notifications",
                    "components.UserAccount.notifications.unsubscribeAll": "Unsubscribe from all",
                    "components.UserAccount.organizationSettings": "Organization settings",
                    "components.UserAccount.organizations.title": "Organizations",
                    "components.UserAccount.personalSettings": "Personal settings",
                    "components.UserAccount.profile.profileInformation": "Profile information",
                    "components.UserAccount.profile.title": "Profile",
                    "components.UserAccount.title": "My settings",
                    "components.UserAdmin.noAccess": "You do not have sufficient user privileges to access this area.",
                    "components.UserAdmin.title": "Administration",
                    "components.UserHomePage.createFirst": "Create my first project",
                    "components.UserHomePage.help.content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                    "components.UserHomePage.help.title": "What's a project?",
                    "components.UserHomePage.new": "New Project",
                    "components.UserHomePage.noProjects": "You currently do not have any projects.",
                    "components.UserHomePage.table.name": "Project Name",
                    "components.UserHomePage.title": "Projects",
                    "components.UserList.filterByOrg": "Filter by org.",
                    "components.UserList.of": "of",
                    "components.UserList.search": "Search by username",
                    "components.UserList.showing": "Showing Users",
                    "components.UserList.title": "User Management",
                    "components.UserRow.appAdmin": "App admin",
                    "components.UserRow.cancel": "Cancel",
                    "components.UserRow.delete": "Delete",
                    "components.UserRow.deleteConfirm": "Are you sure you want to permanently delete this user?",
                    "components.UserRow.edit": "Edit",
                    "components.UserRow.orgAdmin": "Org admin",
                    "components.UserRow.save": "Save",
                    "components.UserSettings.admin.description": "Application administrators have full access to all projects.",
                    "components.UserSettings.admin.title": "Application Admininistrator",
                    "components.UserSettings.application": "Application Settings",
                    "components.UserSettings.cancel": "Cancel",
                    "components.UserSettings.delete": "Delete",
                    "components.UserSettings.edit": "Edit",
                    "components.UserSettings.org.admin": "Organization administrator",
                    "components.UserSettings.org.billing": "Billing admin",
                    "components.UserSettings.org.description": "Organization administrators have full access to projects within the organization.",
                    "components.UserSettings.project.admin": "Admin",
                    "components.UserSettings.project.custom": "Custom",
                    "components.UserSettings.project.noAccess": "No Access",
                    "components.UserSettings.save": "Save",
                    "components.VersionButtonToolbar.confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                    "components.VersionButtonToolbar.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                    "components.VersionButtonToolbar.delete": "Delete",
                    "components.VersionButtonToolbar.download": "Download",
                    "components.VersionButtonToolbar.feed": "Feed",
                    "components.VersionButtonToolbar.load": "Load",
                    "components.VersionButtonToolbar.noVersionsExist": "No versions exist for this feed source.",
                    "components.VersionButtonToolbar.status": "Status",
                    "components.VersionButtonToolbar.timestamp": "File Timestamp",
                    "components.VersionButtonToolbar.version": "version",
                    "components.WatchButton.unwatch": "Unwatch",
                    "components.WatchButton.watch": "Watch",
                  },
                  "all": Array [
                    Object {
                      "_id": "en-US",
                      "_name": "English",
                      "components": Object {
                        "Breadcrumbs": Object {
                          "deployments": "Deployments",
                          "projects": "Projects",
                          "root": "Explore",
                        },
                        "CollapsiblePanel": Object {
                          "deployment": Object {
                            "buildConfig": Object {
                              "elevationBucket": Object {
                                "accessKey": "Access Key",
                                "bucketName": "S3 Bucket Name",
                                "secretKey": "Secret Key",
                              },
                              "fares": "Fares",
                              "fetchElevationUS": "Fetch Elevation",
                              "stationTransfers": "Sta. Transfers",
                              "subwayAccessTime": "Subway Access Time",
                              "title": "Build Config",
                            },
                            "osm": Object {
                              "bounds": "Custom Extract Bounds",
                              "custom": "Use Custom Extract Bounds",
                              "gtfs": "Use GTFS-Derived Extract Bounds",
                              "title": "OSM Extract",
                            },
                            "otpServers": Object {
                              "$index": Object {
                                "admin": "Admin access only?",
                                "delete": "Remove",
                                "internalUrl": "Internal URLs",
                                "name": "Name",
                                "namePlaceholder": "Production",
                                "publicUrl": "Public URL",
                                "s3Bucket": "S3 bucket name",
                              },
                              "new": "Add server",
                              "serverPlaceholder": "Server name",
                              "title": "Servers",
                            },
                            "routerConfig": Object {
                              "brandingUrlRoot": "Branding URL Root",
                              "carDropoffTime": "Car Dropoff Time",
                              "numItineraries": "# of itineraries",
                              "requestLogFile": "Request log file",
                              "stairsReluctance": "Stairs Reluctance",
                              "title": "Router Config",
                              "updaters": Object {
                                "$index": Object {
                                  "defaultAgencyId": "Default agency ID",
                                  "frequencySec": "Frequency (in seconds)",
                                  "sourceType": "Source type",
                                  "type": "Type",
                                  "url": "URL",
                                },
                                "new": "Add updater",
                                "placeholder": "Updater name",
                                "title": "Real-time updaters",
                              },
                              "walkSpeed": "Walk Speed",
                            },
                            "title": "Deployment",
                          },
                        },
                        "CreateUser": Object {
                          "new": "Create User",
                        },
                        "DatatoolsNavbar": Object {
                          "account": "My Account",
                          "alerts": "Alerts",
                          "editor": "Editor",
                          "guide": "Guide",
                          "login": "Log In",
                          "logout": "Log Out",
                          "manager": "Manager",
                          "resetPassword": "Reset Password",
                          "signConfig": "eTID Config",
                          "users": "Users",
                        },
                        "DeploymentConfirmModal": Object {
                          "alert": Object {
                            "alreadyDeployed": "is already deployed to this server at the same router. (Deploying would evict the current graph.)",
                            "boundsTooLarge": "Bounds are much too large to successfully deploy to OpenTripPlanner. Deployment is disabled.",
                            "expiredFeeds": "The following feeds have expired (all scheduled trips are for past dates)",
                            "missingBounds": "There are no bounds defined for the set of feeds. Deployment is disabled.",
                            "missingFeeds": "There are no feeds defined for this deployment. Deployment is disabled.",
                            "success": "Deployment successfully deployed.",
                          },
                          "cancel": "Cancel",
                          "close": "Close",
                          "danger": "Danger!",
                          "deploy": "Deploy",
                          "invalidBounds": "Bounds are invalid!",
                          "success": "Success!",
                          "to": "to",
                          "warning": "Warning!",
                        },
                        "DeploymentConfirmModalAlert": Object {
                          "danger": "Danger!",
                          "success": "Success!",
                          "warning": "Warning!",
                        },
                        "DeploymentSettings": Object {
                          "buildConfig": Object {
                            "elevationBucket": Object {
                              "accessKey": "Access Key",
                              "bucketName": "S3 Bucket Name",
                              "secretKey": "Secret Key",
                            },
                            "fares": "Fares",
                            "fetchElevationUS": "Fetch Elevation",
                            "save": "Save",
                            "stationTransfers": "Sta. Transfers",
                            "subwayAccessTime": "Subway Access Time",
                            "title": "Build Config",
                          },
                          "osm": Object {
                            "bounds": "Custom Extract Bounds",
                            "custom": "Use Custom Extract Bounds",
                            "gtfs": "Use GTFS-Derived Extract Bounds",
                            "title": "OSM Extract",
                          },
                          "otpServers": Object {
                            "$index": Object {
                              "admin": "Admin access only?",
                              "delete": "Remove",
                              "internalUrl": "Internal URLs",
                              "name": "Name",
                              "namePlaceholder": "Production",
                              "publicUrl": "Public URL",
                              "s3Bucket": "S3 bucket name",
                            },
                            "new": "Add server",
                            "serverPlaceholder": "Server name",
                            "title": "Servers",
                          },
                          "routerConfig": Object {
                            "brandingUrlRoot": "Branding URL Root",
                            "carDropoffTime": "Car Dropoff Time",
                            "numItineraries": "# of itineraries",
                            "requestLogFile": "Request log file",
                            "stairsReluctance": "Stairs Reluctance",
                            "title": "Router Config",
                            "updaters": Object {
                              "$index": Object {
                                "defaultAgencyId": "Default agency ID",
                                "frequencySec": "Frequency (in seconds)",
                                "sourceType": "Source type",
                                "type": "Type",
                                "url": "URL",
                              },
                              "new": "Add updater",
                              "placeholder": "Updater name",
                              "title": "Real-time updaters",
                            },
                            "walkSpeed": "Walk Speed",
                          },
                          "save": "Save",
                          "title": "Deployment",
                        },
                        "DeploymentVersionsTable": Object {
                          "dateRetrieved": "Date Retrieved",
                          "errorCount": "Error Count",
                          "expires": "Expires",
                          "loadStatus": "Loaded Successfully",
                          "name": "Name",
                          "routeCount": "Route Count",
                          "stopTimesCount": "Stop time count",
                          "tripCount": "Trip Count",
                          "validFrom": "Valid from",
                          "version": "Version",
                        },
                        "DeploymentViewer": Object {
                          "addFeedSource": "Add Feed Source",
                          "allFeedsAdded": "All feeds added",
                          "deploy": "Deploy",
                          "download": "Download",
                          "noServers": "No servers defined",
                          "search": "Search by name",
                          "table": Object {
                            "dateRetrieved": "Date Retrieved",
                            "errorCount": "Error Count",
                            "expires": "Expires",
                            "loadStatus": "Loaded Successfully",
                            "name": "Name",
                            "routeCount": "Route Count",
                            "stopTimesCount": "Stop time count",
                            "tripCount": "Trip Count",
                            "validFrom": "Valid from",
                            "version": "Version",
                          },
                          "to": "to",
                          "versions": "Feed Versions",
                        },
                        "DeploymentsList": Object {
                          "delete": "Remove deployment",
                          "new": "New Deployment",
                          "search": "Search for deployments",
                          "table": Object {
                            "creationDate": "Created",
                            "deployedTo": "Deployed to",
                            "feedCount": "# of feeds",
                            "lastDeployed": "Last deployed",
                            "name": "Name",
                            "testDeployment": "Test?",
                          },
                          "title": "Deployments",
                        },
                        "DeploymentsPanel": Object {
                          "delete": "Remove deployment",
                          "new": "New Deployment",
                          "search": "Search for deployments",
                          "table": Object {
                            "creationDate": "Created",
                            "deployedTo": "Deployed to",
                            "feedCount": "# of feeds",
                            "lastDeployed": "Last deployed",
                            "name": "Name",
                            "testDeployment": "Test?",
                          },
                          "title": "Deployments",
                        },
                        "EditorFeedSourcePanel": Object {
                          "active": "Active",
                          "confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "createFromScratch": "Create GTFS from Scratch",
                          "created": "created",
                          "date": "Date",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "help": Object {
                            "body": Array [
                              "Snapshots are save points you can always revert back to when editing a GTFS feed.",
                              "A snapshot might represent a work-in-progress, future planning scenario or even different service patterns (e.g., summer schedule markup).",
                            ],
                            "title": "What are snapshots?",
                          },
                          "load": "Load for Editing",
                          "loadLatest": "Load latest for editing",
                          "name": "Name",
                          "noSnapshotsExist": "No snapshots currently exist for this feed. Snapshots can be created within the Editor. Click \\"Edit Feed\\" to enter editing mode.",
                          "noVersions": "(No Versions)",
                          "noVersionsExist": "No versions exist for this feed source.",
                          "of": "of",
                          "publish": "Publish",
                          "restore": "Restore",
                          "snapshot": "snapshot",
                          "title": "Snapshots",
                          "version": "Version",
                        },
                        "FeedInfoPanel": Object {
                          "uploadShapefile": Object {
                            "body": "Select a zipped shapefile to display on map. Note: this is only for use as a visual aid.",
                            "error": "Uploaded file must be a valid zip file (.zip).",
                            "title": "Upload route shapefile",
                          },
                        },
                        "FeedSourceAttributes": Object {
                          "lastUpdated": "Updated",
                        },
                        "FeedSourcePanel": Object {
                          "search": "Search feeds",
                        },
                        "FeedSourceTable": Object {
                          "comparisonColumn": Object {
                            "DEPLOYED": "Deployed Version",
                            "PUBLISHED": "Published Version",
                          },
                          "createFirst": "Create first feed source!",
                        },
                        "FeedSourceTableRow": Object {
                          "status": Object {
                            "active": "Active",
                            "all": "All",
                            "expired": "Expired",
                            "expiring-within-20-days": "Expiring within 20 days",
                            "expiring-within-5-days": "Expiring within 5 days",
                            "feedNotInDeployment": "Feed not in deployment",
                            "feedNotPublished": "Feed not published",
                            "future": "Future",
                            "no-version": "No version",
                            "same-as-deployed": "Same as Deployed",
                            "same-as-published": "Same as Published",
                          },
                        },
                        "FeedSourceViewer": Object {
                          "deploy": "Deploy",
                          "edit": "Edit GTFS",
                          "gtfs": "GTFS",
                          "notesTitle": "Notes",
                          "private": "Private view",
                          "properties": Object {
                            "deployable": "Deployable?",
                            "name": "Name",
                            "noneSelected": "(None Selected)",
                            "property": "Property",
                            "public": "Public?",
                            "retrievalMethod": Object {
                              "fetchedAutomatically": "Fetched Automatically",
                              "manuallyUploaded": "Manually Uploaded",
                              "producedInHouse": "Produced In-house",
                              "title": "Retrieval Method",
                            },
                            "snapshot": "Editor Snapshot",
                            "title": "Settings",
                            "value": "Value",
                          },
                          "snapshotsTitle": "Snapshots",
                          "update": "Update",
                          "upload": "Upload",
                          "versions": "Versions",
                          "viewPublic": "View public page",
                        },
                        "FeedVersionNavigator": Object {
                          "confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "load": "Load for Editing",
                          "next": "Next",
                          "of": "of",
                          "previous": "Previous",
                          "version": "Version",
                        },
                        "FeedVersionTabs": Object {
                          "agencyCount": "Agency Count",
                          "routeCount": "Route Count",
                          "stopTimesCount": "Stop time Count",
                          "tripCount": "Trip Count",
                          "validDates": "Valid Dates",
                        },
                        "FeedVersionViewer": Object {
                          "confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "load": "Load",
                          "noVersionsExist": "No versions exist for this feed source.",
                          "status": "Status",
                          "timestamp": "File Timestamp",
                          "version": "version",
                        },
                        "GeneralSettings": Object {
                          "confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                          "deleteProject": "Delete Project?",
                          "deployment": Object {
                            "buildConfig": Object {
                              "elevationBucket": Object {
                                "accessKey": "Access Key",
                                "bucketName": "S3 Bucket Name",
                                "secretKey": "Secret Key",
                              },
                              "fares": "Fares",
                              "fetchElevationUS": "Fetch Elevation",
                              "stationTransfers": "Sta. Transfers",
                              "subwayAccessTime": "Subway Access Time",
                              "title": "Build Config",
                            },
                            "osm": Object {
                              "bounds": "Custom Extract Bounds",
                              "custom": "Use Custom Extract Bounds",
                              "gtfs": "Use GTFS-Derived Extract Bounds",
                              "title": "OSM Extract",
                            },
                            "otpServers": Object {
                              "$index": Object {
                                "admin": "Admin access only?",
                                "delete": "Remove",
                                "internalUrl": "Internal URLs",
                                "name": "Name",
                                "namePlaceholder": "Production",
                                "publicUrl": "Public URL",
                                "s3Bucket": "S3 bucket name",
                              },
                              "new": "Add server",
                              "serverPlaceholder": "Server name",
                              "title": "Servers",
                            },
                            "routerConfig": Object {
                              "brandingUrlRoot": "Branding URL Root",
                              "carDropoffTime": "Car Dropoff Time",
                              "numItineraries": "# of itineraries",
                              "requestLogFile": "Request log file",
                              "stairsReluctance": "Stairs Reluctance",
                              "title": "Router Config",
                              "updaters": Object {
                                "$index": Object {
                                  "defaultAgencyId": "Default agency ID",
                                  "frequencySec": "Frequency (in seconds)",
                                  "sourceType": "Source type",
                                  "type": "Type",
                                  "url": "URL",
                                },
                                "new": "Add updater",
                                "placeholder": "Updater name",
                                "title": "Real-time updaters",
                              },
                              "walkSpeed": "Walk Speed",
                            },
                            "title": "Deployment",
                          },
                          "general": Object {
                            "location": Object {
                              "boundingBox": "Bounding box (W,S,E,N)",
                              "defaultLanguage": "Default language",
                              "defaultLocation": "Default location (lat, lng)",
                              "defaultTimeZone": "Default time zone",
                              "title": "Location",
                            },
                            "name": "Project name",
                            "title": "General",
                            "updates": Object {
                              "autoFetchFeeds": "Auto fetch feed sources?",
                              "title": "Updates",
                            },
                          },
                          "rename": "Rename",
                          "save": "Save",
                          "title": "Settings",
                        },
                        "GtfsValidationExplorer": Object {
                          "accessibilityValidation": "Accessibility Explorer",
                          "table": Object {
                            "count": "Count",
                            "file": "File",
                            "issue": "Issue",
                            "priority": "Priority",
                          },
                          "timeValidation": "Time-based Validation",
                          "title": "Validation Explorer",
                          "validationIssues": "Validation Issues",
                        },
                        "GtfsValidationViewer": Object {
                          "explorer": "Validation Explorer",
                          "issues": Object {
                            "other": "Other issues",
                            "routes": "Route issues",
                            "shapes": "Shape issues",
                            "stop_times": "Stop times issues",
                            "stops": "Stop issues",
                            "trips": "Trip issues",
                          },
                          "noResults": "No validation results to show.",
                          "title": "Validation Results",
                        },
                        "LanguageSelect": Object {
                          "placeholder": "Select language...",
                        },
                        "Login": Object {
                          "title": "Log in",
                        },
                        "NotesViewer": Object {
                          "all": "All Comments",
                          "feedSource": "Feed Source",
                          "feedVersion": "Version",
                          "new": "Post",
                          "none": "No comments.",
                          "postComment": "Post a New Comment",
                          "refresh": "Refresh",
                          "title": "Comments",
                        },
                        "OrganizationList": Object {
                          "new": "Create org",
                          "search": "Search orgs",
                        },
                        "OrganizationSettings": Object {
                          "extensions": "Extensions",
                          "logoUrl": Object {
                            "label": "Logo URL",
                            "placeholder": "http://example.com/logo_30x30.png",
                          },
                          "name": Object {
                            "label": "Name",
                            "placeholder": "Big City Transit",
                          },
                          "orgDetails": "Organization details",
                          "projects": "Projects",
                          "subDetails": "Subscription details",
                          "subscriptionBeginDate": "Subscription begins",
                          "subscriptionEndDate": "Subscription ends",
                          "usageTier": Object {
                            "high": "High",
                            "low": "Low",
                            "medium": "Medium",
                          },
                        },
                        "ProjectAccessSettings": Object {
                          "admin": "Admin",
                          "cannotFetchFeeds": "Cannot fetch feeds",
                          "custom": "Custom",
                          "feeds": "Feed Sources",
                          "noAccess": "No Access",
                          "permissions": "Permissions",
                          "title": "Project Settings for",
                        },
                        "ProjectFeedListToolbar": Object {
                          "comparison": Object {
                            "DEPLOYED": "Deployed",
                            "LATEST": "Latest",
                            "PUBLISHED": "Published",
                          },
                          "deployments": "Deployments",
                          "feeds": Object {
                            "createFirst": "Create first feed source!",
                            "new": "New",
                            "search": "Search by name",
                            "table": Object {
                              "deployable": "Deployable?",
                              "errorCount": "Errors",
                              "lastUpdated": "Updated",
                              "name": "Name",
                              "public": "Public?",
                              "retrievalMethod": "Retrieval Method",
                              "validRange": "Valid Range",
                            },
                            "title": "Feed Sources",
                            "update": "Fetch all",
                          },
                          "filter": Object {
                            "active": "Active",
                            "all": "All",
                            "expired": "Expired",
                            "expiring": "Expiring",
                            "future": "Future",
                          },
                          "makePublic": "Publish public feeds",
                          "mergeFeeds": "Merge all",
                          "settings": "Settings",
                          "sort": Object {
                            "alphabetically": Object {
                              "asc": "A-Z",
                              "desc": "Z-A",
                              "title": "Alphabetically",
                            },
                            "endDate": Object {
                              "asc": "Soonest-Latest",
                              "desc": "Latest-Soonest",
                              "title": "Expiration Date",
                            },
                            "lastUpdated": Object {
                              "asc": "Stale-Recent",
                              "desc": "Recent-Stale",
                              "title": "Last Update",
                            },
                            "numErrors": Object {
                              "asc": "Least-Most",
                              "desc": "Most-Least",
                              "title": "Number of Errors",
                            },
                            "startDate": Object {
                              "asc": "Soonest-Latest",
                              "desc": "Latest-Soonest",
                              "title": "Start Date",
                            },
                          },
                          "sync": Object {
                            "mtc": "Sync from MTC",
                            "transitfeeds": "Sync from transitfeeds",
                            "transitland": "Sync from transit.land",
                          },
                        },
                        "ProjectSettings": Object {
                          "deployment": Object {
                            "buildConfig": Object {
                              "elevationBucket": Object {
                                "accessKey": "Access Key",
                                "bucketName": "S3 Bucket Name",
                                "secretKey": "Secret Key",
                              },
                              "fares": "Fares",
                              "fetchElevationUS": "Fetch Elevation",
                              "stationTransfers": "Sta. Transfers",
                              "subwayAccessTime": "Subway Access Time",
                              "title": "Build Config",
                            },
                            "osm": Object {
                              "bounds": "Custom Extract Bounds",
                              "custom": "Use Custom Extract Bounds",
                              "gtfs": "Use GTFS-Derived Extract Bounds",
                              "title": "OSM Extract",
                            },
                            "otpServers": Object {
                              "$index": Object {
                                "admin": "Admin access only?",
                                "delete": "Remove",
                                "internalUrl": "Internal URLs",
                                "name": "Name",
                                "namePlaceholder": "Production",
                                "publicUrl": "Public URL",
                                "s3Bucket": "S3 bucket name",
                              },
                              "new": "Add server",
                              "serverPlaceholder": "Server name",
                              "title": "Servers",
                            },
                            "routerConfig": Object {
                              "brandingUrlRoot": "Branding URL Root",
                              "carDropoffTime": "Car Dropoff Time",
                              "numItineraries": "# of itineraries",
                              "requestLogFile": "Request log file",
                              "stairsReluctance": "Stairs Reluctance",
                              "title": "Router Config",
                              "updaters": Object {
                                "$index": Object {
                                  "defaultAgencyId": "Default agency ID",
                                  "frequencySec": "Frequency (in seconds)",
                                  "sourceType": "Source type",
                                  "type": "Type",
                                  "url": "URL",
                                },
                                "new": "Add updater",
                                "placeholder": "Updater name",
                                "title": "Real-time updaters",
                              },
                              "walkSpeed": "Walk Speed",
                            },
                            "title": "Deployment",
                          },
                          "project": Object {
                            "cannotFetchFeeds": "Cannot fetch feeds",
                            "feeds": "Feeds",
                            "permissions": "Permissions",
                          },
                          "rename": "Rename",
                          "save": "Save",
                          "title": "Settings",
                        },
                        "ProjectSettingsForm": Object {
                          "cancel": "Cancel",
                          "confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                          "deleteProject": "Delete Project?",
                          "fields": Object {
                            "location": Object {
                              "boundingBox": "Bounding box (W,S,E,N)",
                              "defaultLanguage": "Default language",
                              "defaultLocation": "Default location (lat, lng)",
                              "defaultTimeZone": "Default time zone",
                              "title": "Location",
                            },
                            "name": "Project name",
                            "title": "General",
                            "updates": Object {
                              "autoFetchFeeds": "Auto fetch feed sources?",
                              "title": "Updates",
                            },
                          },
                          "save": "Save",
                          "title": "Settings",
                        },
                        "ProjectViewer": Object {
                          "deployments": "Deployments",
                          "feeds": Object {
                            "createFirst": "Create first feed source!",
                            "new": "New Feed Source",
                            "search": "Search by name",
                            "table": Object {
                              "deployable": "Deployable?",
                              "errorCount": "Errors",
                              "lastUpdated": "Updated",
                              "name": "Name",
                              "public": "Public?",
                              "retrievalMethod": "Retrieval Method",
                              "validRange": "Valid Range",
                            },
                            "title": "Feed Sources",
                            "update": "Fetch all",
                          },
                          "makePublic": "Publish public feeds",
                          "mergeFeeds": "Merge all",
                          "settings": "Settings",
                        },
                        "ProjectsList": Object {
                          "createFirst": "Create my first project",
                          "help": Object {
                            "content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                            "title": "What's a project?",
                          },
                          "new": "New Project",
                          "noProjects": "You currently do not have any projects.",
                          "search": "Search by project name",
                          "table": Object {
                            "name": "Project Name",
                          },
                          "title": "Projects",
                        },
                        "PublicFeedsTable": Object {
                          "country": "Country",
                          "lastUpdated": "Last Updated",
                          "link": "Link to GTFS",
                          "name": "Feed Name",
                          "region": "Region",
                          "search": "Search",
                          "stateProvince": "State or Province",
                        },
                        "PublicFeedsViewer": Object {
                          "title": "Catalogue",
                        },
                        "RegionSearch": Object {
                          "placeholder": "Search for regions or agencies",
                        },
                        "ResultTable": Object {
                          "affectedIds": "Affected ID(s)",
                          "description": "Description",
                          "line": "Line",
                          "priority": "Priority",
                          "problemType": "Problem Type",
                        },
                        "Sidebar": Object {
                          "unknown": "Unknown",
                        },
                        "SnapshotItem": Object {
                          "active": "Active",
                          "confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "createFromScratch": "Create GTFS from Scratch",
                          "created": "created",
                          "date": "Date",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "load": "Load for Editing",
                          "loadLatest": "Load latest for editing",
                          "name": "Name",
                          "noVersions": "(No Versions)",
                          "noVersionsExist": "No versions exist for this feed source.",
                          "of": "of",
                          "publish": "Publish",
                          "restore": "Restore",
                          "snapshot": "snapshot",
                          "title": "Snapshots",
                          "version": "Version",
                        },
                        "StarButton": Object {
                          "star": "Star",
                          "unstar": "Unstar",
                        },
                        "TimetableHelpModal": Object {
                          "shortcuts": Object {
                            "modify": Object {
                              "desc": Array [
                                "Delete selected trip(s)",
                                "New trip",
                                "Clone selected trip(s)",
                                "Copy time value from adjacent cell (the cell immediately to the left)",
                                "Copy value from cell directly above",
                              ],
                              "title": "Modify trips",
                            },
                            "navigate": Object {
                              "desc": Array [
                                "Previous/next trip",
                                "Previous/next column",
                                "Select trip",
                                "Select all trips",
                                "Deselect all trips",
                              ],
                              "title": "Navigating and selecting trips",
                            },
                            "offset": Object {
                              "desc": Array [
                                "Offset selected trips' stop times by adding offset time",
                                "Offset selected trips' stop times by subtracting offset time",
                                "Offset only active cell's time by adding offset time",
                                "Offset only active cell's time by subtracting offset time",
                                "Decrease offset time by 1 minute",
                                "Decrease offset time by 10 minutes",
                                "Increase offset time by 1 minute",
                                "Increase offset time by 10 minutes",
                              ],
                              "title": "Offsetting times",
                            },
                          },
                          "title": "Timetable editor keyboard shortcuts",
                        },
                        "TimezoneSelect": Object {
                          "placeholder": "Select timezone...",
                        },
                        "UserAccount": Object {
                          "account": Object {
                            "title": "Account",
                          },
                          "billing": Object {
                            "title": "Billing",
                          },
                          "notifications": Object {
                            "methods": "Notification methods",
                            "subscriptions": "Your subscriptions",
                            "title": "Notifications",
                            "unsubscribeAll": "Unsubscribe from all",
                          },
                          "organizationSettings": "Organization settings",
                          "organizations": Object {
                            "title": "Organizations",
                          },
                          "personalSettings": "Personal settings",
                          "profile": Object {
                            "profileInformation": "Profile information",
                            "title": "Profile",
                          },
                          "title": "My settings",
                        },
                        "UserAdmin": Object {
                          "noAccess": "You do not have sufficient user privileges to access this area.",
                          "title": "Administration",
                        },
                        "UserHomePage": Object {
                          "createFirst": "Create my first project",
                          "help": Object {
                            "content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                            "title": "What's a project?",
                          },
                          "new": "New Project",
                          "noProjects": "You currently do not have any projects.",
                          "table": Object {
                            "name": "Project Name",
                          },
                          "title": "Projects",
                        },
                        "UserList": Object {
                          "filterByOrg": "Filter by org.",
                          "of": "of",
                          "search": "Search by username",
                          "showing": "Showing Users",
                          "title": "User Management",
                        },
                        "UserRow": Object {
                          "appAdmin": "App admin",
                          "cancel": "Cancel",
                          "delete": "Delete",
                          "deleteConfirm": "Are you sure you want to permanently delete this user?",
                          "edit": "Edit",
                          "orgAdmin": "Org admin",
                          "save": "Save",
                        },
                        "UserSettings": Object {
                          "admin": Object {
                            "description": "Application administrators have full access to all projects.",
                            "title": "Application Admininistrator",
                          },
                          "application": "Application Settings",
                          "cancel": "Cancel",
                          "delete": "Delete",
                          "edit": "Edit",
                          "org": Object {
                            "admin": "Organization administrator",
                            "billing": "Billing admin",
                            "description": "Organization administrators have full access to projects within the organization.",
                          },
                          "project": Object {
                            "admin": "Admin",
                            "custom": "Custom",
                            "noAccess": "No Access",
                          },
                          "save": "Save",
                        },
                        "VersionButtonToolbar": Object {
                          "confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "load": "Load",
                          "noVersionsExist": "No versions exist for this feed source.",
                          "status": "Status",
                          "timestamp": "File Timestamp",
                          "version": "version",
                        },
                        "WatchButton": Object {
                          "unwatch": "Unwatch",
                          "watch": "Watch",
                        },
                      },
                      "components.Breadcrumbs.deployments": "Deployments",
                      "components.Breadcrumbs.projects": "Projects",
                      "components.Breadcrumbs.root": "Explore",
                      "components.CollapsiblePanel.deployment.buildConfig.elevationBucket.accessKey": "Access Key",
                      "components.CollapsiblePanel.deployment.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                      "components.CollapsiblePanel.deployment.buildConfig.elevationBucket.secretKey": "Secret Key",
                      "components.CollapsiblePanel.deployment.buildConfig.fares": "Fares",
                      "components.CollapsiblePanel.deployment.buildConfig.fetchElevationUS": "Fetch Elevation",
                      "components.CollapsiblePanel.deployment.buildConfig.stationTransfers": "Sta. Transfers",
                      "components.CollapsiblePanel.deployment.buildConfig.subwayAccessTime": "Subway Access Time",
                      "components.CollapsiblePanel.deployment.buildConfig.title": "Build Config",
                      "components.CollapsiblePanel.deployment.osm.bounds": "Custom Extract Bounds",
                      "components.CollapsiblePanel.deployment.osm.custom": "Use Custom Extract Bounds",
                      "components.CollapsiblePanel.deployment.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                      "components.CollapsiblePanel.deployment.osm.title": "OSM Extract",
                      "components.CollapsiblePanel.deployment.otpServers.$index.admin": "Admin access only?",
                      "components.CollapsiblePanel.deployment.otpServers.$index.delete": "Remove",
                      "components.CollapsiblePanel.deployment.otpServers.$index.internalUrl": "Internal URLs",
                      "components.CollapsiblePanel.deployment.otpServers.$index.name": "Name",
                      "components.CollapsiblePanel.deployment.otpServers.$index.namePlaceholder": "Production",
                      "components.CollapsiblePanel.deployment.otpServers.$index.publicUrl": "Public URL",
                      "components.CollapsiblePanel.deployment.otpServers.$index.s3Bucket": "S3 bucket name",
                      "components.CollapsiblePanel.deployment.otpServers.new": "Add server",
                      "components.CollapsiblePanel.deployment.otpServers.serverPlaceholder": "Server name",
                      "components.CollapsiblePanel.deployment.otpServers.title": "Servers",
                      "components.CollapsiblePanel.deployment.routerConfig.brandingUrlRoot": "Branding URL Root",
                      "components.CollapsiblePanel.deployment.routerConfig.carDropoffTime": "Car Dropoff Time",
                      "components.CollapsiblePanel.deployment.routerConfig.numItineraries": "# of itineraries",
                      "components.CollapsiblePanel.deployment.routerConfig.requestLogFile": "Request log file",
                      "components.CollapsiblePanel.deployment.routerConfig.stairsReluctance": "Stairs Reluctance",
                      "components.CollapsiblePanel.deployment.routerConfig.title": "Router Config",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.sourceType": "Source type",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.type": "Type",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.url": "URL",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.new": "Add updater",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.placeholder": "Updater name",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.title": "Real-time updaters",
                      "components.CollapsiblePanel.deployment.routerConfig.walkSpeed": "Walk Speed",
                      "components.CollapsiblePanel.deployment.title": "Deployment",
                      "components.CreateUser.new": "Create User",
                      "components.DatatoolsNavbar.account": "My Account",
                      "components.DatatoolsNavbar.alerts": "Alerts",
                      "components.DatatoolsNavbar.editor": "Editor",
                      "components.DatatoolsNavbar.guide": "Guide",
                      "components.DatatoolsNavbar.login": "Log In",
                      "components.DatatoolsNavbar.logout": "Log Out",
                      "components.DatatoolsNavbar.manager": "Manager",
                      "components.DatatoolsNavbar.resetPassword": "Reset Password",
                      "components.DatatoolsNavbar.signConfig": "eTID Config",
                      "components.DatatoolsNavbar.users": "Users",
                      "components.DeploymentConfirmModal.alert.alreadyDeployed": "is already deployed to this server at the same router. (Deploying would evict the current graph.)",
                      "components.DeploymentConfirmModal.alert.boundsTooLarge": "Bounds are much too large to successfully deploy to OpenTripPlanner. Deployment is disabled.",
                      "components.DeploymentConfirmModal.alert.expiredFeeds": "The following feeds have expired (all scheduled trips are for past dates)",
                      "components.DeploymentConfirmModal.alert.missingBounds": "There are no bounds defined for the set of feeds. Deployment is disabled.",
                      "components.DeploymentConfirmModal.alert.missingFeeds": "There are no feeds defined for this deployment. Deployment is disabled.",
                      "components.DeploymentConfirmModal.alert.success": "Deployment successfully deployed.",
                      "components.DeploymentConfirmModal.cancel": "Cancel",
                      "components.DeploymentConfirmModal.close": "Close",
                      "components.DeploymentConfirmModal.danger": "Danger!",
                      "components.DeploymentConfirmModal.deploy": "Deploy",
                      "components.DeploymentConfirmModal.invalidBounds": "Bounds are invalid!",
                      "components.DeploymentConfirmModal.success": "Success!",
                      "components.DeploymentConfirmModal.to": "to",
                      "components.DeploymentConfirmModal.warning": "Warning!",
                      "components.DeploymentConfirmModalAlert.danger": "Danger!",
                      "components.DeploymentConfirmModalAlert.success": "Success!",
                      "components.DeploymentConfirmModalAlert.warning": "Warning!",
                      "components.DeploymentSettings.buildConfig.elevationBucket.accessKey": "Access Key",
                      "components.DeploymentSettings.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                      "components.DeploymentSettings.buildConfig.elevationBucket.secretKey": "Secret Key",
                      "components.DeploymentSettings.buildConfig.fares": "Fares",
                      "components.DeploymentSettings.buildConfig.fetchElevationUS": "Fetch Elevation",
                      "components.DeploymentSettings.buildConfig.save": "Save",
                      "components.DeploymentSettings.buildConfig.stationTransfers": "Sta. Transfers",
                      "components.DeploymentSettings.buildConfig.subwayAccessTime": "Subway Access Time",
                      "components.DeploymentSettings.buildConfig.title": "Build Config",
                      "components.DeploymentSettings.osm.bounds": "Custom Extract Bounds",
                      "components.DeploymentSettings.osm.custom": "Use Custom Extract Bounds",
                      "components.DeploymentSettings.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                      "components.DeploymentSettings.osm.title": "OSM Extract",
                      "components.DeploymentSettings.otpServers.$index.admin": "Admin access only?",
                      "components.DeploymentSettings.otpServers.$index.delete": "Remove",
                      "components.DeploymentSettings.otpServers.$index.internalUrl": "Internal URLs",
                      "components.DeploymentSettings.otpServers.$index.name": "Name",
                      "components.DeploymentSettings.otpServers.$index.namePlaceholder": "Production",
                      "components.DeploymentSettings.otpServers.$index.publicUrl": "Public URL",
                      "components.DeploymentSettings.otpServers.$index.s3Bucket": "S3 bucket name",
                      "components.DeploymentSettings.otpServers.new": "Add server",
                      "components.DeploymentSettings.otpServers.serverPlaceholder": "Server name",
                      "components.DeploymentSettings.otpServers.title": "Servers",
                      "components.DeploymentSettings.routerConfig.brandingUrlRoot": "Branding URL Root",
                      "components.DeploymentSettings.routerConfig.carDropoffTime": "Car Dropoff Time",
                      "components.DeploymentSettings.routerConfig.numItineraries": "# of itineraries",
                      "components.DeploymentSettings.routerConfig.requestLogFile": "Request log file",
                      "components.DeploymentSettings.routerConfig.stairsReluctance": "Stairs Reluctance",
                      "components.DeploymentSettings.routerConfig.title": "Router Config",
                      "components.DeploymentSettings.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                      "components.DeploymentSettings.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                      "components.DeploymentSettings.routerConfig.updaters.$index.sourceType": "Source type",
                      "components.DeploymentSettings.routerConfig.updaters.$index.type": "Type",
                      "components.DeploymentSettings.routerConfig.updaters.$index.url": "URL",
                      "components.DeploymentSettings.routerConfig.updaters.new": "Add updater",
                      "components.DeploymentSettings.routerConfig.updaters.placeholder": "Updater name",
                      "components.DeploymentSettings.routerConfig.updaters.title": "Real-time updaters",
                      "components.DeploymentSettings.routerConfig.walkSpeed": "Walk Speed",
                      "components.DeploymentSettings.save": "Save",
                      "components.DeploymentSettings.title": "Deployment",
                      "components.DeploymentVersionsTable.dateRetrieved": "Date Retrieved",
                      "components.DeploymentVersionsTable.errorCount": "Error Count",
                      "components.DeploymentVersionsTable.expires": "Expires",
                      "components.DeploymentVersionsTable.loadStatus": "Loaded Successfully",
                      "components.DeploymentVersionsTable.name": "Name",
                      "components.DeploymentVersionsTable.routeCount": "Route Count",
                      "components.DeploymentVersionsTable.stopTimesCount": "Stop time count",
                      "components.DeploymentVersionsTable.tripCount": "Trip Count",
                      "components.DeploymentVersionsTable.validFrom": "Valid from",
                      "components.DeploymentVersionsTable.version": "Version",
                      "components.DeploymentViewer.addFeedSource": "Add Feed Source",
                      "components.DeploymentViewer.allFeedsAdded": "All feeds added",
                      "components.DeploymentViewer.deploy": "Deploy",
                      "components.DeploymentViewer.download": "Download",
                      "components.DeploymentViewer.noServers": "No servers defined",
                      "components.DeploymentViewer.search": "Search by name",
                      "components.DeploymentViewer.table.dateRetrieved": "Date Retrieved",
                      "components.DeploymentViewer.table.errorCount": "Error Count",
                      "components.DeploymentViewer.table.expires": "Expires",
                      "components.DeploymentViewer.table.loadStatus": "Loaded Successfully",
                      "components.DeploymentViewer.table.name": "Name",
                      "components.DeploymentViewer.table.routeCount": "Route Count",
                      "components.DeploymentViewer.table.stopTimesCount": "Stop time count",
                      "components.DeploymentViewer.table.tripCount": "Trip Count",
                      "components.DeploymentViewer.table.validFrom": "Valid from",
                      "components.DeploymentViewer.table.version": "Version",
                      "components.DeploymentViewer.to": "to",
                      "components.DeploymentViewer.versions": "Feed Versions",
                      "components.DeploymentsList.delete": "Remove deployment",
                      "components.DeploymentsList.new": "New Deployment",
                      "components.DeploymentsList.search": "Search for deployments",
                      "components.DeploymentsList.table.creationDate": "Created",
                      "components.DeploymentsList.table.deployedTo": "Deployed to",
                      "components.DeploymentsList.table.feedCount": "# of feeds",
                      "components.DeploymentsList.table.lastDeployed": "Last deployed",
                      "components.DeploymentsList.table.name": "Name",
                      "components.DeploymentsList.table.testDeployment": "Test?",
                      "components.DeploymentsList.title": "Deployments",
                      "components.DeploymentsPanel.delete": "Remove deployment",
                      "components.DeploymentsPanel.new": "New Deployment",
                      "components.DeploymentsPanel.search": "Search for deployments",
                      "components.DeploymentsPanel.table.creationDate": "Created",
                      "components.DeploymentsPanel.table.deployedTo": "Deployed to",
                      "components.DeploymentsPanel.table.feedCount": "# of feeds",
                      "components.DeploymentsPanel.table.lastDeployed": "Last deployed",
                      "components.DeploymentsPanel.table.name": "Name",
                      "components.DeploymentsPanel.table.testDeployment": "Test?",
                      "components.DeploymentsPanel.title": "Deployments",
                      "components.EditorFeedSourcePanel.active": "Active",
                      "components.EditorFeedSourcePanel.confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                      "components.EditorFeedSourcePanel.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.EditorFeedSourcePanel.createFromScratch": "Create GTFS from Scratch",
                      "components.EditorFeedSourcePanel.created": "created",
                      "components.EditorFeedSourcePanel.date": "Date",
                      "components.EditorFeedSourcePanel.delete": "Delete",
                      "components.EditorFeedSourcePanel.download": "Download",
                      "components.EditorFeedSourcePanel.feed": "Feed",
                      "components.EditorFeedSourcePanel.help.body.0": "Snapshots are save points you can always revert back to when editing a GTFS feed.",
                      "components.EditorFeedSourcePanel.help.body.1": "A snapshot might represent a work-in-progress, future planning scenario or even different service patterns (e.g., summer schedule markup).",
                      "components.EditorFeedSourcePanel.help.title": "What are snapshots?",
                      "components.EditorFeedSourcePanel.load": "Load for Editing",
                      "components.EditorFeedSourcePanel.loadLatest": "Load latest for editing",
                      "components.EditorFeedSourcePanel.name": "Name",
                      "components.EditorFeedSourcePanel.noSnapshotsExist": "No snapshots currently exist for this feed. Snapshots can be created within the Editor. Click \\"Edit Feed\\" to enter editing mode.",
                      "components.EditorFeedSourcePanel.noVersions": "(No Versions)",
                      "components.EditorFeedSourcePanel.noVersionsExist": "No versions exist for this feed source.",
                      "components.EditorFeedSourcePanel.of": "of",
                      "components.EditorFeedSourcePanel.publish": "Publish",
                      "components.EditorFeedSourcePanel.restore": "Restore",
                      "components.EditorFeedSourcePanel.snapshot": "snapshot",
                      "components.EditorFeedSourcePanel.title": "Snapshots",
                      "components.EditorFeedSourcePanel.version": "Version",
                      "components.FeedInfoPanel.uploadShapefile.body": "Select a zipped shapefile to display on map. Note: this is only for use as a visual aid.",
                      "components.FeedInfoPanel.uploadShapefile.error": "Uploaded file must be a valid zip file (.zip).",
                      "components.FeedInfoPanel.uploadShapefile.title": "Upload route shapefile",
                      "components.FeedSourceAttributes.lastUpdated": "Updated",
                      "components.FeedSourcePanel.search": "Search feeds",
                      "components.FeedSourceTable.comparisonColumn.DEPLOYED": "Deployed Version",
                      "components.FeedSourceTable.comparisonColumn.PUBLISHED": "Published Version",
                      "components.FeedSourceTable.createFirst": "Create first feed source!",
                      "components.FeedSourceTableRow.status.active": "Active",
                      "components.FeedSourceTableRow.status.all": "All",
                      "components.FeedSourceTableRow.status.expired": "Expired",
                      "components.FeedSourceTableRow.status.expiring-within-20-days": "Expiring within 20 days",
                      "components.FeedSourceTableRow.status.expiring-within-5-days": "Expiring within 5 days",
                      "components.FeedSourceTableRow.status.feedNotInDeployment": "Feed not in deployment",
                      "components.FeedSourceTableRow.status.feedNotPublished": "Feed not published",
                      "components.FeedSourceTableRow.status.future": "Future",
                      "components.FeedSourceTableRow.status.no-version": "No version",
                      "components.FeedSourceTableRow.status.same-as-deployed": "Same as Deployed",
                      "components.FeedSourceTableRow.status.same-as-published": "Same as Published",
                      "components.FeedSourceViewer.deploy": "Deploy",
                      "components.FeedSourceViewer.edit": "Edit GTFS",
                      "components.FeedSourceViewer.gtfs": "GTFS",
                      "components.FeedSourceViewer.notesTitle": "Notes",
                      "components.FeedSourceViewer.private": "Private view",
                      "components.FeedSourceViewer.properties.deployable": "Deployable?",
                      "components.FeedSourceViewer.properties.name": "Name",
                      "components.FeedSourceViewer.properties.noneSelected": "(None Selected)",
                      "components.FeedSourceViewer.properties.property": "Property",
                      "components.FeedSourceViewer.properties.public": "Public?",
                      "components.FeedSourceViewer.properties.retrievalMethod.fetchedAutomatically": "Fetched Automatically",
                      "components.FeedSourceViewer.properties.retrievalMethod.manuallyUploaded": "Manually Uploaded",
                      "components.FeedSourceViewer.properties.retrievalMethod.producedInHouse": "Produced In-house",
                      "components.FeedSourceViewer.properties.retrievalMethod.title": "Retrieval Method",
                      "components.FeedSourceViewer.properties.snapshot": "Editor Snapshot",
                      "components.FeedSourceViewer.properties.title": "Settings",
                      "components.FeedSourceViewer.properties.value": "Value",
                      "components.FeedSourceViewer.snapshotsTitle": "Snapshots",
                      "components.FeedSourceViewer.update": "Update",
                      "components.FeedSourceViewer.upload": "Upload",
                      "components.FeedSourceViewer.versions": "Versions",
                      "components.FeedSourceViewer.viewPublic": "View public page",
                      "components.FeedVersionNavigator.confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                      "components.FeedVersionNavigator.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.FeedVersionNavigator.delete": "Delete",
                      "components.FeedVersionNavigator.download": "Download",
                      "components.FeedVersionNavigator.feed": "Feed",
                      "components.FeedVersionNavigator.load": "Load for Editing",
                      "components.FeedVersionNavigator.next": "Next",
                      "components.FeedVersionNavigator.of": "of",
                      "components.FeedVersionNavigator.previous": "Previous",
                      "components.FeedVersionNavigator.version": "Version",
                      "components.FeedVersionTabs.agencyCount": "Agency Count",
                      "components.FeedVersionTabs.routeCount": "Route Count",
                      "components.FeedVersionTabs.stopTimesCount": "Stop time Count",
                      "components.FeedVersionTabs.tripCount": "Trip Count",
                      "components.FeedVersionTabs.validDates": "Valid Dates",
                      "components.FeedVersionViewer.confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                      "components.FeedVersionViewer.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.FeedVersionViewer.delete": "Delete",
                      "components.FeedVersionViewer.download": "Download",
                      "components.FeedVersionViewer.feed": "Feed",
                      "components.FeedVersionViewer.load": "Load",
                      "components.FeedVersionViewer.noVersionsExist": "No versions exist for this feed source.",
                      "components.FeedVersionViewer.status": "Status",
                      "components.FeedVersionViewer.timestamp": "File Timestamp",
                      "components.FeedVersionViewer.version": "version",
                      "components.GeneralSettings.confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                      "components.GeneralSettings.deleteProject": "Delete Project?",
                      "components.GeneralSettings.deployment.buildConfig.elevationBucket.accessKey": "Access Key",
                      "components.GeneralSettings.deployment.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                      "components.GeneralSettings.deployment.buildConfig.elevationBucket.secretKey": "Secret Key",
                      "components.GeneralSettings.deployment.buildConfig.fares": "Fares",
                      "components.GeneralSettings.deployment.buildConfig.fetchElevationUS": "Fetch Elevation",
                      "components.GeneralSettings.deployment.buildConfig.stationTransfers": "Sta. Transfers",
                      "components.GeneralSettings.deployment.buildConfig.subwayAccessTime": "Subway Access Time",
                      "components.GeneralSettings.deployment.buildConfig.title": "Build Config",
                      "components.GeneralSettings.deployment.osm.bounds": "Custom Extract Bounds",
                      "components.GeneralSettings.deployment.osm.custom": "Use Custom Extract Bounds",
                      "components.GeneralSettings.deployment.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                      "components.GeneralSettings.deployment.osm.title": "OSM Extract",
                      "components.GeneralSettings.deployment.otpServers.$index.admin": "Admin access only?",
                      "components.GeneralSettings.deployment.otpServers.$index.delete": "Remove",
                      "components.GeneralSettings.deployment.otpServers.$index.internalUrl": "Internal URLs",
                      "components.GeneralSettings.deployment.otpServers.$index.name": "Name",
                      "components.GeneralSettings.deployment.otpServers.$index.namePlaceholder": "Production",
                      "components.GeneralSettings.deployment.otpServers.$index.publicUrl": "Public URL",
                      "components.GeneralSettings.deployment.otpServers.$index.s3Bucket": "S3 bucket name",
                      "components.GeneralSettings.deployment.otpServers.new": "Add server",
                      "components.GeneralSettings.deployment.otpServers.serverPlaceholder": "Server name",
                      "components.GeneralSettings.deployment.otpServers.title": "Servers",
                      "components.GeneralSettings.deployment.routerConfig.brandingUrlRoot": "Branding URL Root",
                      "components.GeneralSettings.deployment.routerConfig.carDropoffTime": "Car Dropoff Time",
                      "components.GeneralSettings.deployment.routerConfig.numItineraries": "# of itineraries",
                      "components.GeneralSettings.deployment.routerConfig.requestLogFile": "Request log file",
                      "components.GeneralSettings.deployment.routerConfig.stairsReluctance": "Stairs Reluctance",
                      "components.GeneralSettings.deployment.routerConfig.title": "Router Config",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.sourceType": "Source type",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.type": "Type",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.url": "URL",
                      "components.GeneralSettings.deployment.routerConfig.updaters.new": "Add updater",
                      "components.GeneralSettings.deployment.routerConfig.updaters.placeholder": "Updater name",
                      "components.GeneralSettings.deployment.routerConfig.updaters.title": "Real-time updaters",
                      "components.GeneralSettings.deployment.routerConfig.walkSpeed": "Walk Speed",
                      "components.GeneralSettings.deployment.title": "Deployment",
                      "components.GeneralSettings.general.location.boundingBox": "Bounding box (W,S,E,N)",
                      "components.GeneralSettings.general.location.defaultLanguage": "Default language",
                      "components.GeneralSettings.general.location.defaultLocation": "Default location (lat, lng)",
                      "components.GeneralSettings.general.location.defaultTimeZone": "Default time zone",
                      "components.GeneralSettings.general.location.title": "Location",
                      "components.GeneralSettings.general.name": "Project name",
                      "components.GeneralSettings.general.title": "General",
                      "components.GeneralSettings.general.updates.autoFetchFeeds": "Auto fetch feed sources?",
                      "components.GeneralSettings.general.updates.title": "Updates",
                      "components.GeneralSettings.rename": "Rename",
                      "components.GeneralSettings.save": "Save",
                      "components.GeneralSettings.title": "Settings",
                      "components.GtfsValidationExplorer.accessibilityValidation": "Accessibility Explorer",
                      "components.GtfsValidationExplorer.table.count": "Count",
                      "components.GtfsValidationExplorer.table.file": "File",
                      "components.GtfsValidationExplorer.table.issue": "Issue",
                      "components.GtfsValidationExplorer.table.priority": "Priority",
                      "components.GtfsValidationExplorer.timeValidation": "Time-based Validation",
                      "components.GtfsValidationExplorer.title": "Validation Explorer",
                      "components.GtfsValidationExplorer.validationIssues": "Validation Issues",
                      "components.GtfsValidationViewer.explorer": "Validation Explorer",
                      "components.GtfsValidationViewer.issues.other": "Other issues",
                      "components.GtfsValidationViewer.issues.routes": "Route issues",
                      "components.GtfsValidationViewer.issues.shapes": "Shape issues",
                      "components.GtfsValidationViewer.issues.stop_times": "Stop times issues",
                      "components.GtfsValidationViewer.issues.stops": "Stop issues",
                      "components.GtfsValidationViewer.issues.trips": "Trip issues",
                      "components.GtfsValidationViewer.noResults": "No validation results to show.",
                      "components.GtfsValidationViewer.title": "Validation Results",
                      "components.LanguageSelect.placeholder": "Select language...",
                      "components.Login.title": "Log in",
                      "components.NotesViewer.all": "All Comments",
                      "components.NotesViewer.feedSource": "Feed Source",
                      "components.NotesViewer.feedVersion": "Version",
                      "components.NotesViewer.new": "Post",
                      "components.NotesViewer.none": "No comments.",
                      "components.NotesViewer.postComment": "Post a New Comment",
                      "components.NotesViewer.refresh": "Refresh",
                      "components.NotesViewer.title": "Comments",
                      "components.OrganizationList.new": "Create org",
                      "components.OrganizationList.search": "Search orgs",
                      "components.OrganizationSettings.extensions": "Extensions",
                      "components.OrganizationSettings.logoUrl.label": "Logo URL",
                      "components.OrganizationSettings.logoUrl.placeholder": "http://example.com/logo_30x30.png",
                      "components.OrganizationSettings.name.label": "Name",
                      "components.OrganizationSettings.name.placeholder": "Big City Transit",
                      "components.OrganizationSettings.orgDetails": "Organization details",
                      "components.OrganizationSettings.projects": "Projects",
                      "components.OrganizationSettings.subDetails": "Subscription details",
                      "components.OrganizationSettings.subscriptionBeginDate": "Subscription begins",
                      "components.OrganizationSettings.subscriptionEndDate": "Subscription ends",
                      "components.OrganizationSettings.usageTier.high": "High",
                      "components.OrganizationSettings.usageTier.low": "Low",
                      "components.OrganizationSettings.usageTier.medium": "Medium",
                      "components.ProjectAccessSettings.admin": "Admin",
                      "components.ProjectAccessSettings.cannotFetchFeeds": "Cannot fetch feeds",
                      "components.ProjectAccessSettings.custom": "Custom",
                      "components.ProjectAccessSettings.feeds": "Feed Sources",
                      "components.ProjectAccessSettings.noAccess": "No Access",
                      "components.ProjectAccessSettings.permissions": "Permissions",
                      "components.ProjectAccessSettings.title": "Project Settings for",
                      "components.ProjectFeedListToolbar.comparison.DEPLOYED": "Deployed",
                      "components.ProjectFeedListToolbar.comparison.LATEST": "Latest",
                      "components.ProjectFeedListToolbar.comparison.PUBLISHED": "Published",
                      "components.ProjectFeedListToolbar.deployments": "Deployments",
                      "components.ProjectFeedListToolbar.feeds.createFirst": "Create first feed source!",
                      "components.ProjectFeedListToolbar.feeds.new": "New",
                      "components.ProjectFeedListToolbar.feeds.search": "Search by name",
                      "components.ProjectFeedListToolbar.feeds.table.deployable": "Deployable?",
                      "components.ProjectFeedListToolbar.feeds.table.errorCount": "Errors",
                      "components.ProjectFeedListToolbar.feeds.table.lastUpdated": "Updated",
                      "components.ProjectFeedListToolbar.feeds.table.name": "Name",
                      "components.ProjectFeedListToolbar.feeds.table.public": "Public?",
                      "components.ProjectFeedListToolbar.feeds.table.retrievalMethod": "Retrieval Method",
                      "components.ProjectFeedListToolbar.feeds.table.validRange": "Valid Range",
                      "components.ProjectFeedListToolbar.feeds.title": "Feed Sources",
                      "components.ProjectFeedListToolbar.feeds.update": "Fetch all",
                      "components.ProjectFeedListToolbar.filter.active": "Active",
                      "components.ProjectFeedListToolbar.filter.all": "All",
                      "components.ProjectFeedListToolbar.filter.expired": "Expired",
                      "components.ProjectFeedListToolbar.filter.expiring": "Expiring",
                      "components.ProjectFeedListToolbar.filter.future": "Future",
                      "components.ProjectFeedListToolbar.makePublic": "Publish public feeds",
                      "components.ProjectFeedListToolbar.mergeFeeds": "Merge all",
                      "components.ProjectFeedListToolbar.settings": "Settings",
                      "components.ProjectFeedListToolbar.sort.alphabetically.asc": "A-Z",
                      "components.ProjectFeedListToolbar.sort.alphabetically.desc": "Z-A",
                      "components.ProjectFeedListToolbar.sort.alphabetically.title": "Alphabetically",
                      "components.ProjectFeedListToolbar.sort.endDate.asc": "Soonest-Latest",
                      "components.ProjectFeedListToolbar.sort.endDate.desc": "Latest-Soonest",
                      "components.ProjectFeedListToolbar.sort.endDate.title": "Expiration Date",
                      "components.ProjectFeedListToolbar.sort.lastUpdated.asc": "Stale-Recent",
                      "components.ProjectFeedListToolbar.sort.lastUpdated.desc": "Recent-Stale",
                      "components.ProjectFeedListToolbar.sort.lastUpdated.title": "Last Update",
                      "components.ProjectFeedListToolbar.sort.numErrors.asc": "Least-Most",
                      "components.ProjectFeedListToolbar.sort.numErrors.desc": "Most-Least",
                      "components.ProjectFeedListToolbar.sort.numErrors.title": "Number of Errors",
                      "components.ProjectFeedListToolbar.sort.startDate.asc": "Soonest-Latest",
                      "components.ProjectFeedListToolbar.sort.startDate.desc": "Latest-Soonest",
                      "components.ProjectFeedListToolbar.sort.startDate.title": "Start Date",
                      "components.ProjectFeedListToolbar.sync.mtc": "Sync from MTC",
                      "components.ProjectFeedListToolbar.sync.transitfeeds": "Sync from transitfeeds",
                      "components.ProjectFeedListToolbar.sync.transitland": "Sync from transit.land",
                      "components.ProjectSettings.deployment.buildConfig.elevationBucket.accessKey": "Access Key",
                      "components.ProjectSettings.deployment.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                      "components.ProjectSettings.deployment.buildConfig.elevationBucket.secretKey": "Secret Key",
                      "components.ProjectSettings.deployment.buildConfig.fares": "Fares",
                      "components.ProjectSettings.deployment.buildConfig.fetchElevationUS": "Fetch Elevation",
                      "components.ProjectSettings.deployment.buildConfig.stationTransfers": "Sta. Transfers",
                      "components.ProjectSettings.deployment.buildConfig.subwayAccessTime": "Subway Access Time",
                      "components.ProjectSettings.deployment.buildConfig.title": "Build Config",
                      "components.ProjectSettings.deployment.osm.bounds": "Custom Extract Bounds",
                      "components.ProjectSettings.deployment.osm.custom": "Use Custom Extract Bounds",
                      "components.ProjectSettings.deployment.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                      "components.ProjectSettings.deployment.osm.title": "OSM Extract",
                      "components.ProjectSettings.deployment.otpServers.$index.admin": "Admin access only?",
                      "components.ProjectSettings.deployment.otpServers.$index.delete": "Remove",
                      "components.ProjectSettings.deployment.otpServers.$index.internalUrl": "Internal URLs",
                      "components.ProjectSettings.deployment.otpServers.$index.name": "Name",
                      "components.ProjectSettings.deployment.otpServers.$index.namePlaceholder": "Production",
                      "components.ProjectSettings.deployment.otpServers.$index.publicUrl": "Public URL",
                      "components.ProjectSettings.deployment.otpServers.$index.s3Bucket": "S3 bucket name",
                      "components.ProjectSettings.deployment.otpServers.new": "Add server",
                      "components.ProjectSettings.deployment.otpServers.serverPlaceholder": "Server name",
                      "components.ProjectSettings.deployment.otpServers.title": "Servers",
                      "components.ProjectSettings.deployment.routerConfig.brandingUrlRoot": "Branding URL Root",
                      "components.ProjectSettings.deployment.routerConfig.carDropoffTime": "Car Dropoff Time",
                      "components.ProjectSettings.deployment.routerConfig.numItineraries": "# of itineraries",
                      "components.ProjectSettings.deployment.routerConfig.requestLogFile": "Request log file",
                      "components.ProjectSettings.deployment.routerConfig.stairsReluctance": "Stairs Reluctance",
                      "components.ProjectSettings.deployment.routerConfig.title": "Router Config",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.sourceType": "Source type",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.type": "Type",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.url": "URL",
                      "components.ProjectSettings.deployment.routerConfig.updaters.new": "Add updater",
                      "components.ProjectSettings.deployment.routerConfig.updaters.placeholder": "Updater name",
                      "components.ProjectSettings.deployment.routerConfig.updaters.title": "Real-time updaters",
                      "components.ProjectSettings.deployment.routerConfig.walkSpeed": "Walk Speed",
                      "components.ProjectSettings.deployment.title": "Deployment",
                      "components.ProjectSettings.project.cannotFetchFeeds": "Cannot fetch feeds",
                      "components.ProjectSettings.project.feeds": "Feeds",
                      "components.ProjectSettings.project.permissions": "Permissions",
                      "components.ProjectSettings.rename": "Rename",
                      "components.ProjectSettings.save": "Save",
                      "components.ProjectSettings.title": "Settings",
                      "components.ProjectSettingsForm.cancel": "Cancel",
                      "components.ProjectSettingsForm.confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                      "components.ProjectSettingsForm.deleteProject": "Delete Project?",
                      "components.ProjectSettingsForm.fields.location.boundingBox": "Bounding box (W,S,E,N)",
                      "components.ProjectSettingsForm.fields.location.defaultLanguage": "Default language",
                      "components.ProjectSettingsForm.fields.location.defaultLocation": "Default location (lat, lng)",
                      "components.ProjectSettingsForm.fields.location.defaultTimeZone": "Default time zone",
                      "components.ProjectSettingsForm.fields.location.title": "Location",
                      "components.ProjectSettingsForm.fields.name": "Project name",
                      "components.ProjectSettingsForm.fields.title": "General",
                      "components.ProjectSettingsForm.fields.updates.autoFetchFeeds": "Auto fetch feed sources?",
                      "components.ProjectSettingsForm.fields.updates.title": "Updates",
                      "components.ProjectSettingsForm.save": "Save",
                      "components.ProjectSettingsForm.title": "Settings",
                      "components.ProjectViewer.deployments": "Deployments",
                      "components.ProjectViewer.feeds.createFirst": "Create first feed source!",
                      "components.ProjectViewer.feeds.new": "New Feed Source",
                      "components.ProjectViewer.feeds.search": "Search by name",
                      "components.ProjectViewer.feeds.table.deployable": "Deployable?",
                      "components.ProjectViewer.feeds.table.errorCount": "Errors",
                      "components.ProjectViewer.feeds.table.lastUpdated": "Updated",
                      "components.ProjectViewer.feeds.table.name": "Name",
                      "components.ProjectViewer.feeds.table.public": "Public?",
                      "components.ProjectViewer.feeds.table.retrievalMethod": "Retrieval Method",
                      "components.ProjectViewer.feeds.table.validRange": "Valid Range",
                      "components.ProjectViewer.feeds.title": "Feed Sources",
                      "components.ProjectViewer.feeds.update": "Fetch all",
                      "components.ProjectViewer.makePublic": "Publish public feeds",
                      "components.ProjectViewer.mergeFeeds": "Merge all",
                      "components.ProjectViewer.settings": "Settings",
                      "components.ProjectsList.createFirst": "Create my first project",
                      "components.ProjectsList.help.content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                      "components.ProjectsList.help.title": "What's a project?",
                      "components.ProjectsList.new": "New Project",
                      "components.ProjectsList.noProjects": "You currently do not have any projects.",
                      "components.ProjectsList.search": "Search by project name",
                      "components.ProjectsList.table.name": "Project Name",
                      "components.ProjectsList.title": "Projects",
                      "components.PublicFeedsTable.country": "Country",
                      "components.PublicFeedsTable.lastUpdated": "Last Updated",
                      "components.PublicFeedsTable.link": "Link to GTFS",
                      "components.PublicFeedsTable.name": "Feed Name",
                      "components.PublicFeedsTable.region": "Region",
                      "components.PublicFeedsTable.search": "Search",
                      "components.PublicFeedsTable.stateProvince": "State or Province",
                      "components.PublicFeedsViewer.title": "Catalogue",
                      "components.RegionSearch.placeholder": "Search for regions or agencies",
                      "components.ResultTable.affectedIds": "Affected ID(s)",
                      "components.ResultTable.description": "Description",
                      "components.ResultTable.line": "Line",
                      "components.ResultTable.priority": "Priority",
                      "components.ResultTable.problemType": "Problem Type",
                      "components.Sidebar.unknown": "Unknown",
                      "components.SnapshotItem.active": "Active",
                      "components.SnapshotItem.confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                      "components.SnapshotItem.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.SnapshotItem.createFromScratch": "Create GTFS from Scratch",
                      "components.SnapshotItem.created": "created",
                      "components.SnapshotItem.date": "Date",
                      "components.SnapshotItem.delete": "Delete",
                      "components.SnapshotItem.download": "Download",
                      "components.SnapshotItem.feed": "Feed",
                      "components.SnapshotItem.load": "Load for Editing",
                      "components.SnapshotItem.loadLatest": "Load latest for editing",
                      "components.SnapshotItem.name": "Name",
                      "components.SnapshotItem.noVersions": "(No Versions)",
                      "components.SnapshotItem.noVersionsExist": "No versions exist for this feed source.",
                      "components.SnapshotItem.of": "of",
                      "components.SnapshotItem.publish": "Publish",
                      "components.SnapshotItem.restore": "Restore",
                      "components.SnapshotItem.snapshot": "snapshot",
                      "components.SnapshotItem.title": "Snapshots",
                      "components.SnapshotItem.version": "Version",
                      "components.StarButton.star": "Star",
                      "components.StarButton.unstar": "Unstar",
                      "components.TimetableHelpModal.shortcuts.modify.desc.0": "Delete selected trip(s)",
                      "components.TimetableHelpModal.shortcuts.modify.desc.1": "New trip",
                      "components.TimetableHelpModal.shortcuts.modify.desc.2": "Clone selected trip(s)",
                      "components.TimetableHelpModal.shortcuts.modify.desc.3": "Copy time value from adjacent cell (the cell immediately to the left)",
                      "components.TimetableHelpModal.shortcuts.modify.desc.4": "Copy value from cell directly above",
                      "components.TimetableHelpModal.shortcuts.modify.title": "Modify trips",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.0": "Previous/next trip",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.1": "Previous/next column",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.2": "Select trip",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.3": "Select all trips",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.4": "Deselect all trips",
                      "components.TimetableHelpModal.shortcuts.navigate.title": "Navigating and selecting trips",
                      "components.TimetableHelpModal.shortcuts.offset.desc.0": "Offset selected trips' stop times by adding offset time",
                      "components.TimetableHelpModal.shortcuts.offset.desc.1": "Offset selected trips' stop times by subtracting offset time",
                      "components.TimetableHelpModal.shortcuts.offset.desc.2": "Offset only active cell's time by adding offset time",
                      "components.TimetableHelpModal.shortcuts.offset.desc.3": "Offset only active cell's time by subtracting offset time",
                      "components.TimetableHelpModal.shortcuts.offset.desc.4": "Decrease offset time by 1 minute",
                      "components.TimetableHelpModal.shortcuts.offset.desc.5": "Decrease offset time by 10 minutes",
                      "components.TimetableHelpModal.shortcuts.offset.desc.6": "Increase offset time by 1 minute",
                      "components.TimetableHelpModal.shortcuts.offset.desc.7": "Increase offset time by 10 minutes",
                      "components.TimetableHelpModal.shortcuts.offset.title": "Offsetting times",
                      "components.TimetableHelpModal.title": "Timetable editor keyboard shortcuts",
                      "components.TimezoneSelect.placeholder": "Select timezone...",
                      "components.UserAccount.account.title": "Account",
                      "components.UserAccount.billing.title": "Billing",
                      "components.UserAccount.notifications.methods": "Notification methods",
                      "components.UserAccount.notifications.subscriptions": "Your subscriptions",
                      "components.UserAccount.notifications.title": "Notifications",
                      "components.UserAccount.notifications.unsubscribeAll": "Unsubscribe from all",
                      "components.UserAccount.organizationSettings": "Organization settings",
                      "components.UserAccount.organizations.title": "Organizations",
                      "components.UserAccount.personalSettings": "Personal settings",
                      "components.UserAccount.profile.profileInformation": "Profile information",
                      "components.UserAccount.profile.title": "Profile",
                      "components.UserAccount.title": "My settings",
                      "components.UserAdmin.noAccess": "You do not have sufficient user privileges to access this area.",
                      "components.UserAdmin.title": "Administration",
                      "components.UserHomePage.createFirst": "Create my first project",
                      "components.UserHomePage.help.content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                      "components.UserHomePage.help.title": "What's a project?",
                      "components.UserHomePage.new": "New Project",
                      "components.UserHomePage.noProjects": "You currently do not have any projects.",
                      "components.UserHomePage.table.name": "Project Name",
                      "components.UserHomePage.title": "Projects",
                      "components.UserList.filterByOrg": "Filter by org.",
                      "components.UserList.of": "of",
                      "components.UserList.search": "Search by username",
                      "components.UserList.showing": "Showing Users",
                      "components.UserList.title": "User Management",
                      "components.UserRow.appAdmin": "App admin",
                      "components.UserRow.cancel": "Cancel",
                      "components.UserRow.delete": "Delete",
                      "components.UserRow.deleteConfirm": "Are you sure you want to permanently delete this user?",
                      "components.UserRow.edit": "Edit",
                      "components.UserRow.orgAdmin": "Org admin",
                      "components.UserRow.save": "Save",
                      "components.UserSettings.admin.description": "Application administrators have full access to all projects.",
                      "components.UserSettings.admin.title": "Application Admininistrator",
                      "components.UserSettings.application": "Application Settings",
                      "components.UserSettings.cancel": "Cancel",
                      "components.UserSettings.delete": "Delete",
                      "components.UserSettings.edit": "Edit",
                      "components.UserSettings.org.admin": "Organization administrator",
                      "components.UserSettings.org.billing": "Billing admin",
                      "components.UserSettings.org.description": "Organization administrators have full access to projects within the organization.",
                      "components.UserSettings.project.admin": "Admin",
                      "components.UserSettings.project.custom": "Custom",
                      "components.UserSettings.project.noAccess": "No Access",
                      "components.UserSettings.save": "Save",
                      "components.VersionButtonToolbar.confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                      "components.VersionButtonToolbar.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.VersionButtonToolbar.delete": "Delete",
                      "components.VersionButtonToolbar.download": "Download",
                      "components.VersionButtonToolbar.feed": "Feed",
                      "components.VersionButtonToolbar.load": "Load",
                      "components.VersionButtonToolbar.noVersionsExist": "No versions exist for this feed source.",
                      "components.VersionButtonToolbar.status": "Status",
                      "components.VersionButtonToolbar.timestamp": "File Timestamp",
                      "components.VersionButtonToolbar.version": "version",
                      "components.WatchButton.unwatch": "Unwatch",
                      "components.WatchButton.watch": "Watch",
                    },
                    Object {
                      "_id": "es",
                      "_name": "Español",
                      "components": Object {
                        "Breadcrumbs": Object {
                          "deployments": "Deployments",
                          "projects": "Projects",
                          "root": "Explore",
                        },
                        "CollapsiblePanel": Object {
                          "deployment": Object {
                            "buildConfig": Object {
                              "elevationBucket": Object {
                                "accessKey": "Access Key",
                                "bucketName": "S3 Bucket Name",
                                "secretKey": "Secret Key",
                              },
                              "fares": "Fares",
                              "fetchElevationUS": "Fetch Elevation",
                              "stationTransfers": "Sta. Transfers",
                              "subwayAccessTime": "Subway Access Time",
                              "title": "Build Config",
                            },
                            "osm": Object {
                              "bounds": "Custom Extract Bounds",
                              "custom": "Use Custom Extract Bounds",
                              "gtfs": "Use GTFS-Derived Extract Bounds",
                              "title": "OSM Extract",
                            },
                            "otpServers": Object {
                              "$index": Object {
                                "admin": "Admin access only?",
                                "delete": "Remove",
                                "internalUrl": "Internal URLs",
                                "name": "Name",
                                "namePlaceholder": "Production",
                                "publicUrl": "Public URL",
                                "s3Bucket": "S3 bucket name",
                              },
                              "new": "Add server",
                              "serverPlaceholder": "Server name",
                              "title": "Servers",
                            },
                            "routerConfig": Object {
                              "brandingUrlRoot": "Branding URL Root",
                              "carDropoffTime": "Car Dropoff Time",
                              "numItineraries": "# of itineraries",
                              "requestLogFile": "Request log file",
                              "stairsReluctance": "Stairs Reluctance",
                              "title": "Router Config",
                              "updaters": Object {
                                "$index": Object {
                                  "defaultAgencyId": "Default agency ID",
                                  "frequencySec": "Frequency (in seconds)",
                                  "sourceType": "Source type",
                                  "type": "Type",
                                  "url": "URL",
                                },
                                "new": "Add updater",
                                "placeholder": "Updater name",
                                "title": "Real-time updaters",
                              },
                              "walkSpeed": "Walk Speed",
                            },
                            "title": "Deployment",
                          },
                        },
                        "CreateUser": Object {
                          "new": "Create User",
                        },
                        "DatatoolsNavbar": Object {
                          "account": "My Account",
                          "alerts": "Alertas",
                          "editor": "Editor",
                          "guide": "Manual del usuario",
                          "login": "Iniciar sesión",
                          "logout": "Cerrar sesión",
                          "manager": "Administrador",
                          "resetPassword": "Reset Password",
                          "signConfig": "eTID Config",
                          "users": "Usuarios",
                        },
                        "DeploymentConfirmModal": Object {
                          "alert": Object {
                            "alreadyDeployed": "is already deployed to this server at the same router. (Deploying would evict the current graph.)",
                            "boundsTooLarge": "Bounds are much too large to successfully deploy to OpenTripPlanner. Deployment is disabled.",
                            "expiredFeeds": "The following feeds have expired (all scheduled trips are for past dates)",
                            "missingBounds": "There are no bounds defined for the set of feeds. Deployment is disabled.",
                            "missingFeeds": "There are no feeds defined for this deployment. Deployment is disabled.",
                            "success": "Deployment successfully deployed.",
                          },
                          "cancel": "Cancel",
                          "close": "Close",
                          "danger": "Danger!",
                          "deploy": "Deploy",
                          "invalidBounds": "Bounds are invalid!",
                          "success": "Success!",
                          "to": "to",
                          "warning": "Warning!",
                        },
                        "DeploymentSettings": Object {
                          "buildConfig": Object {
                            "elevationBucket": Object {
                              "accessKey": "Access Key",
                              "bucketName": "S3 Bucket Name",
                              "secretKey": "Secret Key",
                            },
                            "fares": "Fares",
                            "fetchElevationUS": "Fetch Elevation",
                            "save": "Save",
                            "stationTransfers": "Sta. Transfers",
                            "subwayAccessTime": "Subway Access Time",
                            "title": "Build Config",
                          },
                          "osm": Object {
                            "bounds": "Custom Extract Bounds",
                            "custom": "Use Custom Extract Bounds",
                            "gtfs": "Use GTFS-Derived Extract Bounds",
                            "title": "OSM Extract",
                          },
                          "otpServers": Object {
                            "$index": Object {
                              "admin": "Admin access only?",
                              "delete": "Remove",
                              "internalUrl": "Internal URLs",
                              "name": "Name",
                              "namePlaceholder": "Production",
                              "publicUrl": "Public URL",
                              "s3Bucket": "S3 bucket name",
                            },
                            "new": "Add server",
                            "serverPlaceholder": "Server name",
                            "title": "Servers",
                          },
                          "routerConfig": Object {
                            "brandingUrlRoot": "Branding URL Root",
                            "carDropoffTime": "Car Dropoff Time",
                            "numItineraries": "# of itineraries",
                            "requestLogFile": "Request log file",
                            "stairsReluctance": "Stairs Reluctance",
                            "title": "Router Config",
                            "updaters": Object {
                              "$index": Object {
                                "defaultAgencyId": "Default agency ID",
                                "frequencySec": "Frequency (in seconds)",
                                "sourceType": "Source type",
                                "type": "Type",
                                "url": "URL",
                              },
                              "new": "Add updater",
                              "placeholder": "Updater name",
                              "title": "Real-time updaters",
                            },
                            "walkSpeed": "Walk Speed",
                          },
                          "save": "Save",
                          "title": "Deployment",
                        },
                        "DeploymentVersionsTable": Object {
                          "dateRetrieved": "Date Retrieved",
                          "errorCount": "Error Count",
                          "expires": "Expires",
                          "loadStatus": "Loaded Successfully",
                          "name": "Name",
                          "routeCount": "Route Count",
                          "stopTimesCount": "Stop time count",
                          "tripCount": "Trip Count",
                          "validFrom": "Valid from",
                          "version": "Version",
                        },
                        "DeploymentViewer": Object {
                          "addFeedSource": "Add Feed Source",
                          "allFeedsAdded": "All feeds added",
                          "deploy": "Deploy",
                          "download": "Download",
                          "noServers": "No servers defined",
                          "search": "Search by name",
                          "table": Object {
                            "dateRetrieved": "Date Retrieved",
                            "errorCount": "Error Count",
                            "expires": "Expires",
                            "loadStatus": "Loaded Successfully",
                            "name": "Name",
                            "routeCount": "Route Count",
                            "stopTimesCount": "Stop time count",
                            "tripCount": "Trip Count",
                            "validFrom": "Valid from",
                            "version": "Version",
                          },
                          "to": "to",
                          "versions": "Feed Versions",
                        },
                        "DeploymentsList": Object {
                          "delete": "Remove deployment",
                          "new": "New Deployment",
                          "search": "Search for deployments",
                          "table": Object {
                            "creationDate": "Created",
                            "deployedTo": "Deployed to",
                            "feedCount": "# of feeds",
                            "lastDeployed": "Last deployed",
                            "name": "Name",
                            "testDeployment": "Test?",
                          },
                          "title": "Deployments",
                        },
                        "DeploymentsPanel": Object {
                          "delete": "Remove deployment",
                          "new": "New Deployment",
                          "search": "Search for deployments",
                          "table": Object {
                            "creationDate": "Created",
                            "deployedTo": "Deployed to",
                            "feedCount": "# of feeds",
                            "lastDeployed": "Last deployed",
                            "name": "Name",
                            "testDeployment": "Test?",
                          },
                          "title": "Deployments",
                        },
                        "EditorFeedSourcePanel": Object {
                          "active": "Active",
                          "confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "createFromScratch": "Create GTFS from Scratch",
                          "created": "created",
                          "date": "Date",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "help": Object {
                            "body": Array [
                              "Snapshots are save points you can always revert back to when editing a GTFS feed.",
                              "A snapshot might represent a work-in-progress, future planning scenario or even different service patterns (e.g., summer schedule markup).",
                            ],
                            "title": "What are snapshots?",
                          },
                          "load": "Load for Editing",
                          "loadLatest": "Load latest for editing",
                          "name": "Name",
                          "noSnapshotsExist": "No snapshots currently exist for this feed. Snapshots can be created within the Editor. Click \\"Edit Feed\\" to enter editing mode.",
                          "noVersions": "(No Versions)",
                          "noVersionsExist": "No versions exist for this feed source.",
                          "of": "of",
                          "publish": "Publish",
                          "restore": "Restore",
                          "snapshot": "snapshot",
                          "title": "Snapshots",
                          "version": "Version",
                        },
                        "FeedInfoPanel": Object {
                          "uploadShapefile": Object {
                            "body": "Select a zipped shapefile to display on map. Note: this is only for use as a visual aid.",
                            "error": "Uploaded file must be a valid zip file (.zip).",
                            "title": "Upload route shapefile",
                          },
                        },
                        "FeedSourceAttributes": Object {
                          "lastUpdated": "Updated",
                        },
                        "FeedSourcePanel": Object {
                          "search": "Search feeds",
                        },
                        "FeedSourceTable": Object {
                          "comparisonColumn": Object {
                            "DEPLOYED": "Deployed Version",
                            "PUBLISHED": "Published Version",
                          },
                          "createFirst": "Create first feed source!",
                        },
                        "FeedSourceTableRow": Object {
                          "status": Object {
                            "active": "Active",
                            "all": "All",
                            "expired": "Expired",
                            "expiring-within-20-days": "Expiring within 20 days",
                            "expiring-within-5-days": "Expiring within 5 days",
                            "feedNotInDeployment": "Feed not in deployment",
                            "feedNotPublished": "Feed not published",
                            "future": "Future",
                            "no-version": "No version",
                            "same-as-deployed": "Same as Deployed",
                            "same-as-published": "Same as Published",
                          },
                        },
                        "FeedSourceViewer": Object {
                          "deploy": "Deploy",
                          "edit": "Edit GTFS",
                          "gtfs": "GTFS",
                          "notesTitle": "Notes",
                          "private": "Private view",
                          "properties": Object {
                            "deployable": "Deployable?",
                            "name": "Name",
                            "noneSelected": "(None Selected)",
                            "property": "Property",
                            "public": "Public?",
                            "retrievalMethod": Object {
                              "fetchedAutomatically": "Fetched Automatically",
                              "manuallyUploaded": "Manually Uploaded",
                              "producedInHouse": "Produced In-house",
                              "title": "Retrieval Method",
                            },
                            "snapshot": "Editor Snapshot",
                            "title": "Settings",
                            "value": "Value",
                          },
                          "snapshotsTitle": "Snapshots",
                          "update": "Update",
                          "upload": "Upload",
                          "versions": "Versions",
                          "viewPublic": "View public page",
                        },
                        "FeedVersionNavigator": Object {
                          "confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "load": "Load for Editing",
                          "next": "Next",
                          "of": "of",
                          "previous": "Previous",
                          "version": "Version",
                        },
                        "FeedVersionTabs": Object {
                          "agencyCount": "Agency Count",
                          "routeCount": "Route Count",
                          "stopTimesCount": "Stop time Count",
                          "tripCount": "Trip Count",
                          "validDates": "Valid Dates",
                        },
                        "FeedVersionViewer": Object {
                          "confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "load": "Load",
                          "noVersionsExist": "No versions exist for this feed source.",
                          "status": "Status",
                          "timestamp": "File Timestamp",
                          "version": "version",
                        },
                        "GeneralSettings": Object {
                          "confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                          "deleteProject": "Delete Project?",
                          "deployment": Object {
                            "buildConfig": Object {
                              "elevationBucket": Object {
                                "accessKey": "Access Key",
                                "bucketName": "S3 Bucket Name",
                                "secretKey": "Secret Key",
                              },
                              "fares": "Fares",
                              "fetchElevationUS": "Fetch Elevation",
                              "stationTransfers": "Sta. Transfers",
                              "subwayAccessTime": "Subway Access Time",
                              "title": "Build Config",
                            },
                            "osm": Object {
                              "bounds": "Custom Extract Bounds",
                              "custom": "Use Custom Extract Bounds",
                              "gtfs": "Use GTFS-Derived Extract Bounds",
                              "title": "OSM Extract",
                            },
                            "otpServers": Object {
                              "$index": Object {
                                "admin": "Admin access only?",
                                "delete": "Remove",
                                "internalUrl": "Internal URLs",
                                "name": "Name",
                                "namePlaceholder": "Production",
                                "publicUrl": "Public URL",
                                "s3Bucket": "S3 bucket name",
                              },
                              "new": "Add server",
                              "serverPlaceholder": "Server name",
                              "title": "Servers",
                            },
                            "routerConfig": Object {
                              "brandingUrlRoot": "Branding URL Root",
                              "carDropoffTime": "Car Dropoff Time",
                              "numItineraries": "# of itineraries",
                              "requestLogFile": "Request log file",
                              "stairsReluctance": "Stairs Reluctance",
                              "title": "Router Config",
                              "updaters": Object {
                                "$index": Object {
                                  "defaultAgencyId": "Default agency ID",
                                  "frequencySec": "Frequency (in seconds)",
                                  "sourceType": "Source type",
                                  "type": "Type",
                                  "url": "URL",
                                },
                                "new": "Add updater",
                                "placeholder": "Updater name",
                                "title": "Real-time updaters",
                              },
                              "walkSpeed": "Walk Speed",
                            },
                            "title": "Deployment",
                          },
                          "general": Object {
                            "location": Object {
                              "boundingBox": "Bounding box (W,S,E,N)",
                              "defaultLanguage": "Default language",
                              "defaultLocation": "Default location (lat, lng)",
                              "defaultTimeZone": "Default time zone",
                              "title": "Location",
                            },
                            "name": "Project name",
                            "title": "General",
                            "updates": Object {
                              "autoFetchFeeds": "Auto fetch feed sources?",
                              "title": "Updates",
                            },
                          },
                          "rename": "Rename",
                          "save": "Save",
                          "title": "Settings",
                        },
                        "GtfsValidationExplorer": Object {
                          "accessibilityValidation": "Accessibility Explorer",
                          "table": Object {
                            "count": "Count",
                            "file": "File",
                            "issue": "Issue",
                            "priority": "Priority",
                          },
                          "timeValidation": "Time-based Validation",
                          "title": "Validation Explorer",
                          "validationIssues": "Validation Issues",
                        },
                        "GtfsValidationViewer": Object {
                          "explorer": "Validation Explorer",
                          "issues": Object {
                            "other": "Other issues",
                            "routes": "Route issues",
                            "shapes": "Shape issues",
                            "stop_times": "Stop times issues",
                            "stops": "Stop issues",
                            "trips": "Trip issues",
                          },
                          "noResults": "No validation results to show.",
                          "title": "Validation Results",
                        },
                        "LanguageSelect": Object {
                          "placeholder": "Select language...",
                        },
                        "Login": Object {
                          "title": "Iniciar sesión",
                        },
                        "NotesViewer": Object {
                          "all": "All Comments",
                          "feedSource": "Feed Source",
                          "feedVersion": "Version",
                          "new": "Post",
                          "none": "No comments.",
                          "postComment": "Post a New Comment",
                          "refresh": "Refresh",
                          "title": "Comments",
                        },
                        "OrganizationList": Object {
                          "new": "Create org",
                          "search": "Search orgs",
                        },
                        "OrganizationSettings": Object {
                          "extensions": "Extensions",
                          "logoUrl": Object {
                            "label": "Logo URL",
                            "placeholder": "http://example.com/logo_30x30.png",
                          },
                          "name": Object {
                            "label": "Name",
                            "placeholder": "Big City Transit",
                          },
                          "orgDetails": "Organization details",
                          "projects": "Projects",
                          "subDetails": "Subscription details",
                          "subscriptionBeginDate": "Subscription begins",
                          "subscriptionEndDate": "Subscription ends",
                          "usageTier": Object {
                            "high": "High",
                            "low": "Low",
                            "medium": "Medium",
                          },
                        },
                        "ProjectAccessSettings": Object {
                          "admin": "Admin",
                          "cannotFetchFeeds": "Cannot fetch feeds",
                          "custom": "Custom",
                          "feeds": "Feed Sources",
                          "noAccess": "No Access",
                          "permissions": "Permissions",
                          "title": "Project Settings for",
                        },
                        "ProjectFeedListToolbar": Object {
                          "comparison": Object {
                            "DEPLOYED": "Deployed",
                            "LATEST": "Latest",
                            "PUBLISHED": "Published",
                          },
                          "deployments": "Deployments",
                          "feeds": Object {
                            "createFirst": "Create first feed source!",
                            "new": "New Feed Source",
                            "search": "Search by name",
                            "table": Object {
                              "deployable": "Deployable?",
                              "errorCount": "Errors",
                              "lastUpdated": "Updated",
                              "name": "Name",
                              "public": "Public?",
                              "retrievalMethod": "Retrieval Method",
                              "validRange": "Valid Range",
                            },
                            "title": "Feed Sources",
                            "update": "Fetch all",
                          },
                          "filter": Object {
                            "active": "Active",
                            "all": "All",
                            "expired": "Expired",
                            "expiring": "Expiring soon",
                            "future": "Future",
                          },
                          "makePublic": "Publish public feeds",
                          "mergeFeeds": "Merge all",
                          "settings": "Settings",
                          "sort": Object {
                            "alphabetically": Object {
                              "asc": "A-Z",
                              "desc": "Z-A",
                              "title": "Alphabetically",
                            },
                            "endDate": Object {
                              "asc": "Soonest-Latest",
                              "desc": "Latest-Soonest",
                              "title": "Expiration Date",
                            },
                            "lastUpdated": Object {
                              "asc": "Stale-Recent",
                              "desc": "Recent-Stale",
                              "title": "Last Update",
                            },
                            "numErrors": Object {
                              "asc": "Least-Most",
                              "desc": "Most-Least",
                              "title": "Number of Errors",
                            },
                            "startDate": Object {
                              "asc": "Soonest-Latest",
                              "desc": "Latest-Soonest",
                              "title": "Start Date",
                            },
                          },
                          "sync": Object {
                            "mtc": "Sync from MTC",
                            "transitfeeds": "Sync from transitfeeds",
                            "transitland": "Sync from transit.land",
                          },
                        },
                        "ProjectSettings": Object {
                          "deployment": Object {
                            "buildConfig": Object {
                              "elevationBucket": Object {
                                "accessKey": "Access Key",
                                "bucketName": "S3 Bucket Name",
                                "secretKey": "Secret Key",
                              },
                              "fares": "Fares",
                              "fetchElevationUS": "Fetch Elevation",
                              "stationTransfers": "Sta. Transfers",
                              "subwayAccessTime": "Subway Access Time",
                              "title": "Build Config",
                            },
                            "osm": Object {
                              "bounds": "Custom Extract Bounds",
                              "custom": "Use Custom Extract Bounds",
                              "gtfs": "Use GTFS-Derived Extract Bounds",
                              "title": "OSM Extract",
                            },
                            "otpServers": Object {
                              "$index": Object {
                                "admin": "Admin access only?",
                                "delete": "Remove",
                                "internalUrl": "Internal URLs",
                                "name": "Name",
                                "namePlaceholder": "Production",
                                "publicUrl": "Public URL",
                                "s3Bucket": "S3 bucket name",
                              },
                              "new": "Add server",
                              "serverPlaceholder": "Server name",
                              "title": "Servers",
                            },
                            "routerConfig": Object {
                              "brandingUrlRoot": "Branding URL Root",
                              "carDropoffTime": "Car Dropoff Time",
                              "numItineraries": "# of itineraries",
                              "requestLogFile": "Request log file",
                              "stairsReluctance": "Stairs Reluctance",
                              "title": "Router Config",
                              "updaters": Object {
                                "$index": Object {
                                  "defaultAgencyId": "Default agency ID",
                                  "frequencySec": "Frequency (in seconds)",
                                  "sourceType": "Source type",
                                  "type": "Type",
                                  "url": "URL",
                                },
                                "new": "Add updater",
                                "placeholder": "Updater name",
                                "title": "Real-time updaters",
                              },
                              "walkSpeed": "Walk Speed",
                            },
                            "title": "Deployment",
                          },
                          "project": Object {
                            "cannotFetchFeeds": "Cannot fetch feeds",
                            "feeds": "Feeds",
                            "permissions": "Permissions",
                          },
                          "rename": "Rename",
                          "save": "Save",
                          "title": "Settings",
                        },
                        "ProjectSettingsForm": Object {
                          "cancel": "Cancel",
                          "confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                          "deleteProject": "Delete Project?",
                          "fields": Object {
                            "location": Object {
                              "boundingBox": "Bounding box (W,S,E,N)",
                              "defaultLanguage": "Default language",
                              "defaultLocation": "Default location (lat, lng)",
                              "defaultTimeZone": "Default time zone",
                              "title": "Location",
                            },
                            "name": "Project name",
                            "title": "General",
                            "updates": Object {
                              "autoFetchFeeds": "Auto fetch feed sources?",
                              "title": "Updates",
                            },
                          },
                          "save": "Save",
                          "title": "Settings",
                        },
                        "ProjectViewer": Object {
                          "deployments": "Deployments",
                          "feeds": Object {
                            "createFirst": "Create first feed source!",
                            "new": "New Feed Source",
                            "search": "Search by name",
                            "table": Object {
                              "deployable": "Deployable?",
                              "errorCount": "Errors",
                              "lastUpdated": "Updated",
                              "name": "Name",
                              "public": "Public?",
                              "retrievalMethod": "Retrieval Method",
                              "validRange": "Valid Range",
                            },
                            "title": "Feed Sources",
                            "update": "Fetch all",
                          },
                          "makePublic": "Publish public feeds",
                          "mergeFeeds": "Merge all",
                          "settings": "Settings",
                        },
                        "ProjectsList": Object {
                          "createFirst": "Create my first project",
                          "help": Object {
                            "content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                            "title": "What's a project?",
                          },
                          "new": "New Project",
                          "noProjects": "You currently do not have any projects.",
                          "search": "Search by project name",
                          "table": Object {
                            "name": "Project Name",
                          },
                          "title": "Projects",
                        },
                        "PublicFeedsTable": Object {
                          "country": "Country",
                          "lastUpdated": "Last Updated",
                          "link": "Link to GTFS",
                          "name": "Feed Name",
                          "region": "Region",
                          "search": "Search",
                          "stateProvince": "State or Province",
                        },
                        "PublicFeedsViewer": Object {
                          "title": "Catalogue",
                        },
                        "RegionSearch": Object {
                          "placeholder": "Search for regions or agencies",
                        },
                        "ResultTable": Object {
                          "affectedIds": "Affected ID(s)",
                          "description": "Description",
                          "line": "Line",
                          "priority": "Priority",
                          "problemType": "Problem Type",
                        },
                        "Sidebar": Object {
                          "unknown": "Desconocido",
                        },
                        "SnapshotItem": Object {
                          "active": "Active",
                          "confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "createFromScratch": "Create GTFS from Scratch",
                          "created": "created",
                          "date": "Date",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "load": "Load for Editing",
                          "loadLatest": "Load latest for editing",
                          "name": "Name",
                          "noVersions": "(No Versions)",
                          "noVersionsExist": "No versions exist for this feed source.",
                          "of": "of",
                          "publish": "Publish",
                          "restore": "Restore",
                          "snapshot": "snapshot",
                          "title": "Snapshots",
                          "version": "Version",
                        },
                        "StarButton": Object {
                          "star": "Star",
                          "unstar": "Unstar",
                        },
                        "TimetableHelpModal": Object {
                          "shortcuts": Object {
                            "modify": Object {
                              "desc": Array [
                                "Delete selected trip(s)",
                                "New trip",
                                "Clone selected trip(s)",
                                "Copy time value from adjacent cell (the cell immediately to the left)",
                                "Copy value from cell directly above",
                              ],
                              "title": "Modify trips",
                            },
                            "navigate": Object {
                              "desc": Array [
                                "Previous/next trip",
                                "Previous/next column",
                                "Select trip",
                                "Select all trips",
                                "Deselect all trips",
                              ],
                              "title": "Navigating and selecting trips",
                            },
                            "offset": Object {
                              "desc": Array [
                                "Offset selected trips' stop times by adding offset time",
                                "Offset selected trips' stop times by subtracting offset time",
                                "Offset only active cell's time by adding offset time",
                                "Offset only active cell's time by subtracting offset time",
                                "Decrease offset time by 1 minute",
                                "Decrease offset time by 10 minutes",
                                "Increase offset time by 1 minute",
                                "Increase offset time by 10 minutes",
                              ],
                              "title": "Offsetting times",
                            },
                          },
                          "title": "Timetable editor keyboard shortcuts",
                        },
                        "TimezoneSelect": Object {
                          "placeholder": "Select timezone...",
                        },
                        "UserAccount": Object {
                          "account": Object {
                            "title": "Account",
                          },
                          "billing": Object {
                            "title": "Billing",
                          },
                          "notifications": Object {
                            "methods": "Notification methods",
                            "subscriptions": "Your subscriptions",
                            "title": "Notifications",
                            "unsubscribeAll": "Unsubscribe from all",
                          },
                          "organizationSettings": "Organization settings",
                          "organizations": Object {
                            "title": "Organizations",
                          },
                          "personalSettings": "Personal settings",
                          "profile": Object {
                            "profileInformation": "Profile information",
                            "title": "Profile",
                          },
                          "title": "My settings",
                        },
                        "UserAdmin": Object {
                          "noAccess": "You do not have sufficient user privileges to access this area.",
                          "title": "Administration",
                        },
                        "UserHomePage": Object {
                          "createFirst": "Create my first project",
                          "help": Object {
                            "content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                            "title": "What's a project?",
                          },
                          "new": "New Project",
                          "noProjects": "You currently do not have any projects.",
                          "table": Object {
                            "name": "Project Name",
                          },
                          "title": "Projects",
                        },
                        "UserList": Object {
                          "filterByOrg": "Filter by org.",
                          "of": "of",
                          "search": "Search by username",
                          "showing": "Showing Users",
                          "title": "User Management",
                        },
                        "UserRow": Object {
                          "appAdmin": "App admin",
                          "cancel": "Cancel",
                          "delete": "Delete",
                          "deleteConfirm": "Are you sure you want to permanently delete this user?",
                          "edit": "Edit",
                          "orgAdmin": "Org admin",
                          "save": "Save",
                        },
                        "UserSettings": Object {
                          "admin": Object {
                            "description": "Application administrators have full access to all projects.",
                            "title": "Application Admininistrator",
                          },
                          "application": "Application Settings",
                          "cancel": "Cancel",
                          "delete": "Delete",
                          "edit": "Edit",
                          "org": Object {
                            "admin": "Organization administrator",
                            "billing": "Billing admin",
                            "description": "Organization administrators have full access to projects within the organization.",
                          },
                          "project": Object {
                            "admin": "Admin",
                            "custom": "Custom",
                            "noAccess": "No Access",
                          },
                          "save": "Save",
                        },
                        "VersionButtonToolbar": Object {
                          "confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "load": "Load",
                          "noVersionsExist": "No versions exist for this feed source.",
                          "status": "Status",
                          "timestamp": "File Timestamp",
                          "version": "version",
                        },
                        "WatchButton": Object {
                          "unwatch": "Unwatch",
                          "watch": "Watch",
                        },
                      },
                      "components.Breadcrumbs.deployments": "Deployments",
                      "components.Breadcrumbs.projects": "Projects",
                      "components.Breadcrumbs.root": "Explore",
                      "components.CollapsiblePanel.deployment.buildConfig.elevationBucket.accessKey": "Access Key",
                      "components.CollapsiblePanel.deployment.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                      "components.CollapsiblePanel.deployment.buildConfig.elevationBucket.secretKey": "Secret Key",
                      "components.CollapsiblePanel.deployment.buildConfig.fares": "Fares",
                      "components.CollapsiblePanel.deployment.buildConfig.fetchElevationUS": "Fetch Elevation",
                      "components.CollapsiblePanel.deployment.buildConfig.stationTransfers": "Sta. Transfers",
                      "components.CollapsiblePanel.deployment.buildConfig.subwayAccessTime": "Subway Access Time",
                      "components.CollapsiblePanel.deployment.buildConfig.title": "Build Config",
                      "components.CollapsiblePanel.deployment.osm.bounds": "Custom Extract Bounds",
                      "components.CollapsiblePanel.deployment.osm.custom": "Use Custom Extract Bounds",
                      "components.CollapsiblePanel.deployment.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                      "components.CollapsiblePanel.deployment.osm.title": "OSM Extract",
                      "components.CollapsiblePanel.deployment.otpServers.$index.admin": "Admin access only?",
                      "components.CollapsiblePanel.deployment.otpServers.$index.delete": "Remove",
                      "components.CollapsiblePanel.deployment.otpServers.$index.internalUrl": "Internal URLs",
                      "components.CollapsiblePanel.deployment.otpServers.$index.name": "Name",
                      "components.CollapsiblePanel.deployment.otpServers.$index.namePlaceholder": "Production",
                      "components.CollapsiblePanel.deployment.otpServers.$index.publicUrl": "Public URL",
                      "components.CollapsiblePanel.deployment.otpServers.$index.s3Bucket": "S3 bucket name",
                      "components.CollapsiblePanel.deployment.otpServers.new": "Add server",
                      "components.CollapsiblePanel.deployment.otpServers.serverPlaceholder": "Server name",
                      "components.CollapsiblePanel.deployment.otpServers.title": "Servers",
                      "components.CollapsiblePanel.deployment.routerConfig.brandingUrlRoot": "Branding URL Root",
                      "components.CollapsiblePanel.deployment.routerConfig.carDropoffTime": "Car Dropoff Time",
                      "components.CollapsiblePanel.deployment.routerConfig.numItineraries": "# of itineraries",
                      "components.CollapsiblePanel.deployment.routerConfig.requestLogFile": "Request log file",
                      "components.CollapsiblePanel.deployment.routerConfig.stairsReluctance": "Stairs Reluctance",
                      "components.CollapsiblePanel.deployment.routerConfig.title": "Router Config",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.sourceType": "Source type",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.type": "Type",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.url": "URL",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.new": "Add updater",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.placeholder": "Updater name",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.title": "Real-time updaters",
                      "components.CollapsiblePanel.deployment.routerConfig.walkSpeed": "Walk Speed",
                      "components.CollapsiblePanel.deployment.title": "Deployment",
                      "components.CreateUser.new": "Create User",
                      "components.DatatoolsNavbar.account": "My Account",
                      "components.DatatoolsNavbar.alerts": "Alertas",
                      "components.DatatoolsNavbar.editor": "Editor",
                      "components.DatatoolsNavbar.guide": "Manual del usuario",
                      "components.DatatoolsNavbar.login": "Iniciar sesión",
                      "components.DatatoolsNavbar.logout": "Cerrar sesión",
                      "components.DatatoolsNavbar.manager": "Administrador",
                      "components.DatatoolsNavbar.resetPassword": "Reset Password",
                      "components.DatatoolsNavbar.signConfig": "eTID Config",
                      "components.DatatoolsNavbar.users": "Usuarios",
                      "components.DeploymentConfirmModal.alert.alreadyDeployed": "is already deployed to this server at the same router. (Deploying would evict the current graph.)",
                      "components.DeploymentConfirmModal.alert.boundsTooLarge": "Bounds are much too large to successfully deploy to OpenTripPlanner. Deployment is disabled.",
                      "components.DeploymentConfirmModal.alert.expiredFeeds": "The following feeds have expired (all scheduled trips are for past dates)",
                      "components.DeploymentConfirmModal.alert.missingBounds": "There are no bounds defined for the set of feeds. Deployment is disabled.",
                      "components.DeploymentConfirmModal.alert.missingFeeds": "There are no feeds defined for this deployment. Deployment is disabled.",
                      "components.DeploymentConfirmModal.alert.success": "Deployment successfully deployed.",
                      "components.DeploymentConfirmModal.cancel": "Cancel",
                      "components.DeploymentConfirmModal.close": "Close",
                      "components.DeploymentConfirmModal.danger": "Danger!",
                      "components.DeploymentConfirmModal.deploy": "Deploy",
                      "components.DeploymentConfirmModal.invalidBounds": "Bounds are invalid!",
                      "components.DeploymentConfirmModal.success": "Success!",
                      "components.DeploymentConfirmModal.to": "to",
                      "components.DeploymentConfirmModal.warning": "Warning!",
                      "components.DeploymentSettings.buildConfig.elevationBucket.accessKey": "Access Key",
                      "components.DeploymentSettings.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                      "components.DeploymentSettings.buildConfig.elevationBucket.secretKey": "Secret Key",
                      "components.DeploymentSettings.buildConfig.fares": "Fares",
                      "components.DeploymentSettings.buildConfig.fetchElevationUS": "Fetch Elevation",
                      "components.DeploymentSettings.buildConfig.save": "Save",
                      "components.DeploymentSettings.buildConfig.stationTransfers": "Sta. Transfers",
                      "components.DeploymentSettings.buildConfig.subwayAccessTime": "Subway Access Time",
                      "components.DeploymentSettings.buildConfig.title": "Build Config",
                      "components.DeploymentSettings.osm.bounds": "Custom Extract Bounds",
                      "components.DeploymentSettings.osm.custom": "Use Custom Extract Bounds",
                      "components.DeploymentSettings.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                      "components.DeploymentSettings.osm.title": "OSM Extract",
                      "components.DeploymentSettings.otpServers.$index.admin": "Admin access only?",
                      "components.DeploymentSettings.otpServers.$index.delete": "Remove",
                      "components.DeploymentSettings.otpServers.$index.internalUrl": "Internal URLs",
                      "components.DeploymentSettings.otpServers.$index.name": "Name",
                      "components.DeploymentSettings.otpServers.$index.namePlaceholder": "Production",
                      "components.DeploymentSettings.otpServers.$index.publicUrl": "Public URL",
                      "components.DeploymentSettings.otpServers.$index.s3Bucket": "S3 bucket name",
                      "components.DeploymentSettings.otpServers.new": "Add server",
                      "components.DeploymentSettings.otpServers.serverPlaceholder": "Server name",
                      "components.DeploymentSettings.otpServers.title": "Servers",
                      "components.DeploymentSettings.routerConfig.brandingUrlRoot": "Branding URL Root",
                      "components.DeploymentSettings.routerConfig.carDropoffTime": "Car Dropoff Time",
                      "components.DeploymentSettings.routerConfig.numItineraries": "# of itineraries",
                      "components.DeploymentSettings.routerConfig.requestLogFile": "Request log file",
                      "components.DeploymentSettings.routerConfig.stairsReluctance": "Stairs Reluctance",
                      "components.DeploymentSettings.routerConfig.title": "Router Config",
                      "components.DeploymentSettings.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                      "components.DeploymentSettings.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                      "components.DeploymentSettings.routerConfig.updaters.$index.sourceType": "Source type",
                      "components.DeploymentSettings.routerConfig.updaters.$index.type": "Type",
                      "components.DeploymentSettings.routerConfig.updaters.$index.url": "URL",
                      "components.DeploymentSettings.routerConfig.updaters.new": "Add updater",
                      "components.DeploymentSettings.routerConfig.updaters.placeholder": "Updater name",
                      "components.DeploymentSettings.routerConfig.updaters.title": "Real-time updaters",
                      "components.DeploymentSettings.routerConfig.walkSpeed": "Walk Speed",
                      "components.DeploymentSettings.save": "Save",
                      "components.DeploymentSettings.title": "Deployment",
                      "components.DeploymentVersionsTable.dateRetrieved": "Date Retrieved",
                      "components.DeploymentVersionsTable.errorCount": "Error Count",
                      "components.DeploymentVersionsTable.expires": "Expires",
                      "components.DeploymentVersionsTable.loadStatus": "Loaded Successfully",
                      "components.DeploymentVersionsTable.name": "Name",
                      "components.DeploymentVersionsTable.routeCount": "Route Count",
                      "components.DeploymentVersionsTable.stopTimesCount": "Stop time count",
                      "components.DeploymentVersionsTable.tripCount": "Trip Count",
                      "components.DeploymentVersionsTable.validFrom": "Valid from",
                      "components.DeploymentVersionsTable.version": "Version",
                      "components.DeploymentViewer.addFeedSource": "Add Feed Source",
                      "components.DeploymentViewer.allFeedsAdded": "All feeds added",
                      "components.DeploymentViewer.deploy": "Deploy",
                      "components.DeploymentViewer.download": "Download",
                      "components.DeploymentViewer.noServers": "No servers defined",
                      "components.DeploymentViewer.search": "Search by name",
                      "components.DeploymentViewer.table.dateRetrieved": "Date Retrieved",
                      "components.DeploymentViewer.table.errorCount": "Error Count",
                      "components.DeploymentViewer.table.expires": "Expires",
                      "components.DeploymentViewer.table.loadStatus": "Loaded Successfully",
                      "components.DeploymentViewer.table.name": "Name",
                      "components.DeploymentViewer.table.routeCount": "Route Count",
                      "components.DeploymentViewer.table.stopTimesCount": "Stop time count",
                      "components.DeploymentViewer.table.tripCount": "Trip Count",
                      "components.DeploymentViewer.table.validFrom": "Valid from",
                      "components.DeploymentViewer.table.version": "Version",
                      "components.DeploymentViewer.to": "to",
                      "components.DeploymentViewer.versions": "Feed Versions",
                      "components.DeploymentsList.delete": "Remove deployment",
                      "components.DeploymentsList.new": "New Deployment",
                      "components.DeploymentsList.search": "Search for deployments",
                      "components.DeploymentsList.table.creationDate": "Created",
                      "components.DeploymentsList.table.deployedTo": "Deployed to",
                      "components.DeploymentsList.table.feedCount": "# of feeds",
                      "components.DeploymentsList.table.lastDeployed": "Last deployed",
                      "components.DeploymentsList.table.name": "Name",
                      "components.DeploymentsList.table.testDeployment": "Test?",
                      "components.DeploymentsList.title": "Deployments",
                      "components.DeploymentsPanel.delete": "Remove deployment",
                      "components.DeploymentsPanel.new": "New Deployment",
                      "components.DeploymentsPanel.search": "Search for deployments",
                      "components.DeploymentsPanel.table.creationDate": "Created",
                      "components.DeploymentsPanel.table.deployedTo": "Deployed to",
                      "components.DeploymentsPanel.table.feedCount": "# of feeds",
                      "components.DeploymentsPanel.table.lastDeployed": "Last deployed",
                      "components.DeploymentsPanel.table.name": "Name",
                      "components.DeploymentsPanel.table.testDeployment": "Test?",
                      "components.DeploymentsPanel.title": "Deployments",
                      "components.EditorFeedSourcePanel.active": "Active",
                      "components.EditorFeedSourcePanel.confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                      "components.EditorFeedSourcePanel.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.EditorFeedSourcePanel.createFromScratch": "Create GTFS from Scratch",
                      "components.EditorFeedSourcePanel.created": "created",
                      "components.EditorFeedSourcePanel.date": "Date",
                      "components.EditorFeedSourcePanel.delete": "Delete",
                      "components.EditorFeedSourcePanel.download": "Download",
                      "components.EditorFeedSourcePanel.feed": "Feed",
                      "components.EditorFeedSourcePanel.help.body.0": "Snapshots are save points you can always revert back to when editing a GTFS feed.",
                      "components.EditorFeedSourcePanel.help.body.1": "A snapshot might represent a work-in-progress, future planning scenario or even different service patterns (e.g., summer schedule markup).",
                      "components.EditorFeedSourcePanel.help.title": "What are snapshots?",
                      "components.EditorFeedSourcePanel.load": "Load for Editing",
                      "components.EditorFeedSourcePanel.loadLatest": "Load latest for editing",
                      "components.EditorFeedSourcePanel.name": "Name",
                      "components.EditorFeedSourcePanel.noSnapshotsExist": "No snapshots currently exist for this feed. Snapshots can be created within the Editor. Click \\"Edit Feed\\" to enter editing mode.",
                      "components.EditorFeedSourcePanel.noVersions": "(No Versions)",
                      "components.EditorFeedSourcePanel.noVersionsExist": "No versions exist for this feed source.",
                      "components.EditorFeedSourcePanel.of": "of",
                      "components.EditorFeedSourcePanel.publish": "Publish",
                      "components.EditorFeedSourcePanel.restore": "Restore",
                      "components.EditorFeedSourcePanel.snapshot": "snapshot",
                      "components.EditorFeedSourcePanel.title": "Snapshots",
                      "components.EditorFeedSourcePanel.version": "Version",
                      "components.FeedInfoPanel.uploadShapefile.body": "Select a zipped shapefile to display on map. Note: this is only for use as a visual aid.",
                      "components.FeedInfoPanel.uploadShapefile.error": "Uploaded file must be a valid zip file (.zip).",
                      "components.FeedInfoPanel.uploadShapefile.title": "Upload route shapefile",
                      "components.FeedSourceAttributes.lastUpdated": "Updated",
                      "components.FeedSourcePanel.search": "Search feeds",
                      "components.FeedSourceTable.comparisonColumn.DEPLOYED": "Deployed Version",
                      "components.FeedSourceTable.comparisonColumn.PUBLISHED": "Published Version",
                      "components.FeedSourceTable.createFirst": "Create first feed source!",
                      "components.FeedSourceTableRow.status.active": "Active",
                      "components.FeedSourceTableRow.status.all": "All",
                      "components.FeedSourceTableRow.status.expired": "Expired",
                      "components.FeedSourceTableRow.status.expiring-within-20-days": "Expiring within 20 days",
                      "components.FeedSourceTableRow.status.expiring-within-5-days": "Expiring within 5 days",
                      "components.FeedSourceTableRow.status.feedNotInDeployment": "Feed not in deployment",
                      "components.FeedSourceTableRow.status.feedNotPublished": "Feed not published",
                      "components.FeedSourceTableRow.status.future": "Future",
                      "components.FeedSourceTableRow.status.no-version": "No version",
                      "components.FeedSourceTableRow.status.same-as-deployed": "Same as Deployed",
                      "components.FeedSourceTableRow.status.same-as-published": "Same as Published",
                      "components.FeedSourceViewer.deploy": "Deploy",
                      "components.FeedSourceViewer.edit": "Edit GTFS",
                      "components.FeedSourceViewer.gtfs": "GTFS",
                      "components.FeedSourceViewer.notesTitle": "Notes",
                      "components.FeedSourceViewer.private": "Private view",
                      "components.FeedSourceViewer.properties.deployable": "Deployable?",
                      "components.FeedSourceViewer.properties.name": "Name",
                      "components.FeedSourceViewer.properties.noneSelected": "(None Selected)",
                      "components.FeedSourceViewer.properties.property": "Property",
                      "components.FeedSourceViewer.properties.public": "Public?",
                      "components.FeedSourceViewer.properties.retrievalMethod.fetchedAutomatically": "Fetched Automatically",
                      "components.FeedSourceViewer.properties.retrievalMethod.manuallyUploaded": "Manually Uploaded",
                      "components.FeedSourceViewer.properties.retrievalMethod.producedInHouse": "Produced In-house",
                      "components.FeedSourceViewer.properties.retrievalMethod.title": "Retrieval Method",
                      "components.FeedSourceViewer.properties.snapshot": "Editor Snapshot",
                      "components.FeedSourceViewer.properties.title": "Settings",
                      "components.FeedSourceViewer.properties.value": "Value",
                      "components.FeedSourceViewer.snapshotsTitle": "Snapshots",
                      "components.FeedSourceViewer.update": "Update",
                      "components.FeedSourceViewer.upload": "Upload",
                      "components.FeedSourceViewer.versions": "Versions",
                      "components.FeedSourceViewer.viewPublic": "View public page",
                      "components.FeedVersionNavigator.confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                      "components.FeedVersionNavigator.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.FeedVersionNavigator.delete": "Delete",
                      "components.FeedVersionNavigator.download": "Download",
                      "components.FeedVersionNavigator.feed": "Feed",
                      "components.FeedVersionNavigator.load": "Load for Editing",
                      "components.FeedVersionNavigator.next": "Next",
                      "components.FeedVersionNavigator.of": "of",
                      "components.FeedVersionNavigator.previous": "Previous",
                      "components.FeedVersionNavigator.version": "Version",
                      "components.FeedVersionTabs.agencyCount": "Agency Count",
                      "components.FeedVersionTabs.routeCount": "Route Count",
                      "components.FeedVersionTabs.stopTimesCount": "Stop time Count",
                      "components.FeedVersionTabs.tripCount": "Trip Count",
                      "components.FeedVersionTabs.validDates": "Valid Dates",
                      "components.FeedVersionViewer.confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                      "components.FeedVersionViewer.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.FeedVersionViewer.delete": "Delete",
                      "components.FeedVersionViewer.download": "Download",
                      "components.FeedVersionViewer.feed": "Feed",
                      "components.FeedVersionViewer.load": "Load",
                      "components.FeedVersionViewer.noVersionsExist": "No versions exist for this feed source.",
                      "components.FeedVersionViewer.status": "Status",
                      "components.FeedVersionViewer.timestamp": "File Timestamp",
                      "components.FeedVersionViewer.version": "version",
                      "components.GeneralSettings.confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                      "components.GeneralSettings.deleteProject": "Delete Project?",
                      "components.GeneralSettings.deployment.buildConfig.elevationBucket.accessKey": "Access Key",
                      "components.GeneralSettings.deployment.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                      "components.GeneralSettings.deployment.buildConfig.elevationBucket.secretKey": "Secret Key",
                      "components.GeneralSettings.deployment.buildConfig.fares": "Fares",
                      "components.GeneralSettings.deployment.buildConfig.fetchElevationUS": "Fetch Elevation",
                      "components.GeneralSettings.deployment.buildConfig.stationTransfers": "Sta. Transfers",
                      "components.GeneralSettings.deployment.buildConfig.subwayAccessTime": "Subway Access Time",
                      "components.GeneralSettings.deployment.buildConfig.title": "Build Config",
                      "components.GeneralSettings.deployment.osm.bounds": "Custom Extract Bounds",
                      "components.GeneralSettings.deployment.osm.custom": "Use Custom Extract Bounds",
                      "components.GeneralSettings.deployment.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                      "components.GeneralSettings.deployment.osm.title": "OSM Extract",
                      "components.GeneralSettings.deployment.otpServers.$index.admin": "Admin access only?",
                      "components.GeneralSettings.deployment.otpServers.$index.delete": "Remove",
                      "components.GeneralSettings.deployment.otpServers.$index.internalUrl": "Internal URLs",
                      "components.GeneralSettings.deployment.otpServers.$index.name": "Name",
                      "components.GeneralSettings.deployment.otpServers.$index.namePlaceholder": "Production",
                      "components.GeneralSettings.deployment.otpServers.$index.publicUrl": "Public URL",
                      "components.GeneralSettings.deployment.otpServers.$index.s3Bucket": "S3 bucket name",
                      "components.GeneralSettings.deployment.otpServers.new": "Add server",
                      "components.GeneralSettings.deployment.otpServers.serverPlaceholder": "Server name",
                      "components.GeneralSettings.deployment.otpServers.title": "Servers",
                      "components.GeneralSettings.deployment.routerConfig.brandingUrlRoot": "Branding URL Root",
                      "components.GeneralSettings.deployment.routerConfig.carDropoffTime": "Car Dropoff Time",
                      "components.GeneralSettings.deployment.routerConfig.numItineraries": "# of itineraries",
                      "components.GeneralSettings.deployment.routerConfig.requestLogFile": "Request log file",
                      "components.GeneralSettings.deployment.routerConfig.stairsReluctance": "Stairs Reluctance",
                      "components.GeneralSettings.deployment.routerConfig.title": "Router Config",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.sourceType": "Source type",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.type": "Type",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.url": "URL",
                      "components.GeneralSettings.deployment.routerConfig.updaters.new": "Add updater",
                      "components.GeneralSettings.deployment.routerConfig.updaters.placeholder": "Updater name",
                      "components.GeneralSettings.deployment.routerConfig.updaters.title": "Real-time updaters",
                      "components.GeneralSettings.deployment.routerConfig.walkSpeed": "Walk Speed",
                      "components.GeneralSettings.deployment.title": "Deployment",
                      "components.GeneralSettings.general.location.boundingBox": "Bounding box (W,S,E,N)",
                      "components.GeneralSettings.general.location.defaultLanguage": "Default language",
                      "components.GeneralSettings.general.location.defaultLocation": "Default location (lat, lng)",
                      "components.GeneralSettings.general.location.defaultTimeZone": "Default time zone",
                      "components.GeneralSettings.general.location.title": "Location",
                      "components.GeneralSettings.general.name": "Project name",
                      "components.GeneralSettings.general.title": "General",
                      "components.GeneralSettings.general.updates.autoFetchFeeds": "Auto fetch feed sources?",
                      "components.GeneralSettings.general.updates.title": "Updates",
                      "components.GeneralSettings.rename": "Rename",
                      "components.GeneralSettings.save": "Save",
                      "components.GeneralSettings.title": "Settings",
                      "components.GtfsValidationExplorer.accessibilityValidation": "Accessibility Explorer",
                      "components.GtfsValidationExplorer.table.count": "Count",
                      "components.GtfsValidationExplorer.table.file": "File",
                      "components.GtfsValidationExplorer.table.issue": "Issue",
                      "components.GtfsValidationExplorer.table.priority": "Priority",
                      "components.GtfsValidationExplorer.timeValidation": "Time-based Validation",
                      "components.GtfsValidationExplorer.title": "Validation Explorer",
                      "components.GtfsValidationExplorer.validationIssues": "Validation Issues",
                      "components.GtfsValidationViewer.explorer": "Validation Explorer",
                      "components.GtfsValidationViewer.issues.other": "Other issues",
                      "components.GtfsValidationViewer.issues.routes": "Route issues",
                      "components.GtfsValidationViewer.issues.shapes": "Shape issues",
                      "components.GtfsValidationViewer.issues.stop_times": "Stop times issues",
                      "components.GtfsValidationViewer.issues.stops": "Stop issues",
                      "components.GtfsValidationViewer.issues.trips": "Trip issues",
                      "components.GtfsValidationViewer.noResults": "No validation results to show.",
                      "components.GtfsValidationViewer.title": "Validation Results",
                      "components.LanguageSelect.placeholder": "Select language...",
                      "components.Login.title": "Iniciar sesión",
                      "components.NotesViewer.all": "All Comments",
                      "components.NotesViewer.feedSource": "Feed Source",
                      "components.NotesViewer.feedVersion": "Version",
                      "components.NotesViewer.new": "Post",
                      "components.NotesViewer.none": "No comments.",
                      "components.NotesViewer.postComment": "Post a New Comment",
                      "components.NotesViewer.refresh": "Refresh",
                      "components.NotesViewer.title": "Comments",
                      "components.OrganizationList.new": "Create org",
                      "components.OrganizationList.search": "Search orgs",
                      "components.OrganizationSettings.extensions": "Extensions",
                      "components.OrganizationSettings.logoUrl.label": "Logo URL",
                      "components.OrganizationSettings.logoUrl.placeholder": "http://example.com/logo_30x30.png",
                      "components.OrganizationSettings.name.label": "Name",
                      "components.OrganizationSettings.name.placeholder": "Big City Transit",
                      "components.OrganizationSettings.orgDetails": "Organization details",
                      "components.OrganizationSettings.projects": "Projects",
                      "components.OrganizationSettings.subDetails": "Subscription details",
                      "components.OrganizationSettings.subscriptionBeginDate": "Subscription begins",
                      "components.OrganizationSettings.subscriptionEndDate": "Subscription ends",
                      "components.OrganizationSettings.usageTier.high": "High",
                      "components.OrganizationSettings.usageTier.low": "Low",
                      "components.OrganizationSettings.usageTier.medium": "Medium",
                      "components.ProjectAccessSettings.admin": "Admin",
                      "components.ProjectAccessSettings.cannotFetchFeeds": "Cannot fetch feeds",
                      "components.ProjectAccessSettings.custom": "Custom",
                      "components.ProjectAccessSettings.feeds": "Feed Sources",
                      "components.ProjectAccessSettings.noAccess": "No Access",
                      "components.ProjectAccessSettings.permissions": "Permissions",
                      "components.ProjectAccessSettings.title": "Project Settings for",
                      "components.ProjectFeedListToolbar.comparison.DEPLOYED": "Deployed",
                      "components.ProjectFeedListToolbar.comparison.LATEST": "Latest",
                      "components.ProjectFeedListToolbar.comparison.PUBLISHED": "Published",
                      "components.ProjectFeedListToolbar.deployments": "Deployments",
                      "components.ProjectFeedListToolbar.feeds.createFirst": "Create first feed source!",
                      "components.ProjectFeedListToolbar.feeds.new": "New Feed Source",
                      "components.ProjectFeedListToolbar.feeds.search": "Search by name",
                      "components.ProjectFeedListToolbar.feeds.table.deployable": "Deployable?",
                      "components.ProjectFeedListToolbar.feeds.table.errorCount": "Errors",
                      "components.ProjectFeedListToolbar.feeds.table.lastUpdated": "Updated",
                      "components.ProjectFeedListToolbar.feeds.table.name": "Name",
                      "components.ProjectFeedListToolbar.feeds.table.public": "Public?",
                      "components.ProjectFeedListToolbar.feeds.table.retrievalMethod": "Retrieval Method",
                      "components.ProjectFeedListToolbar.feeds.table.validRange": "Valid Range",
                      "components.ProjectFeedListToolbar.feeds.title": "Feed Sources",
                      "components.ProjectFeedListToolbar.feeds.update": "Fetch all",
                      "components.ProjectFeedListToolbar.filter.active": "Active",
                      "components.ProjectFeedListToolbar.filter.all": "All",
                      "components.ProjectFeedListToolbar.filter.expired": "Expired",
                      "components.ProjectFeedListToolbar.filter.expiring": "Expiring soon",
                      "components.ProjectFeedListToolbar.filter.future": "Future",
                      "components.ProjectFeedListToolbar.makePublic": "Publish public feeds",
                      "components.ProjectFeedListToolbar.mergeFeeds": "Merge all",
                      "components.ProjectFeedListToolbar.settings": "Settings",
                      "components.ProjectFeedListToolbar.sort.alphabetically.asc": "A-Z",
                      "components.ProjectFeedListToolbar.sort.alphabetically.desc": "Z-A",
                      "components.ProjectFeedListToolbar.sort.alphabetically.title": "Alphabetically",
                      "components.ProjectFeedListToolbar.sort.endDate.asc": "Soonest-Latest",
                      "components.ProjectFeedListToolbar.sort.endDate.desc": "Latest-Soonest",
                      "components.ProjectFeedListToolbar.sort.endDate.title": "Expiration Date",
                      "components.ProjectFeedListToolbar.sort.lastUpdated.asc": "Stale-Recent",
                      "components.ProjectFeedListToolbar.sort.lastUpdated.desc": "Recent-Stale",
                      "components.ProjectFeedListToolbar.sort.lastUpdated.title": "Last Update",
                      "components.ProjectFeedListToolbar.sort.numErrors.asc": "Least-Most",
                      "components.ProjectFeedListToolbar.sort.numErrors.desc": "Most-Least",
                      "components.ProjectFeedListToolbar.sort.numErrors.title": "Number of Errors",
                      "components.ProjectFeedListToolbar.sort.startDate.asc": "Soonest-Latest",
                      "components.ProjectFeedListToolbar.sort.startDate.desc": "Latest-Soonest",
                      "components.ProjectFeedListToolbar.sort.startDate.title": "Start Date",
                      "components.ProjectFeedListToolbar.sync.mtc": "Sync from MTC",
                      "components.ProjectFeedListToolbar.sync.transitfeeds": "Sync from transitfeeds",
                      "components.ProjectFeedListToolbar.sync.transitland": "Sync from transit.land",
                      "components.ProjectSettings.deployment.buildConfig.elevationBucket.accessKey": "Access Key",
                      "components.ProjectSettings.deployment.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                      "components.ProjectSettings.deployment.buildConfig.elevationBucket.secretKey": "Secret Key",
                      "components.ProjectSettings.deployment.buildConfig.fares": "Fares",
                      "components.ProjectSettings.deployment.buildConfig.fetchElevationUS": "Fetch Elevation",
                      "components.ProjectSettings.deployment.buildConfig.stationTransfers": "Sta. Transfers",
                      "components.ProjectSettings.deployment.buildConfig.subwayAccessTime": "Subway Access Time",
                      "components.ProjectSettings.deployment.buildConfig.title": "Build Config",
                      "components.ProjectSettings.deployment.osm.bounds": "Custom Extract Bounds",
                      "components.ProjectSettings.deployment.osm.custom": "Use Custom Extract Bounds",
                      "components.ProjectSettings.deployment.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                      "components.ProjectSettings.deployment.osm.title": "OSM Extract",
                      "components.ProjectSettings.deployment.otpServers.$index.admin": "Admin access only?",
                      "components.ProjectSettings.deployment.otpServers.$index.delete": "Remove",
                      "components.ProjectSettings.deployment.otpServers.$index.internalUrl": "Internal URLs",
                      "components.ProjectSettings.deployment.otpServers.$index.name": "Name",
                      "components.ProjectSettings.deployment.otpServers.$index.namePlaceholder": "Production",
                      "components.ProjectSettings.deployment.otpServers.$index.publicUrl": "Public URL",
                      "components.ProjectSettings.deployment.otpServers.$index.s3Bucket": "S3 bucket name",
                      "components.ProjectSettings.deployment.otpServers.new": "Add server",
                      "components.ProjectSettings.deployment.otpServers.serverPlaceholder": "Server name",
                      "components.ProjectSettings.deployment.otpServers.title": "Servers",
                      "components.ProjectSettings.deployment.routerConfig.brandingUrlRoot": "Branding URL Root",
                      "components.ProjectSettings.deployment.routerConfig.carDropoffTime": "Car Dropoff Time",
                      "components.ProjectSettings.deployment.routerConfig.numItineraries": "# of itineraries",
                      "components.ProjectSettings.deployment.routerConfig.requestLogFile": "Request log file",
                      "components.ProjectSettings.deployment.routerConfig.stairsReluctance": "Stairs Reluctance",
                      "components.ProjectSettings.deployment.routerConfig.title": "Router Config",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.sourceType": "Source type",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.type": "Type",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.url": "URL",
                      "components.ProjectSettings.deployment.routerConfig.updaters.new": "Add updater",
                      "components.ProjectSettings.deployment.routerConfig.updaters.placeholder": "Updater name",
                      "components.ProjectSettings.deployment.routerConfig.updaters.title": "Real-time updaters",
                      "components.ProjectSettings.deployment.routerConfig.walkSpeed": "Walk Speed",
                      "components.ProjectSettings.deployment.title": "Deployment",
                      "components.ProjectSettings.project.cannotFetchFeeds": "Cannot fetch feeds",
                      "components.ProjectSettings.project.feeds": "Feeds",
                      "components.ProjectSettings.project.permissions": "Permissions",
                      "components.ProjectSettings.rename": "Rename",
                      "components.ProjectSettings.save": "Save",
                      "components.ProjectSettings.title": "Settings",
                      "components.ProjectSettingsForm.cancel": "Cancel",
                      "components.ProjectSettingsForm.confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                      "components.ProjectSettingsForm.deleteProject": "Delete Project?",
                      "components.ProjectSettingsForm.fields.location.boundingBox": "Bounding box (W,S,E,N)",
                      "components.ProjectSettingsForm.fields.location.defaultLanguage": "Default language",
                      "components.ProjectSettingsForm.fields.location.defaultLocation": "Default location (lat, lng)",
                      "components.ProjectSettingsForm.fields.location.defaultTimeZone": "Default time zone",
                      "components.ProjectSettingsForm.fields.location.title": "Location",
                      "components.ProjectSettingsForm.fields.name": "Project name",
                      "components.ProjectSettingsForm.fields.title": "General",
                      "components.ProjectSettingsForm.fields.updates.autoFetchFeeds": "Auto fetch feed sources?",
                      "components.ProjectSettingsForm.fields.updates.title": "Updates",
                      "components.ProjectSettingsForm.save": "Save",
                      "components.ProjectSettingsForm.title": "Settings",
                      "components.ProjectViewer.deployments": "Deployments",
                      "components.ProjectViewer.feeds.createFirst": "Create first feed source!",
                      "components.ProjectViewer.feeds.new": "New Feed Source",
                      "components.ProjectViewer.feeds.search": "Search by name",
                      "components.ProjectViewer.feeds.table.deployable": "Deployable?",
                      "components.ProjectViewer.feeds.table.errorCount": "Errors",
                      "components.ProjectViewer.feeds.table.lastUpdated": "Updated",
                      "components.ProjectViewer.feeds.table.name": "Name",
                      "components.ProjectViewer.feeds.table.public": "Public?",
                      "components.ProjectViewer.feeds.table.retrievalMethod": "Retrieval Method",
                      "components.ProjectViewer.feeds.table.validRange": "Valid Range",
                      "components.ProjectViewer.feeds.title": "Feed Sources",
                      "components.ProjectViewer.feeds.update": "Fetch all",
                      "components.ProjectViewer.makePublic": "Publish public feeds",
                      "components.ProjectViewer.mergeFeeds": "Merge all",
                      "components.ProjectViewer.settings": "Settings",
                      "components.ProjectsList.createFirst": "Create my first project",
                      "components.ProjectsList.help.content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                      "components.ProjectsList.help.title": "What's a project?",
                      "components.ProjectsList.new": "New Project",
                      "components.ProjectsList.noProjects": "You currently do not have any projects.",
                      "components.ProjectsList.search": "Search by project name",
                      "components.ProjectsList.table.name": "Project Name",
                      "components.ProjectsList.title": "Projects",
                      "components.PublicFeedsTable.country": "Country",
                      "components.PublicFeedsTable.lastUpdated": "Last Updated",
                      "components.PublicFeedsTable.link": "Link to GTFS",
                      "components.PublicFeedsTable.name": "Feed Name",
                      "components.PublicFeedsTable.region": "Region",
                      "components.PublicFeedsTable.search": "Search",
                      "components.PublicFeedsTable.stateProvince": "State or Province",
                      "components.PublicFeedsViewer.title": "Catalogue",
                      "components.RegionSearch.placeholder": "Search for regions or agencies",
                      "components.ResultTable.affectedIds": "Affected ID(s)",
                      "components.ResultTable.description": "Description",
                      "components.ResultTable.line": "Line",
                      "components.ResultTable.priority": "Priority",
                      "components.ResultTable.problemType": "Problem Type",
                      "components.Sidebar.unknown": "Desconocido",
                      "components.SnapshotItem.active": "Active",
                      "components.SnapshotItem.confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                      "components.SnapshotItem.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.SnapshotItem.createFromScratch": "Create GTFS from Scratch",
                      "components.SnapshotItem.created": "created",
                      "components.SnapshotItem.date": "Date",
                      "components.SnapshotItem.delete": "Delete",
                      "components.SnapshotItem.download": "Download",
                      "components.SnapshotItem.feed": "Feed",
                      "components.SnapshotItem.load": "Load for Editing",
                      "components.SnapshotItem.loadLatest": "Load latest for editing",
                      "components.SnapshotItem.name": "Name",
                      "components.SnapshotItem.noVersions": "(No Versions)",
                      "components.SnapshotItem.noVersionsExist": "No versions exist for this feed source.",
                      "components.SnapshotItem.of": "of",
                      "components.SnapshotItem.publish": "Publish",
                      "components.SnapshotItem.restore": "Restore",
                      "components.SnapshotItem.snapshot": "snapshot",
                      "components.SnapshotItem.title": "Snapshots",
                      "components.SnapshotItem.version": "Version",
                      "components.StarButton.star": "Star",
                      "components.StarButton.unstar": "Unstar",
                      "components.TimetableHelpModal.shortcuts.modify.desc.0": "Delete selected trip(s)",
                      "components.TimetableHelpModal.shortcuts.modify.desc.1": "New trip",
                      "components.TimetableHelpModal.shortcuts.modify.desc.2": "Clone selected trip(s)",
                      "components.TimetableHelpModal.shortcuts.modify.desc.3": "Copy time value from adjacent cell (the cell immediately to the left)",
                      "components.TimetableHelpModal.shortcuts.modify.desc.4": "Copy value from cell directly above",
                      "components.TimetableHelpModal.shortcuts.modify.title": "Modify trips",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.0": "Previous/next trip",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.1": "Previous/next column",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.2": "Select trip",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.3": "Select all trips",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.4": "Deselect all trips",
                      "components.TimetableHelpModal.shortcuts.navigate.title": "Navigating and selecting trips",
                      "components.TimetableHelpModal.shortcuts.offset.desc.0": "Offset selected trips' stop times by adding offset time",
                      "components.TimetableHelpModal.shortcuts.offset.desc.1": "Offset selected trips' stop times by subtracting offset time",
                      "components.TimetableHelpModal.shortcuts.offset.desc.2": "Offset only active cell's time by adding offset time",
                      "components.TimetableHelpModal.shortcuts.offset.desc.3": "Offset only active cell's time by subtracting offset time",
                      "components.TimetableHelpModal.shortcuts.offset.desc.4": "Decrease offset time by 1 minute",
                      "components.TimetableHelpModal.shortcuts.offset.desc.5": "Decrease offset time by 10 minutes",
                      "components.TimetableHelpModal.shortcuts.offset.desc.6": "Increase offset time by 1 minute",
                      "components.TimetableHelpModal.shortcuts.offset.desc.7": "Increase offset time by 10 minutes",
                      "components.TimetableHelpModal.shortcuts.offset.title": "Offsetting times",
                      "components.TimetableHelpModal.title": "Timetable editor keyboard shortcuts",
                      "components.TimezoneSelect.placeholder": "Select timezone...",
                      "components.UserAccount.account.title": "Account",
                      "components.UserAccount.billing.title": "Billing",
                      "components.UserAccount.notifications.methods": "Notification methods",
                      "components.UserAccount.notifications.subscriptions": "Your subscriptions",
                      "components.UserAccount.notifications.title": "Notifications",
                      "components.UserAccount.notifications.unsubscribeAll": "Unsubscribe from all",
                      "components.UserAccount.organizationSettings": "Organization settings",
                      "components.UserAccount.organizations.title": "Organizations",
                      "components.UserAccount.personalSettings": "Personal settings",
                      "components.UserAccount.profile.profileInformation": "Profile information",
                      "components.UserAccount.profile.title": "Profile",
                      "components.UserAccount.title": "My settings",
                      "components.UserAdmin.noAccess": "You do not have sufficient user privileges to access this area.",
                      "components.UserAdmin.title": "Administration",
                      "components.UserHomePage.createFirst": "Create my first project",
                      "components.UserHomePage.help.content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                      "components.UserHomePage.help.title": "What's a project?",
                      "components.UserHomePage.new": "New Project",
                      "components.UserHomePage.noProjects": "You currently do not have any projects.",
                      "components.UserHomePage.table.name": "Project Name",
                      "components.UserHomePage.title": "Projects",
                      "components.UserList.filterByOrg": "Filter by org.",
                      "components.UserList.of": "of",
                      "components.UserList.search": "Search by username",
                      "components.UserList.showing": "Showing Users",
                      "components.UserList.title": "User Management",
                      "components.UserRow.appAdmin": "App admin",
                      "components.UserRow.cancel": "Cancel",
                      "components.UserRow.delete": "Delete",
                      "components.UserRow.deleteConfirm": "Are you sure you want to permanently delete this user?",
                      "components.UserRow.edit": "Edit",
                      "components.UserRow.orgAdmin": "Org admin",
                      "components.UserRow.save": "Save",
                      "components.UserSettings.admin.description": "Application administrators have full access to all projects.",
                      "components.UserSettings.admin.title": "Application Admininistrator",
                      "components.UserSettings.application": "Application Settings",
                      "components.UserSettings.cancel": "Cancel",
                      "components.UserSettings.delete": "Delete",
                      "components.UserSettings.edit": "Edit",
                      "components.UserSettings.org.admin": "Organization administrator",
                      "components.UserSettings.org.billing": "Billing admin",
                      "components.UserSettings.org.description": "Organization administrators have full access to projects within the organization.",
                      "components.UserSettings.project.admin": "Admin",
                      "components.UserSettings.project.custom": "Custom",
                      "components.UserSettings.project.noAccess": "No Access",
                      "components.UserSettings.save": "Save",
                      "components.VersionButtonToolbar.confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                      "components.VersionButtonToolbar.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.VersionButtonToolbar.delete": "Delete",
                      "components.VersionButtonToolbar.download": "Download",
                      "components.VersionButtonToolbar.feed": "Feed",
                      "components.VersionButtonToolbar.load": "Load",
                      "components.VersionButtonToolbar.noVersionsExist": "No versions exist for this feed source.",
                      "components.VersionButtonToolbar.status": "Status",
                      "components.VersionButtonToolbar.timestamp": "File Timestamp",
                      "components.VersionButtonToolbar.version": "version",
                      "components.WatchButton.unwatch": "Unwatch",
                      "components.WatchButton.watch": "Watch",
                    },
                    Object {
                      "_id": "fr",
                      "_name": "Français",
                      "components": Object {
                        "Breadcrumbs": Object {
                          "deployments": "Deployments",
                          "projects": "Projects",
                          "root": "Explore",
                        },
                        "CollapsiblePanel": Object {
                          "deployment": Object {
                            "buildConfig": Object {
                              "elevationBucket": Object {
                                "accessKey": "Access Key",
                                "bucketName": "S3 Bucket Name",
                                "secretKey": "Secret Key",
                              },
                              "fares": "Fares",
                              "fetchElevationUS": "Fetch Elevation",
                              "stationTransfers": "Sta. Transfers",
                              "subwayAccessTime": "Subway Access Time",
                              "title": "Build Config",
                            },
                            "osm": Object {
                              "bounds": "Custom Extract Bounds",
                              "custom": "Use Custom Extract Bounds",
                              "gtfs": "Use GTFS-Derived Extract Bounds",
                              "title": "OSM Extract",
                            },
                            "otpServers": Object {
                              "$index": Object {
                                "admin": "Admin access only?",
                                "delete": "Remove",
                                "internalUrl": "Internal URLs",
                                "name": "Name",
                                "namePlaceholder": "Production",
                                "publicUrl": "Public URL",
                                "s3Bucket": "S3 bucket name",
                              },
                              "new": "Add server",
                              "serverPlaceholder": "Server name",
                              "title": "Servers",
                            },
                            "routerConfig": Object {
                              "brandingUrlRoot": "Branding URL Root",
                              "carDropoffTime": "Car Dropoff Time",
                              "numItineraries": "# of itineraries",
                              "requestLogFile": "Request log file",
                              "stairsReluctance": "Stairs Reluctance",
                              "title": "Router Config",
                              "updaters": Object {
                                "$index": Object {
                                  "defaultAgencyId": "Default agency ID",
                                  "frequencySec": "Frequency (in seconds)",
                                  "sourceType": "Source type",
                                  "type": "Type",
                                  "url": "URL",
                                },
                                "new": "Add updater",
                                "placeholder": "Updater name",
                                "title": "Real-time updaters",
                              },
                              "walkSpeed": "Walk Speed",
                            },
                            "title": "Deployment",
                          },
                        },
                        "CreateUser": Object {
                          "new": "Create User",
                        },
                        "DatatoolsNavbar": Object {
                          "account": "My Account",
                          "alerts": "Alertes",
                          "editor": "Editeur",
                          "guide": "Guide de l'utilisateur",
                          "login": "Se connecter",
                          "logout": "Fermer une session",
                          "manager": "Gestionnaire",
                          "resetPassword": "Reset Password",
                          "signConfig": "eTID Config",
                          "users": "Utilisateurs",
                        },
                        "DeploymentConfirmModal": Object {
                          "alert": Object {
                            "alreadyDeployed": "is already deployed to this server at the same router. (Deploying would evict the current graph.)",
                            "boundsTooLarge": "Bounds are much too large to successfully deploy to OpenTripPlanner. Deployment is disabled.",
                            "expiredFeeds": "The following feeds have expired (all scheduled trips are for past dates)",
                            "missingBounds": "There are no bounds defined for the set of feeds. Deployment is disabled.",
                            "missingFeeds": "There are no feeds defined for this deployment. Deployment is disabled.",
                            "success": "Deployment successfully deployed.",
                          },
                          "cancel": "Cancel",
                          "close": "Close",
                          "danger": "Danger!",
                          "deploy": "Deploy",
                          "invalidBounds": "Bounds are invalid!",
                          "success": "Success!",
                          "to": "to",
                          "warning": "Warning!",
                        },
                        "DeploymentSettings": Object {
                          "buildConfig": Object {
                            "elevationBucket": Object {
                              "accessKey": "Access Key",
                              "bucketName": "S3 Bucket Name",
                              "secretKey": "Secret Key",
                            },
                            "fares": "Fares",
                            "fetchElevationUS": "Fetch Elevation",
                            "stationTransfers": "Sta. Transfers",
                            "subwayAccessTime": "Subway Access Time",
                            "title": "Build Config",
                          },
                          "osm": Object {
                            "bounds": "Custom Extract Bounds",
                            "custom": "Use Custom Extract Bounds",
                            "gtfs": "Use GTFS-Derived Extract Bounds",
                            "title": "OSM Extract",
                          },
                          "otpServers": Object {
                            "$index": Object {
                              "admin": "Admin access only?",
                              "delete": "Remove",
                              "internalUrl": "Internal URLs",
                              "name": "Name",
                              "namePlaceholder": "Production",
                              "publicUrl": "Public URL",
                              "s3Bucket": "S3 bucket name",
                            },
                            "new": "Add server",
                            "serverPlaceholder": "Server name",
                            "title": "Servers",
                          },
                          "routerConfig": Object {
                            "brandingUrlRoot": "Branding URL Root",
                            "carDropoffTime": "Car Dropoff Time",
                            "numItineraries": "# of itineraries",
                            "requestLogFile": "Request log file",
                            "stairsReluctance": "Stairs Reluctance",
                            "title": "Router Config",
                            "updaters": Object {
                              "$index": Object {
                                "defaultAgencyId": "Default agency ID",
                                "frequencySec": "Frequency (in seconds)",
                                "sourceType": "Source type",
                                "type": "Type",
                                "url": "URL",
                              },
                              "new": "Add updater",
                              "placeholder": "Updater name",
                              "title": "Real-time updaters",
                            },
                            "walkSpeed": "Walk Speed",
                          },
                          "save": "Save",
                          "title": "Deployment",
                        },
                        "DeploymentVersionsTable": Object {
                          "dateRetrieved": "Date Retrieved",
                          "errorCount": "Error Count",
                          "expires": "Expires",
                          "loadStatus": "Loaded Successfully",
                          "name": "Name",
                          "routeCount": "Route Count",
                          "stopTimesCount": "Stop time count",
                          "tripCount": "Trip Count",
                          "validFrom": "Valid from",
                          "version": "Version",
                        },
                        "DeploymentViewer": Object {
                          "addFeedSource": "Add Feed Source",
                          "allFeedsAdded": "All feeds added",
                          "deploy": "Deploy",
                          "download": "Download",
                          "noServers": "No servers defined",
                          "search": "Search by name",
                          "table": Object {
                            "dateRetrieved": "Date Retrieved",
                            "errorCount": "Error Count",
                            "expires": "Expires",
                            "loadStatus": "Loaded Successfully",
                            "name": "Name",
                            "routeCount": "Route Count",
                            "stopTimesCount": "Stop time count",
                            "tripCount": "Trip Count",
                            "validFrom": "Valid from",
                            "version": "Version",
                          },
                          "to": "to",
                          "versions": "Feed Versions",
                        },
                        "DeploymentsList": Object {
                          "delete": "Remove deployment",
                          "new": "New Deployment",
                          "search": "Search for deployments",
                          "table": Object {
                            "creationDate": "Created",
                            "deployedTo": "Deployed to",
                            "feedCount": "# of feeds",
                            "lastDeployed": "Last deployed",
                            "name": "Name",
                            "testDeployment": "Test?",
                          },
                          "title": "Deployments",
                        },
                        "DeploymentsPanel": Object {
                          "delete": "Remove deployment",
                          "new": "New Deployment",
                          "search": "Search for deployments",
                          "table": Object {
                            "creationDate": "Created",
                            "deployedTo": "Deployed to",
                            "feedCount": "# of feeds",
                            "lastDeployed": "Last deployed",
                            "name": "Name",
                            "testDeployment": "Test?",
                          },
                          "title": "Deployments",
                        },
                        "EditorFeedSourcePanel": Object {
                          "active": "Active",
                          "confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "createFromScratch": "Create GTFS from Scratch",
                          "created": "created",
                          "date": "Date",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "help": Object {
                            "body": Array [
                              "Snapshots are save points you can always revert back to when editing a GTFS feed.",
                              "A snapshot might represent a work-in-progress, future planning scenario or even different service patterns (e.g., summer schedule markup).",
                            ],
                            "title": "What are snapshots?",
                          },
                          "load": "Load for Editing",
                          "loadLatest": "Load latest for editing",
                          "name": "Name",
                          "noSnapshotsExist": "No snapshots currently exist for this feed. Snapshots can be created within the Editor. Click \\"Edit Feed\\" to enter editing mode.",
                          "noVersions": "(No Versions)",
                          "noVersionsExist": "No versions exist for this feed source.",
                          "of": "of",
                          "publish": "Publish",
                          "restore": "Restore",
                          "snapshot": "snapshot",
                          "title": "Snapshots",
                          "version": "Version",
                        },
                        "FeedInfoPanel": Object {
                          "uploadShapefile": Object {
                            "body": "Select a zipped shapefile to display on map. Note: this is only for use as a visual aid.",
                            "error": "Uploaded file must be a valid zip file (.zip).",
                            "title": "Upload route shapefile",
                          },
                        },
                        "FeedSourceAttributes": Object {
                          "lastUpdated": "Updated",
                        },
                        "FeedSourcePanel": Object {
                          "search": "Search feeds",
                        },
                        "FeedSourceTable": Object {
                          "comparisonColumn": Object {
                            "DEPLOYED": "Deployed Version",
                            "PUBLISHED": "Published Version",
                          },
                          "createFirst": "Create first feed source!",
                        },
                        "FeedSourceTableRow": Object {
                          "status": Object {
                            "active": "Active",
                            "all": "All",
                            "expired": "Expired",
                            "expiring-within-20-days": "Expiring within 20 days",
                            "expiring-within-5-days": "Expiring within 5 days",
                            "feedNotInDeployment": "Feed not in deployment",
                            "feedNotPublished": "Feed not published",
                            "future": "Future",
                            "no-version": "No version",
                            "same-as-deployed": "Same as Deployed",
                            "same-as-published": "Same as Published",
                          },
                        },
                        "FeedSourceViewer": Object {
                          "deploy": "Deploy",
                          "edit": "Edit GTFS",
                          "gtfs": "GTFS",
                          "notesTitle": "Notes",
                          "private": "Private view",
                          "properties": Object {
                            "deployable": "Deployable?",
                            "name": "Name",
                            "noneSelected": "(None Selected)",
                            "property": "Property",
                            "public": "Public?",
                            "retrievalMethod": Object {
                              "fetchedAutomatically": "Fetched Automatically",
                              "manuallyUploaded": "Manually Uploaded",
                              "producedInHouse": "Produced In-house",
                              "title": "Retrieval Method",
                            },
                            "snapshot": "Editor Snapshot",
                            "title": "Settings",
                            "value": "Value",
                          },
                          "snapshotsTitle": "Snapshots",
                          "update": "Update",
                          "upload": "Upload",
                          "versions": "Versions",
                          "viewPublic": "View public page",
                        },
                        "FeedVersionNavigator": Object {
                          "confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "load": "Load for Editing",
                          "next": "Next",
                          "of": "of",
                          "previous": "Previous",
                          "version": "Version",
                        },
                        "FeedVersionTabs": Object {
                          "agencyCount": "Agency Count",
                          "routeCount": "Route Count",
                          "stopTimesCount": "Stop time Count",
                          "tripCount": "Trip Count",
                          "validDates": "Valid Dates",
                        },
                        "FeedVersionViewer": Object {
                          "confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "load": "Load",
                          "noVersionsExist": "No versions exist for this feed source.",
                          "status": "Status",
                          "timestamp": "File Timestamp",
                          "version": "version",
                        },
                        "GeneralSettings": Object {
                          "confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                          "deleteProject": "Delete Project?",
                          "deployment": Object {
                            "buildConfig": Object {
                              "elevationBucket": Object {
                                "accessKey": "Access Key",
                                "bucketName": "S3 Bucket Name",
                                "secretKey": "Secret Key",
                              },
                              "fares": "Fares",
                              "fetchElevationUS": "Fetch Elevation",
                              "stationTransfers": "Sta. Transfers",
                              "subwayAccessTime": "Subway Access Time",
                              "title": "Build Config",
                            },
                            "osm": Object {
                              "bounds": "Custom Extract Bounds",
                              "custom": "Use Custom Extract Bounds",
                              "gtfs": "Use GTFS-Derived Extract Bounds",
                              "title": "OSM Extract",
                            },
                            "otpServers": Object {
                              "$index": Object {
                                "admin": "Admin access only?",
                                "delete": "Remove",
                                "internalUrl": "Internal URLs",
                                "name": "Name",
                                "namePlaceholder": "Production",
                                "publicUrl": "Public URL",
                                "s3Bucket": "S3 bucket name",
                              },
                              "new": "Add server",
                              "serverPlaceholder": "Server name",
                              "title": "Servers",
                            },
                            "routerConfig": Object {
                              "brandingUrlRoot": "Branding URL Root",
                              "carDropoffTime": "Car Dropoff Time",
                              "numItineraries": "# of itineraries",
                              "requestLogFile": "Request log file",
                              "stairsReluctance": "Stairs Reluctance",
                              "title": "Router Config",
                              "updaters": Object {
                                "$index": Object {
                                  "defaultAgencyId": "Default agency ID",
                                  "frequencySec": "Frequency (in seconds)",
                                  "sourceType": "Source type",
                                  "type": "Type",
                                  "url": "URL",
                                },
                                "new": "Add updater",
                                "placeholder": "Updater name",
                                "title": "Real-time updaters",
                              },
                              "walkSpeed": "Walk Speed",
                            },
                            "title": "Deployment",
                          },
                          "general": Object {
                            "location": Object {
                              "boundingBox": "Bounding box (W,S,E,N)",
                              "defaultLanguage": "Default language",
                              "defaultLocation": "Default location (lat, lng)",
                              "defaultTimeZone": "Default time zone",
                              "title": "Location",
                            },
                            "name": "Project name",
                            "title": "General",
                            "updates": Object {
                              "autoFetchFeeds": "Auto fetch feed sources?",
                              "title": "Updates",
                            },
                          },
                          "rename": "Rename",
                          "save": "Save",
                          "title": "Settings",
                        },
                        "GtfsValidationExplorer": Object {
                          "accessibilityValidation": "Accessibility Explorer",
                          "table": Object {
                            "count": "Count",
                            "file": "File",
                            "issue": "Issue",
                            "priority": "Priority",
                          },
                          "timeValidation": "Time-based Validation",
                          "title": "Validation Explorer",
                          "validationIssues": "Validation Issues",
                        },
                        "GtfsValidationViewer": Object {
                          "explorer": "Validation Explorer",
                          "issues": Object {
                            "other": "Other issues",
                            "routes": "Route issues",
                            "shapes": "Shape issues",
                            "stop_times": "Stop times issues",
                            "stops": "Stop issues",
                            "trips": "Trip issues",
                          },
                          "noResults": "No validation results to show.",
                          "title": "Validation Results",
                        },
                        "LanguageSelect": Object {
                          "placeholder": "Select language...",
                        },
                        "Login": Object {
                          "title": "Se connecter",
                        },
                        "NotesViewer": Object {
                          "all": "All Comments",
                          "feedSource": "Feed Source",
                          "feedVersion": "Version",
                          "new": "Post",
                          "none": "No comments.",
                          "postComment": "Post a New Comment",
                          "refresh": "Refresh",
                          "title": "Comments",
                        },
                        "OrganizationList": Object {
                          "new": "Create org",
                          "search": "Search orgs",
                        },
                        "OrganizationSettings": Object {
                          "extensions": "Extensions",
                          "logoUrl": Object {
                            "label": "Logo URL",
                            "placeholder": "http://example.com/logo_30x30.png",
                          },
                          "name": Object {
                            "label": "Name",
                            "placeholder": "Big City Transit",
                          },
                          "orgDetails": "Organization details",
                          "projects": "Projects",
                          "subDetails": "Subscription details",
                          "subscriptionBeginDate": "Subscription begins",
                          "subscriptionEndDate": "Subscription ends",
                          "usageTier": Object {
                            "high": "High",
                            "low": "Low",
                            "medium": "Medium",
                          },
                        },
                        "ProjectAccessSettings": Object {
                          "admin": "Admin",
                          "cannotFetchFeeds": "Cannot fetch feeds",
                          "custom": "Custom",
                          "feeds": "Feed Sources",
                          "noAccess": "No Access",
                          "permissions": "Permissions",
                          "title": "Project Settings for",
                        },
                        "ProjectFeedListToolbar": Object {
                          "comparison": Object {
                            "DEPLOYED": "Deployed",
                            "LATEST": "Latest",
                            "PUBLISHED": "Published",
                          },
                          "deployments": "Deployments",
                          "feeds": Object {
                            "createFirst": "Create first feed source!",
                            "new": "New Feed Source",
                            "search": "Search by name",
                            "table": Object {
                              "deployable": "Deployable?",
                              "errorCount": "Errors",
                              "lastUpdated": "Updated",
                              "name": "Name",
                              "public": "Public?",
                              "retrievalMethod": "Retrieval Method",
                              "validRange": "Valid Range",
                            },
                            "title": "Feed Sources",
                            "update": "Fetch all",
                          },
                          "filter": Object {
                            "active": "Active",
                            "all": "All",
                            "expired": "Expired",
                            "expiring": "Expiring soon",
                            "future": "Future",
                          },
                          "makePublic": "Publish public feeds",
                          "mergeFeeds": "Merge all",
                          "settings": "Settings",
                          "sort": Object {
                            "alphabetically": Object {
                              "asc": "A-Z",
                              "desc": "Z-A",
                              "title": "Alphabetically",
                            },
                            "endDate": Object {
                              "asc": "Soonest-Latest",
                              "desc": "Latest-Soonest",
                              "title": "Expiration Date",
                            },
                            "lastUpdated": Object {
                              "asc": "Stale-Recent",
                              "desc": "Recent-Stale",
                              "title": "Last Update",
                            },
                            "numErrors": Object {
                              "asc": "Least-Most",
                              "desc": "Most-Least",
                              "title": "Number of Errors",
                            },
                            "startDate": Object {
                              "asc": "Soonest-Latest",
                              "desc": "Latest-Soonest",
                              "title": "Start Date",
                            },
                          },
                          "sync": Object {
                            "mtc": "Sync from MTC",
                            "transitfeeds": "Sync from transitfeeds",
                            "transitland": "Sync from transit.land",
                          },
                        },
                        "ProjectSettings": Object {
                          "deployment": Object {
                            "buildConfig": Object {
                              "elevationBucket": Object {
                                "accessKey": "Access Key",
                                "bucketName": "S3 Bucket Name",
                                "secretKey": "Secret Key",
                              },
                              "fares": "Fares",
                              "fetchElevationUS": "Fetch Elevation",
                              "stationTransfers": "Sta. Transfers",
                              "subwayAccessTime": "Subway Access Time",
                              "title": "Build Config",
                            },
                            "osm": Object {
                              "bounds": "Custom Extract Bounds",
                              "custom": "Use Custom Extract Bounds",
                              "gtfs": "Use GTFS-Derived Extract Bounds",
                              "title": "OSM Extract",
                            },
                            "otpServers": Object {
                              "$index": Object {
                                "admin": "Admin access only?",
                                "delete": "Remove",
                                "internalUrl": "Internal URLs",
                                "name": "Name",
                                "namePlaceholder": "Production",
                                "publicUrl": "Public URL",
                                "s3Bucket": "S3 bucket name",
                              },
                              "new": "Add server",
                              "serverPlaceholder": "Server name",
                              "title": "Servers",
                            },
                            "routerConfig": Object {
                              "brandingUrlRoot": "Branding URL Root",
                              "carDropoffTime": "Car Dropoff Time",
                              "numItineraries": "# of itineraries",
                              "requestLogFile": "Request log file",
                              "stairsReluctance": "Stairs Reluctance",
                              "title": "Router Config",
                              "updaters": Object {
                                "$index": Object {
                                  "defaultAgencyId": "Default agency ID",
                                  "frequencySec": "Frequency (in seconds)",
                                  "sourceType": "Source type",
                                  "type": "Type",
                                  "url": "URL",
                                },
                                "new": "Add updater",
                                "placeholder": "Updater name",
                                "title": "Real-time updaters",
                              },
                              "walkSpeed": "Walk Speed",
                            },
                            "title": "Deployment",
                          },
                          "project": Object {
                            "cannotFetchFeeds": "Cannot fetch feeds",
                            "feeds": "Feeds",
                            "permissions": "Permissions",
                          },
                          "rename": "Rename",
                          "save": "Save",
                          "title": "Settings",
                        },
                        "ProjectSettingsForm": Object {
                          "cancel": "Cancel",
                          "confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                          "deleteProject": "Delete Project?",
                          "fields": Object {
                            "location": Object {
                              "boundingBox": "Bounding box (W,S,E,N)",
                              "defaultLanguage": "Default language",
                              "defaultLocation": "Default location (lat, lng)",
                              "defaultTimeZone": "Default time zone",
                              "title": "Location",
                            },
                            "name": "Project name",
                            "title": "General",
                            "updates": Object {
                              "autoFetchFeeds": "Auto fetch feed sources?",
                              "title": "Updates",
                            },
                          },
                          "save": "Save",
                          "title": "Settings",
                        },
                        "ProjectViewer": Object {
                          "deployments": "Deployments",
                          "feeds": Object {
                            "createFirst": "Create first feed source!",
                            "new": "New Feed Source",
                            "search": "Search by name",
                            "table": Object {
                              "deployable": "Deployable?",
                              "errorCount": "Errors",
                              "lastUpdated": "Updated",
                              "name": "Name",
                              "public": "Public?",
                              "retrievalMethod": "Retrieval Method",
                              "validRange": "Valid Range",
                            },
                            "title": "Feed Sources",
                            "update": "Fetch all",
                          },
                          "makePublic": "Publish public feeds",
                          "mergeFeeds": "Merge all",
                          "settings": "Settings",
                        },
                        "ProjectsList": Object {
                          "createFirst": "Create my first project",
                          "help": Object {
                            "content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                            "title": "What's a project?",
                          },
                          "new": "New Project",
                          "noProjects": "You currently do not have any projects.",
                          "search": "Search by project name",
                          "table": Object {
                            "name": "Project Name",
                          },
                          "title": "Projects",
                        },
                        "PublicFeedsTable": Object {
                          "country": "Country",
                          "lastUpdated": "Last Updated",
                          "link": "Link to GTFS",
                          "name": "Feed Name",
                          "region": "Region",
                          "search": "Search",
                          "stateProvince": "State or Province",
                        },
                        "PublicFeedsViewer": Object {
                          "title": "Catalogue",
                        },
                        "RegionSearch": Object {
                          "placeholder": "Search for regions or agencies",
                        },
                        "ResultTable": Object {
                          "affectedIds": "Affected ID(s)",
                          "description": "Description",
                          "line": "Line",
                          "priority": "Priority",
                          "problemType": "Problem Type",
                        },
                        "Sidebar": Object {
                          "unknown": "Inconnu",
                        },
                        "SnapshotItem": Object {
                          "active": "Active",
                          "confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "createFromScratch": "Create GTFS from Scratch",
                          "created": "created",
                          "date": "Date",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "load": "Load for Editing",
                          "loadLatest": "Load latest for editing",
                          "name": "Name",
                          "noVersions": "(No Versions)",
                          "noVersionsExist": "No versions exist for this feed source.",
                          "of": "of",
                          "publish": "Publish",
                          "restore": "Restore",
                          "snapshot": "snapshot",
                          "title": "Snapshots",
                          "version": "Version",
                        },
                        "StarButton": Object {
                          "star": "Star",
                          "unstar": "Unstar",
                        },
                        "TimetableHelpModal": Object {
                          "shortcuts": Object {
                            "modify": Object {
                              "desc": Array [
                                "Delete selected trip(s)",
                                "New trip",
                                "Clone selected trip(s)",
                                "Copy time value from adjacent cell (the cell immediately to the left)",
                                "Copy value from cell directly above",
                              ],
                              "title": "Modify trips",
                            },
                            "navigate": Object {
                              "desc": Array [
                                "Previous/next trip",
                                "Previous/next column",
                                "Select trip",
                                "Select all trips",
                                "Deselect all trips",
                              ],
                              "title": "Navigating and selecting trips",
                            },
                            "offset": Object {
                              "desc": Array [
                                "Offset selected trips' stop times by adding offset time",
                                "Offset selected trips' stop times by subtracting offset time",
                                "Offset only active cell's time by adding offset time",
                                "Offset only active cell's time by subtracting offset time",
                                "Decrease offset time by 1 minute",
                                "Decrease offset time by 10 minutes",
                                "Increase offset time by 1 minute",
                                "Increase offset time by 10 minutes",
                              ],
                              "title": "Offsetting times",
                            },
                          },
                          "title": "Timetable editor keyboard shortcuts",
                        },
                        "TimezoneSelect": Object {
                          "placeholder": "Select timezone...",
                        },
                        "UserAccount": Object {
                          "account": Object {
                            "title": "Account",
                          },
                          "billing": Object {
                            "title": "Billing",
                          },
                          "notifications": Object {
                            "methods": "Notification methods",
                            "subscriptions": "Your subscriptions",
                            "title": "Notifications",
                            "unsubscribeAll": "Unsubscribe from all",
                          },
                          "organizationSettings": "Organization settings",
                          "organizations": Object {
                            "title": "Organizations",
                          },
                          "personalSettings": "Personal settings",
                          "profile": Object {
                            "profileInformation": "Profile information",
                            "title": "Profile",
                          },
                          "title": "My settings",
                        },
                        "UserAdmin": Object {
                          "noAccess": "You do not have sufficient user privileges to access this area.",
                          "title": "Administration",
                        },
                        "UserHomePage": Object {
                          "createFirst": "Create my first project",
                          "help": Object {
                            "content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                            "title": "What's a project?",
                          },
                          "new": "New Project",
                          "noProjects": "You currently do not have any projects.",
                          "table": Object {
                            "name": "Project Name",
                          },
                          "title": "Projects",
                        },
                        "UserList": Object {
                          "filterByOrg": "Filter by org.",
                          "of": "of",
                          "search": "Search by username",
                          "showing": "Showing Users",
                          "title": "User Management",
                        },
                        "UserRow": Object {
                          "appAdmin": "App admin",
                          "cancel": "Cancel",
                          "delete": "Delete",
                          "deleteConfirm": "Are you sure you want to permanently delete this user?",
                          "edit": "Edit",
                          "orgAdmin": "Org admin",
                          "save": "Save",
                        },
                        "UserSettings": Object {
                          "admin": Object {
                            "description": "Application administrators have full access to all projects.",
                            "title": "Application Admininistrator",
                          },
                          "application": "Application Settings",
                          "cancel": "Cancel",
                          "delete": "Delete",
                          "edit": "Edit",
                          "org": Object {
                            "admin": "Organization administrator",
                            "billing": "Billing admin",
                            "description": "Organization administrators have full access to projects within the organization.",
                          },
                          "project": Object {
                            "admin": "Admin",
                            "custom": "Custom",
                            "noAccess": "No Access",
                          },
                          "save": "Save",
                        },
                        "VersionButtonToolbar": Object {
                          "confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                          "confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                          "delete": "Delete",
                          "download": "Download",
                          "feed": "Feed",
                          "load": "Load",
                          "noVersionsExist": "No versions exist for this feed source.",
                          "status": "Status",
                          "timestamp": "File Timestamp",
                          "version": "version",
                        },
                        "WatchButton": Object {
                          "unwatch": "Unwatch",
                          "watch": "Watch",
                        },
                      },
                      "components.Breadcrumbs.deployments": "Deployments",
                      "components.Breadcrumbs.projects": "Projects",
                      "components.Breadcrumbs.root": "Explore",
                      "components.CollapsiblePanel.deployment.buildConfig.elevationBucket.accessKey": "Access Key",
                      "components.CollapsiblePanel.deployment.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                      "components.CollapsiblePanel.deployment.buildConfig.elevationBucket.secretKey": "Secret Key",
                      "components.CollapsiblePanel.deployment.buildConfig.fares": "Fares",
                      "components.CollapsiblePanel.deployment.buildConfig.fetchElevationUS": "Fetch Elevation",
                      "components.CollapsiblePanel.deployment.buildConfig.stationTransfers": "Sta. Transfers",
                      "components.CollapsiblePanel.deployment.buildConfig.subwayAccessTime": "Subway Access Time",
                      "components.CollapsiblePanel.deployment.buildConfig.title": "Build Config",
                      "components.CollapsiblePanel.deployment.osm.bounds": "Custom Extract Bounds",
                      "components.CollapsiblePanel.deployment.osm.custom": "Use Custom Extract Bounds",
                      "components.CollapsiblePanel.deployment.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                      "components.CollapsiblePanel.deployment.osm.title": "OSM Extract",
                      "components.CollapsiblePanel.deployment.otpServers.$index.admin": "Admin access only?",
                      "components.CollapsiblePanel.deployment.otpServers.$index.delete": "Remove",
                      "components.CollapsiblePanel.deployment.otpServers.$index.internalUrl": "Internal URLs",
                      "components.CollapsiblePanel.deployment.otpServers.$index.name": "Name",
                      "components.CollapsiblePanel.deployment.otpServers.$index.namePlaceholder": "Production",
                      "components.CollapsiblePanel.deployment.otpServers.$index.publicUrl": "Public URL",
                      "components.CollapsiblePanel.deployment.otpServers.$index.s3Bucket": "S3 bucket name",
                      "components.CollapsiblePanel.deployment.otpServers.new": "Add server",
                      "components.CollapsiblePanel.deployment.otpServers.serverPlaceholder": "Server name",
                      "components.CollapsiblePanel.deployment.otpServers.title": "Servers",
                      "components.CollapsiblePanel.deployment.routerConfig.brandingUrlRoot": "Branding URL Root",
                      "components.CollapsiblePanel.deployment.routerConfig.carDropoffTime": "Car Dropoff Time",
                      "components.CollapsiblePanel.deployment.routerConfig.numItineraries": "# of itineraries",
                      "components.CollapsiblePanel.deployment.routerConfig.requestLogFile": "Request log file",
                      "components.CollapsiblePanel.deployment.routerConfig.stairsReluctance": "Stairs Reluctance",
                      "components.CollapsiblePanel.deployment.routerConfig.title": "Router Config",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.sourceType": "Source type",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.type": "Type",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.$index.url": "URL",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.new": "Add updater",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.placeholder": "Updater name",
                      "components.CollapsiblePanel.deployment.routerConfig.updaters.title": "Real-time updaters",
                      "components.CollapsiblePanel.deployment.routerConfig.walkSpeed": "Walk Speed",
                      "components.CollapsiblePanel.deployment.title": "Deployment",
                      "components.CreateUser.new": "Create User",
                      "components.DatatoolsNavbar.account": "My Account",
                      "components.DatatoolsNavbar.alerts": "Alertes",
                      "components.DatatoolsNavbar.editor": "Editeur",
                      "components.DatatoolsNavbar.guide": "Guide de l'utilisateur",
                      "components.DatatoolsNavbar.login": "Se connecter",
                      "components.DatatoolsNavbar.logout": "Fermer une session",
                      "components.DatatoolsNavbar.manager": "Gestionnaire",
                      "components.DatatoolsNavbar.resetPassword": "Reset Password",
                      "components.DatatoolsNavbar.signConfig": "eTID Config",
                      "components.DatatoolsNavbar.users": "Utilisateurs",
                      "components.DeploymentConfirmModal.alert.alreadyDeployed": "is already deployed to this server at the same router. (Deploying would evict the current graph.)",
                      "components.DeploymentConfirmModal.alert.boundsTooLarge": "Bounds are much too large to successfully deploy to OpenTripPlanner. Deployment is disabled.",
                      "components.DeploymentConfirmModal.alert.expiredFeeds": "The following feeds have expired (all scheduled trips are for past dates)",
                      "components.DeploymentConfirmModal.alert.missingBounds": "There are no bounds defined for the set of feeds. Deployment is disabled.",
                      "components.DeploymentConfirmModal.alert.missingFeeds": "There are no feeds defined for this deployment. Deployment is disabled.",
                      "components.DeploymentConfirmModal.alert.success": "Deployment successfully deployed.",
                      "components.DeploymentConfirmModal.cancel": "Cancel",
                      "components.DeploymentConfirmModal.close": "Close",
                      "components.DeploymentConfirmModal.danger": "Danger!",
                      "components.DeploymentConfirmModal.deploy": "Deploy",
                      "components.DeploymentConfirmModal.invalidBounds": "Bounds are invalid!",
                      "components.DeploymentConfirmModal.success": "Success!",
                      "components.DeploymentConfirmModal.to": "to",
                      "components.DeploymentConfirmModal.warning": "Warning!",
                      "components.DeploymentSettings.buildConfig.elevationBucket.accessKey": "Access Key",
                      "components.DeploymentSettings.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                      "components.DeploymentSettings.buildConfig.elevationBucket.secretKey": "Secret Key",
                      "components.DeploymentSettings.buildConfig.fares": "Fares",
                      "components.DeploymentSettings.buildConfig.fetchElevationUS": "Fetch Elevation",
                      "components.DeploymentSettings.buildConfig.stationTransfers": "Sta. Transfers",
                      "components.DeploymentSettings.buildConfig.subwayAccessTime": "Subway Access Time",
                      "components.DeploymentSettings.buildConfig.title": "Build Config",
                      "components.DeploymentSettings.osm.bounds": "Custom Extract Bounds",
                      "components.DeploymentSettings.osm.custom": "Use Custom Extract Bounds",
                      "components.DeploymentSettings.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                      "components.DeploymentSettings.osm.title": "OSM Extract",
                      "components.DeploymentSettings.otpServers.$index.admin": "Admin access only?",
                      "components.DeploymentSettings.otpServers.$index.delete": "Remove",
                      "components.DeploymentSettings.otpServers.$index.internalUrl": "Internal URLs",
                      "components.DeploymentSettings.otpServers.$index.name": "Name",
                      "components.DeploymentSettings.otpServers.$index.namePlaceholder": "Production",
                      "components.DeploymentSettings.otpServers.$index.publicUrl": "Public URL",
                      "components.DeploymentSettings.otpServers.$index.s3Bucket": "S3 bucket name",
                      "components.DeploymentSettings.otpServers.new": "Add server",
                      "components.DeploymentSettings.otpServers.serverPlaceholder": "Server name",
                      "components.DeploymentSettings.otpServers.title": "Servers",
                      "components.DeploymentSettings.routerConfig.brandingUrlRoot": "Branding URL Root",
                      "components.DeploymentSettings.routerConfig.carDropoffTime": "Car Dropoff Time",
                      "components.DeploymentSettings.routerConfig.numItineraries": "# of itineraries",
                      "components.DeploymentSettings.routerConfig.requestLogFile": "Request log file",
                      "components.DeploymentSettings.routerConfig.stairsReluctance": "Stairs Reluctance",
                      "components.DeploymentSettings.routerConfig.title": "Router Config",
                      "components.DeploymentSettings.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                      "components.DeploymentSettings.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                      "components.DeploymentSettings.routerConfig.updaters.$index.sourceType": "Source type",
                      "components.DeploymentSettings.routerConfig.updaters.$index.type": "Type",
                      "components.DeploymentSettings.routerConfig.updaters.$index.url": "URL",
                      "components.DeploymentSettings.routerConfig.updaters.new": "Add updater",
                      "components.DeploymentSettings.routerConfig.updaters.placeholder": "Updater name",
                      "components.DeploymentSettings.routerConfig.updaters.title": "Real-time updaters",
                      "components.DeploymentSettings.routerConfig.walkSpeed": "Walk Speed",
                      "components.DeploymentSettings.save": "Save",
                      "components.DeploymentSettings.title": "Deployment",
                      "components.DeploymentVersionsTable.dateRetrieved": "Date Retrieved",
                      "components.DeploymentVersionsTable.errorCount": "Error Count",
                      "components.DeploymentVersionsTable.expires": "Expires",
                      "components.DeploymentVersionsTable.loadStatus": "Loaded Successfully",
                      "components.DeploymentVersionsTable.name": "Name",
                      "components.DeploymentVersionsTable.routeCount": "Route Count",
                      "components.DeploymentVersionsTable.stopTimesCount": "Stop time count",
                      "components.DeploymentVersionsTable.tripCount": "Trip Count",
                      "components.DeploymentVersionsTable.validFrom": "Valid from",
                      "components.DeploymentVersionsTable.version": "Version",
                      "components.DeploymentViewer.addFeedSource": "Add Feed Source",
                      "components.DeploymentViewer.allFeedsAdded": "All feeds added",
                      "components.DeploymentViewer.deploy": "Deploy",
                      "components.DeploymentViewer.download": "Download",
                      "components.DeploymentViewer.noServers": "No servers defined",
                      "components.DeploymentViewer.search": "Search by name",
                      "components.DeploymentViewer.table.dateRetrieved": "Date Retrieved",
                      "components.DeploymentViewer.table.errorCount": "Error Count",
                      "components.DeploymentViewer.table.expires": "Expires",
                      "components.DeploymentViewer.table.loadStatus": "Loaded Successfully",
                      "components.DeploymentViewer.table.name": "Name",
                      "components.DeploymentViewer.table.routeCount": "Route Count",
                      "components.DeploymentViewer.table.stopTimesCount": "Stop time count",
                      "components.DeploymentViewer.table.tripCount": "Trip Count",
                      "components.DeploymentViewer.table.validFrom": "Valid from",
                      "components.DeploymentViewer.table.version": "Version",
                      "components.DeploymentViewer.to": "to",
                      "components.DeploymentViewer.versions": "Feed Versions",
                      "components.DeploymentsList.delete": "Remove deployment",
                      "components.DeploymentsList.new": "New Deployment",
                      "components.DeploymentsList.search": "Search for deployments",
                      "components.DeploymentsList.table.creationDate": "Created",
                      "components.DeploymentsList.table.deployedTo": "Deployed to",
                      "components.DeploymentsList.table.feedCount": "# of feeds",
                      "components.DeploymentsList.table.lastDeployed": "Last deployed",
                      "components.DeploymentsList.table.name": "Name",
                      "components.DeploymentsList.table.testDeployment": "Test?",
                      "components.DeploymentsList.title": "Deployments",
                      "components.DeploymentsPanel.delete": "Remove deployment",
                      "components.DeploymentsPanel.new": "New Deployment",
                      "components.DeploymentsPanel.search": "Search for deployments",
                      "components.DeploymentsPanel.table.creationDate": "Created",
                      "components.DeploymentsPanel.table.deployedTo": "Deployed to",
                      "components.DeploymentsPanel.table.feedCount": "# of feeds",
                      "components.DeploymentsPanel.table.lastDeployed": "Last deployed",
                      "components.DeploymentsPanel.table.name": "Name",
                      "components.DeploymentsPanel.table.testDeployment": "Test?",
                      "components.DeploymentsPanel.title": "Deployments",
                      "components.EditorFeedSourcePanel.active": "Active",
                      "components.EditorFeedSourcePanel.confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                      "components.EditorFeedSourcePanel.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.EditorFeedSourcePanel.createFromScratch": "Create GTFS from Scratch",
                      "components.EditorFeedSourcePanel.created": "created",
                      "components.EditorFeedSourcePanel.date": "Date",
                      "components.EditorFeedSourcePanel.delete": "Delete",
                      "components.EditorFeedSourcePanel.download": "Download",
                      "components.EditorFeedSourcePanel.feed": "Feed",
                      "components.EditorFeedSourcePanel.help.body.0": "Snapshots are save points you can always revert back to when editing a GTFS feed.",
                      "components.EditorFeedSourcePanel.help.body.1": "A snapshot might represent a work-in-progress, future planning scenario or even different service patterns (e.g., summer schedule markup).",
                      "components.EditorFeedSourcePanel.help.title": "What are snapshots?",
                      "components.EditorFeedSourcePanel.load": "Load for Editing",
                      "components.EditorFeedSourcePanel.loadLatest": "Load latest for editing",
                      "components.EditorFeedSourcePanel.name": "Name",
                      "components.EditorFeedSourcePanel.noSnapshotsExist": "No snapshots currently exist for this feed. Snapshots can be created within the Editor. Click \\"Edit Feed\\" to enter editing mode.",
                      "components.EditorFeedSourcePanel.noVersions": "(No Versions)",
                      "components.EditorFeedSourcePanel.noVersionsExist": "No versions exist for this feed source.",
                      "components.EditorFeedSourcePanel.of": "of",
                      "components.EditorFeedSourcePanel.publish": "Publish",
                      "components.EditorFeedSourcePanel.restore": "Restore",
                      "components.EditorFeedSourcePanel.snapshot": "snapshot",
                      "components.EditorFeedSourcePanel.title": "Snapshots",
                      "components.EditorFeedSourcePanel.version": "Version",
                      "components.FeedInfoPanel.uploadShapefile.body": "Select a zipped shapefile to display on map. Note: this is only for use as a visual aid.",
                      "components.FeedInfoPanel.uploadShapefile.error": "Uploaded file must be a valid zip file (.zip).",
                      "components.FeedInfoPanel.uploadShapefile.title": "Upload route shapefile",
                      "components.FeedSourceAttributes.lastUpdated": "Updated",
                      "components.FeedSourcePanel.search": "Search feeds",
                      "components.FeedSourceTable.comparisonColumn.DEPLOYED": "Deployed Version",
                      "components.FeedSourceTable.comparisonColumn.PUBLISHED": "Published Version",
                      "components.FeedSourceTable.createFirst": "Create first feed source!",
                      "components.FeedSourceTableRow.status.active": "Active",
                      "components.FeedSourceTableRow.status.all": "All",
                      "components.FeedSourceTableRow.status.expired": "Expired",
                      "components.FeedSourceTableRow.status.expiring-within-20-days": "Expiring within 20 days",
                      "components.FeedSourceTableRow.status.expiring-within-5-days": "Expiring within 5 days",
                      "components.FeedSourceTableRow.status.feedNotInDeployment": "Feed not in deployment",
                      "components.FeedSourceTableRow.status.feedNotPublished": "Feed not published",
                      "components.FeedSourceTableRow.status.future": "Future",
                      "components.FeedSourceTableRow.status.no-version": "No version",
                      "components.FeedSourceTableRow.status.same-as-deployed": "Same as Deployed",
                      "components.FeedSourceTableRow.status.same-as-published": "Same as Published",
                      "components.FeedSourceViewer.deploy": "Deploy",
                      "components.FeedSourceViewer.edit": "Edit GTFS",
                      "components.FeedSourceViewer.gtfs": "GTFS",
                      "components.FeedSourceViewer.notesTitle": "Notes",
                      "components.FeedSourceViewer.private": "Private view",
                      "components.FeedSourceViewer.properties.deployable": "Deployable?",
                      "components.FeedSourceViewer.properties.name": "Name",
                      "components.FeedSourceViewer.properties.noneSelected": "(None Selected)",
                      "components.FeedSourceViewer.properties.property": "Property",
                      "components.FeedSourceViewer.properties.public": "Public?",
                      "components.FeedSourceViewer.properties.retrievalMethod.fetchedAutomatically": "Fetched Automatically",
                      "components.FeedSourceViewer.properties.retrievalMethod.manuallyUploaded": "Manually Uploaded",
                      "components.FeedSourceViewer.properties.retrievalMethod.producedInHouse": "Produced In-house",
                      "components.FeedSourceViewer.properties.retrievalMethod.title": "Retrieval Method",
                      "components.FeedSourceViewer.properties.snapshot": "Editor Snapshot",
                      "components.FeedSourceViewer.properties.title": "Settings",
                      "components.FeedSourceViewer.properties.value": "Value",
                      "components.FeedSourceViewer.snapshotsTitle": "Snapshots",
                      "components.FeedSourceViewer.update": "Update",
                      "components.FeedSourceViewer.upload": "Upload",
                      "components.FeedSourceViewer.versions": "Versions",
                      "components.FeedSourceViewer.viewPublic": "View public page",
                      "components.FeedVersionNavigator.confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                      "components.FeedVersionNavigator.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.FeedVersionNavigator.delete": "Delete",
                      "components.FeedVersionNavigator.download": "Download",
                      "components.FeedVersionNavigator.feed": "Feed",
                      "components.FeedVersionNavigator.load": "Load for Editing",
                      "components.FeedVersionNavigator.next": "Next",
                      "components.FeedVersionNavigator.of": "of",
                      "components.FeedVersionNavigator.previous": "Previous",
                      "components.FeedVersionNavigator.version": "Version",
                      "components.FeedVersionTabs.agencyCount": "Agency Count",
                      "components.FeedVersionTabs.routeCount": "Route Count",
                      "components.FeedVersionTabs.stopTimesCount": "Stop time Count",
                      "components.FeedVersionTabs.tripCount": "Trip Count",
                      "components.FeedVersionTabs.validDates": "Valid Dates",
                      "components.FeedVersionViewer.confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                      "components.FeedVersionViewer.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.FeedVersionViewer.delete": "Delete",
                      "components.FeedVersionViewer.download": "Download",
                      "components.FeedVersionViewer.feed": "Feed",
                      "components.FeedVersionViewer.load": "Load",
                      "components.FeedVersionViewer.noVersionsExist": "No versions exist for this feed source.",
                      "components.FeedVersionViewer.status": "Status",
                      "components.FeedVersionViewer.timestamp": "File Timestamp",
                      "components.FeedVersionViewer.version": "version",
                      "components.GeneralSettings.confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                      "components.GeneralSettings.deleteProject": "Delete Project?",
                      "components.GeneralSettings.deployment.buildConfig.elevationBucket.accessKey": "Access Key",
                      "components.GeneralSettings.deployment.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                      "components.GeneralSettings.deployment.buildConfig.elevationBucket.secretKey": "Secret Key",
                      "components.GeneralSettings.deployment.buildConfig.fares": "Fares",
                      "components.GeneralSettings.deployment.buildConfig.fetchElevationUS": "Fetch Elevation",
                      "components.GeneralSettings.deployment.buildConfig.stationTransfers": "Sta. Transfers",
                      "components.GeneralSettings.deployment.buildConfig.subwayAccessTime": "Subway Access Time",
                      "components.GeneralSettings.deployment.buildConfig.title": "Build Config",
                      "components.GeneralSettings.deployment.osm.bounds": "Custom Extract Bounds",
                      "components.GeneralSettings.deployment.osm.custom": "Use Custom Extract Bounds",
                      "components.GeneralSettings.deployment.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                      "components.GeneralSettings.deployment.osm.title": "OSM Extract",
                      "components.GeneralSettings.deployment.otpServers.$index.admin": "Admin access only?",
                      "components.GeneralSettings.deployment.otpServers.$index.delete": "Remove",
                      "components.GeneralSettings.deployment.otpServers.$index.internalUrl": "Internal URLs",
                      "components.GeneralSettings.deployment.otpServers.$index.name": "Name",
                      "components.GeneralSettings.deployment.otpServers.$index.namePlaceholder": "Production",
                      "components.GeneralSettings.deployment.otpServers.$index.publicUrl": "Public URL",
                      "components.GeneralSettings.deployment.otpServers.$index.s3Bucket": "S3 bucket name",
                      "components.GeneralSettings.deployment.otpServers.new": "Add server",
                      "components.GeneralSettings.deployment.otpServers.serverPlaceholder": "Server name",
                      "components.GeneralSettings.deployment.otpServers.title": "Servers",
                      "components.GeneralSettings.deployment.routerConfig.brandingUrlRoot": "Branding URL Root",
                      "components.GeneralSettings.deployment.routerConfig.carDropoffTime": "Car Dropoff Time",
                      "components.GeneralSettings.deployment.routerConfig.numItineraries": "# of itineraries",
                      "components.GeneralSettings.deployment.routerConfig.requestLogFile": "Request log file",
                      "components.GeneralSettings.deployment.routerConfig.stairsReluctance": "Stairs Reluctance",
                      "components.GeneralSettings.deployment.routerConfig.title": "Router Config",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.sourceType": "Source type",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.type": "Type",
                      "components.GeneralSettings.deployment.routerConfig.updaters.$index.url": "URL",
                      "components.GeneralSettings.deployment.routerConfig.updaters.new": "Add updater",
                      "components.GeneralSettings.deployment.routerConfig.updaters.placeholder": "Updater name",
                      "components.GeneralSettings.deployment.routerConfig.updaters.title": "Real-time updaters",
                      "components.GeneralSettings.deployment.routerConfig.walkSpeed": "Walk Speed",
                      "components.GeneralSettings.deployment.title": "Deployment",
                      "components.GeneralSettings.general.location.boundingBox": "Bounding box (W,S,E,N)",
                      "components.GeneralSettings.general.location.defaultLanguage": "Default language",
                      "components.GeneralSettings.general.location.defaultLocation": "Default location (lat, lng)",
                      "components.GeneralSettings.general.location.defaultTimeZone": "Default time zone",
                      "components.GeneralSettings.general.location.title": "Location",
                      "components.GeneralSettings.general.name": "Project name",
                      "components.GeneralSettings.general.title": "General",
                      "components.GeneralSettings.general.updates.autoFetchFeeds": "Auto fetch feed sources?",
                      "components.GeneralSettings.general.updates.title": "Updates",
                      "components.GeneralSettings.rename": "Rename",
                      "components.GeneralSettings.save": "Save",
                      "components.GeneralSettings.title": "Settings",
                      "components.GtfsValidationExplorer.accessibilityValidation": "Accessibility Explorer",
                      "components.GtfsValidationExplorer.table.count": "Count",
                      "components.GtfsValidationExplorer.table.file": "File",
                      "components.GtfsValidationExplorer.table.issue": "Issue",
                      "components.GtfsValidationExplorer.table.priority": "Priority",
                      "components.GtfsValidationExplorer.timeValidation": "Time-based Validation",
                      "components.GtfsValidationExplorer.title": "Validation Explorer",
                      "components.GtfsValidationExplorer.validationIssues": "Validation Issues",
                      "components.GtfsValidationViewer.explorer": "Validation Explorer",
                      "components.GtfsValidationViewer.issues.other": "Other issues",
                      "components.GtfsValidationViewer.issues.routes": "Route issues",
                      "components.GtfsValidationViewer.issues.shapes": "Shape issues",
                      "components.GtfsValidationViewer.issues.stop_times": "Stop times issues",
                      "components.GtfsValidationViewer.issues.stops": "Stop issues",
                      "components.GtfsValidationViewer.issues.trips": "Trip issues",
                      "components.GtfsValidationViewer.noResults": "No validation results to show.",
                      "components.GtfsValidationViewer.title": "Validation Results",
                      "components.LanguageSelect.placeholder": "Select language...",
                      "components.Login.title": "Se connecter",
                      "components.NotesViewer.all": "All Comments",
                      "components.NotesViewer.feedSource": "Feed Source",
                      "components.NotesViewer.feedVersion": "Version",
                      "components.NotesViewer.new": "Post",
                      "components.NotesViewer.none": "No comments.",
                      "components.NotesViewer.postComment": "Post a New Comment",
                      "components.NotesViewer.refresh": "Refresh",
                      "components.NotesViewer.title": "Comments",
                      "components.OrganizationList.new": "Create org",
                      "components.OrganizationList.search": "Search orgs",
                      "components.OrganizationSettings.extensions": "Extensions",
                      "components.OrganizationSettings.logoUrl.label": "Logo URL",
                      "components.OrganizationSettings.logoUrl.placeholder": "http://example.com/logo_30x30.png",
                      "components.OrganizationSettings.name.label": "Name",
                      "components.OrganizationSettings.name.placeholder": "Big City Transit",
                      "components.OrganizationSettings.orgDetails": "Organization details",
                      "components.OrganizationSettings.projects": "Projects",
                      "components.OrganizationSettings.subDetails": "Subscription details",
                      "components.OrganizationSettings.subscriptionBeginDate": "Subscription begins",
                      "components.OrganizationSettings.subscriptionEndDate": "Subscription ends",
                      "components.OrganizationSettings.usageTier.high": "High",
                      "components.OrganizationSettings.usageTier.low": "Low",
                      "components.OrganizationSettings.usageTier.medium": "Medium",
                      "components.ProjectAccessSettings.admin": "Admin",
                      "components.ProjectAccessSettings.cannotFetchFeeds": "Cannot fetch feeds",
                      "components.ProjectAccessSettings.custom": "Custom",
                      "components.ProjectAccessSettings.feeds": "Feed Sources",
                      "components.ProjectAccessSettings.noAccess": "No Access",
                      "components.ProjectAccessSettings.permissions": "Permissions",
                      "components.ProjectAccessSettings.title": "Project Settings for",
                      "components.ProjectFeedListToolbar.comparison.DEPLOYED": "Deployed",
                      "components.ProjectFeedListToolbar.comparison.LATEST": "Latest",
                      "components.ProjectFeedListToolbar.comparison.PUBLISHED": "Published",
                      "components.ProjectFeedListToolbar.deployments": "Deployments",
                      "components.ProjectFeedListToolbar.feeds.createFirst": "Create first feed source!",
                      "components.ProjectFeedListToolbar.feeds.new": "New Feed Source",
                      "components.ProjectFeedListToolbar.feeds.search": "Search by name",
                      "components.ProjectFeedListToolbar.feeds.table.deployable": "Deployable?",
                      "components.ProjectFeedListToolbar.feeds.table.errorCount": "Errors",
                      "components.ProjectFeedListToolbar.feeds.table.lastUpdated": "Updated",
                      "components.ProjectFeedListToolbar.feeds.table.name": "Name",
                      "components.ProjectFeedListToolbar.feeds.table.public": "Public?",
                      "components.ProjectFeedListToolbar.feeds.table.retrievalMethod": "Retrieval Method",
                      "components.ProjectFeedListToolbar.feeds.table.validRange": "Valid Range",
                      "components.ProjectFeedListToolbar.feeds.title": "Feed Sources",
                      "components.ProjectFeedListToolbar.feeds.update": "Fetch all",
                      "components.ProjectFeedListToolbar.filter.active": "Active",
                      "components.ProjectFeedListToolbar.filter.all": "All",
                      "components.ProjectFeedListToolbar.filter.expired": "Expired",
                      "components.ProjectFeedListToolbar.filter.expiring": "Expiring soon",
                      "components.ProjectFeedListToolbar.filter.future": "Future",
                      "components.ProjectFeedListToolbar.makePublic": "Publish public feeds",
                      "components.ProjectFeedListToolbar.mergeFeeds": "Merge all",
                      "components.ProjectFeedListToolbar.settings": "Settings",
                      "components.ProjectFeedListToolbar.sort.alphabetically.asc": "A-Z",
                      "components.ProjectFeedListToolbar.sort.alphabetically.desc": "Z-A",
                      "components.ProjectFeedListToolbar.sort.alphabetically.title": "Alphabetically",
                      "components.ProjectFeedListToolbar.sort.endDate.asc": "Soonest-Latest",
                      "components.ProjectFeedListToolbar.sort.endDate.desc": "Latest-Soonest",
                      "components.ProjectFeedListToolbar.sort.endDate.title": "Expiration Date",
                      "components.ProjectFeedListToolbar.sort.lastUpdated.asc": "Stale-Recent",
                      "components.ProjectFeedListToolbar.sort.lastUpdated.desc": "Recent-Stale",
                      "components.ProjectFeedListToolbar.sort.lastUpdated.title": "Last Update",
                      "components.ProjectFeedListToolbar.sort.numErrors.asc": "Least-Most",
                      "components.ProjectFeedListToolbar.sort.numErrors.desc": "Most-Least",
                      "components.ProjectFeedListToolbar.sort.numErrors.title": "Number of Errors",
                      "components.ProjectFeedListToolbar.sort.startDate.asc": "Soonest-Latest",
                      "components.ProjectFeedListToolbar.sort.startDate.desc": "Latest-Soonest",
                      "components.ProjectFeedListToolbar.sort.startDate.title": "Start Date",
                      "components.ProjectFeedListToolbar.sync.mtc": "Sync from MTC",
                      "components.ProjectFeedListToolbar.sync.transitfeeds": "Sync from transitfeeds",
                      "components.ProjectFeedListToolbar.sync.transitland": "Sync from transit.land",
                      "components.ProjectSettings.deployment.buildConfig.elevationBucket.accessKey": "Access Key",
                      "components.ProjectSettings.deployment.buildConfig.elevationBucket.bucketName": "S3 Bucket Name",
                      "components.ProjectSettings.deployment.buildConfig.elevationBucket.secretKey": "Secret Key",
                      "components.ProjectSettings.deployment.buildConfig.fares": "Fares",
                      "components.ProjectSettings.deployment.buildConfig.fetchElevationUS": "Fetch Elevation",
                      "components.ProjectSettings.deployment.buildConfig.stationTransfers": "Sta. Transfers",
                      "components.ProjectSettings.deployment.buildConfig.subwayAccessTime": "Subway Access Time",
                      "components.ProjectSettings.deployment.buildConfig.title": "Build Config",
                      "components.ProjectSettings.deployment.osm.bounds": "Custom Extract Bounds",
                      "components.ProjectSettings.deployment.osm.custom": "Use Custom Extract Bounds",
                      "components.ProjectSettings.deployment.osm.gtfs": "Use GTFS-Derived Extract Bounds",
                      "components.ProjectSettings.deployment.osm.title": "OSM Extract",
                      "components.ProjectSettings.deployment.otpServers.$index.admin": "Admin access only?",
                      "components.ProjectSettings.deployment.otpServers.$index.delete": "Remove",
                      "components.ProjectSettings.deployment.otpServers.$index.internalUrl": "Internal URLs",
                      "components.ProjectSettings.deployment.otpServers.$index.name": "Name",
                      "components.ProjectSettings.deployment.otpServers.$index.namePlaceholder": "Production",
                      "components.ProjectSettings.deployment.otpServers.$index.publicUrl": "Public URL",
                      "components.ProjectSettings.deployment.otpServers.$index.s3Bucket": "S3 bucket name",
                      "components.ProjectSettings.deployment.otpServers.new": "Add server",
                      "components.ProjectSettings.deployment.otpServers.serverPlaceholder": "Server name",
                      "components.ProjectSettings.deployment.otpServers.title": "Servers",
                      "components.ProjectSettings.deployment.routerConfig.brandingUrlRoot": "Branding URL Root",
                      "components.ProjectSettings.deployment.routerConfig.carDropoffTime": "Car Dropoff Time",
                      "components.ProjectSettings.deployment.routerConfig.numItineraries": "# of itineraries",
                      "components.ProjectSettings.deployment.routerConfig.requestLogFile": "Request log file",
                      "components.ProjectSettings.deployment.routerConfig.stairsReluctance": "Stairs Reluctance",
                      "components.ProjectSettings.deployment.routerConfig.title": "Router Config",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.defaultAgencyId": "Default agency ID",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.frequencySec": "Frequency (in seconds)",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.sourceType": "Source type",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.type": "Type",
                      "components.ProjectSettings.deployment.routerConfig.updaters.$index.url": "URL",
                      "components.ProjectSettings.deployment.routerConfig.updaters.new": "Add updater",
                      "components.ProjectSettings.deployment.routerConfig.updaters.placeholder": "Updater name",
                      "components.ProjectSettings.deployment.routerConfig.updaters.title": "Real-time updaters",
                      "components.ProjectSettings.deployment.routerConfig.walkSpeed": "Walk Speed",
                      "components.ProjectSettings.deployment.title": "Deployment",
                      "components.ProjectSettings.project.cannotFetchFeeds": "Cannot fetch feeds",
                      "components.ProjectSettings.project.feeds": "Feeds",
                      "components.ProjectSettings.project.permissions": "Permissions",
                      "components.ProjectSettings.rename": "Rename",
                      "components.ProjectSettings.save": "Save",
                      "components.ProjectSettings.title": "Settings",
                      "components.ProjectSettingsForm.cancel": "Cancel",
                      "components.ProjectSettingsForm.confirmDelete": "Are you sure you want to delete this project? This action cannot be undone and all feed sources and their versions will be permanently deleted.",
                      "components.ProjectSettingsForm.deleteProject": "Delete Project?",
                      "components.ProjectSettingsForm.fields.location.boundingBox": "Bounding box (W,S,E,N)",
                      "components.ProjectSettingsForm.fields.location.defaultLanguage": "Default language",
                      "components.ProjectSettingsForm.fields.location.defaultLocation": "Default location (lat, lng)",
                      "components.ProjectSettingsForm.fields.location.defaultTimeZone": "Default time zone",
                      "components.ProjectSettingsForm.fields.location.title": "Location",
                      "components.ProjectSettingsForm.fields.name": "Project name",
                      "components.ProjectSettingsForm.fields.title": "General",
                      "components.ProjectSettingsForm.fields.updates.autoFetchFeeds": "Auto fetch feed sources?",
                      "components.ProjectSettingsForm.fields.updates.title": "Updates",
                      "components.ProjectSettingsForm.save": "Save",
                      "components.ProjectSettingsForm.title": "Settings",
                      "components.ProjectViewer.deployments": "Deployments",
                      "components.ProjectViewer.feeds.createFirst": "Create first feed source!",
                      "components.ProjectViewer.feeds.new": "New Feed Source",
                      "components.ProjectViewer.feeds.search": "Search by name",
                      "components.ProjectViewer.feeds.table.deployable": "Deployable?",
                      "components.ProjectViewer.feeds.table.errorCount": "Errors",
                      "components.ProjectViewer.feeds.table.lastUpdated": "Updated",
                      "components.ProjectViewer.feeds.table.name": "Name",
                      "components.ProjectViewer.feeds.table.public": "Public?",
                      "components.ProjectViewer.feeds.table.retrievalMethod": "Retrieval Method",
                      "components.ProjectViewer.feeds.table.validRange": "Valid Range",
                      "components.ProjectViewer.feeds.title": "Feed Sources",
                      "components.ProjectViewer.feeds.update": "Fetch all",
                      "components.ProjectViewer.makePublic": "Publish public feeds",
                      "components.ProjectViewer.mergeFeeds": "Merge all",
                      "components.ProjectViewer.settings": "Settings",
                      "components.ProjectsList.createFirst": "Create my first project",
                      "components.ProjectsList.help.content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                      "components.ProjectsList.help.title": "What's a project?",
                      "components.ProjectsList.new": "New Project",
                      "components.ProjectsList.noProjects": "You currently do not have any projects.",
                      "components.ProjectsList.search": "Search by project name",
                      "components.ProjectsList.table.name": "Project Name",
                      "components.ProjectsList.title": "Projects",
                      "components.PublicFeedsTable.country": "Country",
                      "components.PublicFeedsTable.lastUpdated": "Last Updated",
                      "components.PublicFeedsTable.link": "Link to GTFS",
                      "components.PublicFeedsTable.name": "Feed Name",
                      "components.PublicFeedsTable.region": "Region",
                      "components.PublicFeedsTable.search": "Search",
                      "components.PublicFeedsTable.stateProvince": "State or Province",
                      "components.PublicFeedsViewer.title": "Catalogue",
                      "components.RegionSearch.placeholder": "Search for regions or agencies",
                      "components.ResultTable.affectedIds": "Affected ID(s)",
                      "components.ResultTable.description": "Description",
                      "components.ResultTable.line": "Line",
                      "components.ResultTable.priority": "Priority",
                      "components.ResultTable.problemType": "Problem Type",
                      "components.Sidebar.unknown": "Inconnu",
                      "components.SnapshotItem.active": "Active",
                      "components.SnapshotItem.confirmDelete": "This will permanently delete this snapshot. Any data saved here cannot be recovered. Are you sure you want to continue?",
                      "components.SnapshotItem.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.SnapshotItem.createFromScratch": "Create GTFS from Scratch",
                      "components.SnapshotItem.created": "created",
                      "components.SnapshotItem.date": "Date",
                      "components.SnapshotItem.delete": "Delete",
                      "components.SnapshotItem.download": "Download",
                      "components.SnapshotItem.feed": "Feed",
                      "components.SnapshotItem.load": "Load for Editing",
                      "components.SnapshotItem.loadLatest": "Load latest for editing",
                      "components.SnapshotItem.name": "Name",
                      "components.SnapshotItem.noVersions": "(No Versions)",
                      "components.SnapshotItem.noVersionsExist": "No versions exist for this feed source.",
                      "components.SnapshotItem.of": "of",
                      "components.SnapshotItem.publish": "Publish",
                      "components.SnapshotItem.restore": "Restore",
                      "components.SnapshotItem.snapshot": "snapshot",
                      "components.SnapshotItem.title": "Snapshots",
                      "components.SnapshotItem.version": "Version",
                      "components.StarButton.star": "Star",
                      "components.StarButton.unstar": "Unstar",
                      "components.TimetableHelpModal.shortcuts.modify.desc.0": "Delete selected trip(s)",
                      "components.TimetableHelpModal.shortcuts.modify.desc.1": "New trip",
                      "components.TimetableHelpModal.shortcuts.modify.desc.2": "Clone selected trip(s)",
                      "components.TimetableHelpModal.shortcuts.modify.desc.3": "Copy time value from adjacent cell (the cell immediately to the left)",
                      "components.TimetableHelpModal.shortcuts.modify.desc.4": "Copy value from cell directly above",
                      "components.TimetableHelpModal.shortcuts.modify.title": "Modify trips",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.0": "Previous/next trip",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.1": "Previous/next column",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.2": "Select trip",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.3": "Select all trips",
                      "components.TimetableHelpModal.shortcuts.navigate.desc.4": "Deselect all trips",
                      "components.TimetableHelpModal.shortcuts.navigate.title": "Navigating and selecting trips",
                      "components.TimetableHelpModal.shortcuts.offset.desc.0": "Offset selected trips' stop times by adding offset time",
                      "components.TimetableHelpModal.shortcuts.offset.desc.1": "Offset selected trips' stop times by subtracting offset time",
                      "components.TimetableHelpModal.shortcuts.offset.desc.2": "Offset only active cell's time by adding offset time",
                      "components.TimetableHelpModal.shortcuts.offset.desc.3": "Offset only active cell's time by subtracting offset time",
                      "components.TimetableHelpModal.shortcuts.offset.desc.4": "Decrease offset time by 1 minute",
                      "components.TimetableHelpModal.shortcuts.offset.desc.5": "Decrease offset time by 10 minutes",
                      "components.TimetableHelpModal.shortcuts.offset.desc.6": "Increase offset time by 1 minute",
                      "components.TimetableHelpModal.shortcuts.offset.desc.7": "Increase offset time by 10 minutes",
                      "components.TimetableHelpModal.shortcuts.offset.title": "Offsetting times",
                      "components.TimetableHelpModal.title": "Timetable editor keyboard shortcuts",
                      "components.TimezoneSelect.placeholder": "Select timezone...",
                      "components.UserAccount.account.title": "Account",
                      "components.UserAccount.billing.title": "Billing",
                      "components.UserAccount.notifications.methods": "Notification methods",
                      "components.UserAccount.notifications.subscriptions": "Your subscriptions",
                      "components.UserAccount.notifications.title": "Notifications",
                      "components.UserAccount.notifications.unsubscribeAll": "Unsubscribe from all",
                      "components.UserAccount.organizationSettings": "Organization settings",
                      "components.UserAccount.organizations.title": "Organizations",
                      "components.UserAccount.personalSettings": "Personal settings",
                      "components.UserAccount.profile.profileInformation": "Profile information",
                      "components.UserAccount.profile.title": "Profile",
                      "components.UserAccount.title": "My settings",
                      "components.UserAdmin.noAccess": "You do not have sufficient user privileges to access this area.",
                      "components.UserAdmin.title": "Administration",
                      "components.UserHomePage.createFirst": "Create my first project",
                      "components.UserHomePage.help.content": "A project is used to group GTFS feeds. For example, the feeds in a project may be in the same region or they may collectively define a planning scenario.",
                      "components.UserHomePage.help.title": "What's a project?",
                      "components.UserHomePage.new": "New Project",
                      "components.UserHomePage.noProjects": "You currently do not have any projects.",
                      "components.UserHomePage.table.name": "Project Name",
                      "components.UserHomePage.title": "Projects",
                      "components.UserList.filterByOrg": "Filter by org.",
                      "components.UserList.of": "of",
                      "components.UserList.search": "Search by username",
                      "components.UserList.showing": "Showing Users",
                      "components.UserList.title": "User Management",
                      "components.UserRow.appAdmin": "App admin",
                      "components.UserRow.cancel": "Cancel",
                      "components.UserRow.delete": "Delete",
                      "components.UserRow.deleteConfirm": "Are you sure you want to permanently delete this user?",
                      "components.UserRow.edit": "Edit",
                      "components.UserRow.orgAdmin": "Org admin",
                      "components.UserRow.save": "Save",
                      "components.UserSettings.admin.description": "Application administrators have full access to all projects.",
                      "components.UserSettings.admin.title": "Application Admininistrator",
                      "components.UserSettings.application": "Application Settings",
                      "components.UserSettings.cancel": "Cancel",
                      "components.UserSettings.delete": "Delete",
                      "components.UserSettings.edit": "Edit",
                      "components.UserSettings.org.admin": "Organization administrator",
                      "components.UserSettings.org.billing": "Billing admin",
                      "components.UserSettings.org.description": "Organization administrators have full access to projects within the organization.",
                      "components.UserSettings.project.admin": "Admin",
                      "components.UserSettings.project.custom": "Custom",
                      "components.UserSettings.project.noAccess": "No Access",
                      "components.UserSettings.save": "Save",
                      "components.VersionButtonToolbar.confirmDelete": "Are you sure you want to delete this version? This cannot be undone.",
                      "components.VersionButtonToolbar.confirmLoad": "This will override all active GTFS Editor data for this Feed Source with the data from this version. If there is unsaved work in the Editor you want to keep, you must snapshot the current Editor data first. Are you sure you want to continue?",
                      "components.VersionButtonToolbar.delete": "Delete",
                      "components.VersionButtonToolbar.download": "Download",
                      "components.VersionButtonToolbar.feed": "Feed",
                      "components.VersionButtonToolbar.load": "Load",
                      "components.VersionButtonToolbar.noVersionsExist": "No versions exist for this feed source.",
                      "components.VersionButtonToolbar.status": "Status",
                      "components.VersionButtonToolbar.timestamp": "File Timestamp",
                      "components.VersionButtonToolbar.version": "version",
                      "components.WatchButton.unwatch": "Unwatch",
                      "components.WatchButton.watch": "Watch",
                    },
                  ],
                }
              }
              logout={[Function]}
              projects={
                Object {
                  "active": "mock-project-id",
                  "all": Array [
                    Object {
                      "autoFetchFeeds": true,
                      "autoFetchHour": 0,
                      "autoFetchMinute": 0,
                      "bounds": null,
                      "buildConfig": Object {
                        "fares": null,
                        "fetchElevationUS": null,
                        "stationTransfers": null,
                        "subwayAccessTime": null,
                      },
                      "dateCreated": 1526305321824,
                      "defaultTimeZone": null,
                      "deployments": Array [],
                      "feedSources": Array [],
                      "id": "mock-project-id",
                      "lastUpdated": 1553236399556,
                      "name": "mock-project",
                      "organizationId": null,
                      "otpServers": Array [],
                      "pinnedDeploymentId": null,
                      "routerConfig": Object {
                        "carDropoffTime": null,
                        "numItineraries": null,
                        "requestLogFile": null,
                        "stairsReluctance": null,
                        "updaters": null,
                        "walkSpeed": null,
                      },
                      "useCustomOsmBounds": false,
                      "user": null,
                    },
                  ],
                  "filter": Object {
                    "feedSourceTableComparisonColumn": null,
                    "feedSourceTableFilterCountStrategy": "LATEST",
                    "filter": null,
                    "searchText": null,
                  },
                  "isFetching": false,
                  "sort": "alphabetically-asc",
                }
              }
              removeRetiredJob={[Function]}
              revokeToken={[Function]}
              setJobMonitorVisible={[Function]}
              setSidebarExpanded={[Function]}
              setTutorialHidden={[Function]}
              startJobMonitor={[Function]}
              user={
                Object {
                  "isCheckingLogin": false,
                  "permissions": UserPermissions {
                    "appPermissionLookup": Object {
                      "administer-application": Object {
                        "type": "administer-application",
                      },
                    },
                    "orgPermissionLookup": Object {},
                    "organizationLookup": Object {},
                    "projectLookup": Object {},
                  },
                  "profile": Object {
                    "app_metadata": Object {
                      "datatools": Array [
                        Object {
                          "client_id": "mock-client-id",
                          "organizations": Array [],
                          "permissions": Array [
                            Object {
                              "type": "administer-application",
                            },
                          ],
                          "projects": Array [],
                          "subscriptions": Array [],
                        },
                      ],
                    },
                    "clientID": "mock-client-id",
                    "created_at": "2016-03-04T18:59:22.569Z",
                    "email": "mock-user@conveyal.com",
                    "email_verified": true,
                    "identities": Array [
                      Object {
                        "connection": "Username-Password-Authentication",
                        "isSocial": false,
                        "provider": "auth0",
                        "user_id": "12345",
                      },
                    ],
                    "jti": "gibberish",
                    "last_password_reset": "2017-07-13T13:58:01.021Z",
                    "name": "mock-user@conveyal.com",
                    "nickname": "mock-user",
                    "persistent": Object {},
                    "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
                    "sub": "auth0|12345",
                    "updated_at": "2019-03-21T19:05:30.180Z",
                    "user_id": "auth0|12345",
                    "user_metadata": Object {
                      "datatools": Array [
                        Object {
                          "client_id": "mock-client-id",
                          "editor": Object {
                            "map_id": "mapbox.streets",
                          },
                          "hideTutorial": true,
                          "sidebarExpanded": false,
                        },
                      ],
                      "lang": "en",
                    },
                  },
                  "recentActivity": null,
                  "redirectOnSuccess": null,
                  "subscriptions": UserSubscriptions {
                    "subscriptionLookup": Object {},
                  },
                  "token": "mock-token",
                }
              }
              userPicture="https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png"
            >
              <div
                className="Sidebar"
              >
                <Uncontrolled(Navbar)
                  bsStyle="default"
                  inverse={true}
                  style={
                    Object {
                      "minHeight": "500px",
                      "width": 130,
                    }
                  }
                >
                  <Navbar
                    bsClass="navbar"
                    bsStyle="default"
                    collapseOnSelect={false}
                    componentClass="nav"
                    fixedBottom={false}
                    fixedTop={false}
                    fluid={false}
                    inverse={true}
                    onToggle={[Function]}
                    staticTop={false}
                    style={
                      Object {
                        "minHeight": "500px",
                        "width": 130,
                      }
                    }
                  >
                    <nav
                      className="navbar navbar-inverse"
                      style={
                        Object {
                          "minHeight": "500px",
                          "width": 130,
                        }
                      }
                    >
                      <Grid
                        bsClass="container"
                        componentClass="div"
                        fluid={false}
                      >
                        <div
                          className="container"
                        >
                          <Brand
                            expanded={true}
                          >
                            <Link
                              onlyActiveOnIndex={false}
                              style={Object {}}
                              to="/home"
                            >
                              <a
                                onClick={[Function]}
                                style={Object {}}
                              >
                                <div
                                  className="LogoContainer"
                                >
                                  <div
                                    className="Logo"
                                  />
                                  <div
                                    className="LogoLabel"
                                  >
                                    GTFS Data
                                    <br />
                                    Manager
                                  </div>
                                  <div
                                    className="clearfix"
                                  />
                                </div>
                              </a>
                            </Link>
                          </Brand>
                          <div
                            className="TopNav"
                          >
                            <Connect(SidebarNavItem)
                              active={false}
                              icon="home"
                              label="Home"
                              link="/home"
                            >
                              <SidebarNavItem
                                active={false}
                                expanded={true}
                                icon="home"
                                label="Home"
                                link="/home"
                              >
                                <Link
                                  onlyActiveOnIndex={false}
                                  style={
                                    Object {
                                      "textDecoration": "none",
                                    }
                                  }
                                  to="/home"
                                >
                                  <a
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "textDecoration": "none",
                                      }
                                    }
                                  >
                                    <div
                                      onClick={false}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(0,0,0,0)",
                                          "borderLeft": "4px solid rgba(0,0,0,0)",
                                          "color": "#ccc",
                                          "cursor": "pointer",
                                          "marginBottom": 5,
                                          "marginLeft": -15,
                                          "marginRight": 0,
                                          "marginTop": 5,
                                          "paddingBottom": 10,
                                          "paddingLeft": 10,
                                          "paddingRight": 10,
                                          "paddingTop": 10,
                                          "textDecoration": "none",
                                        }
                                      }
                                    >
                                      <NavIcon
                                        icon="home"
                                      >
                                        <div
                                          className="SidebarNavItemIcon"
                                        >
                                          <Icon
                                            className="fa-lg"
                                            size="lg"
                                            type="home"
                                          >
                                            <i
                                              className="fa fa-home fa-fw fa-lg"
                                              size="lg"
                                            />
                                          </Icon>
                                        </div>
                                      </NavIcon>
                                      <div
                                        className="sidebar-nav-label"
                                      >
                                        Home
                                      </div>
                                      <div
                                        style={
                                          Object {
                                            "clear": "both",
                                          }
                                        }
                                      />
                                    </div>
                                  </a>
                                </Link>
                              </SidebarNavItem>
                            </Connect(SidebarNavItem)>
                          </div>
                          <div
                            className="BottomNav"
                          >
                            <SidebarNavItem
                              expanded={true}
                              finished={false}
                              icon="bell"
                              keyName="job"
                              label="Server jobs"
                              loading={false}
                              onClick={[Function]}
                            >
                              <div
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "borderLeft": "4px solid rgba(0,0,0,0)",
                                    "color": "#ccc",
                                    "cursor": "pointer",
                                    "marginBottom": 5,
                                    "marginLeft": -15,
                                    "marginRight": 0,
                                    "marginTop": 5,
                                    "paddingBottom": 10,
                                    "paddingLeft": 10,
                                    "paddingRight": 10,
                                    "paddingTop": 10,
                                    "textDecoration": "none",
                                  }
                                }
                              >
                                <NavIcon
                                  icon="bell"
                                  loading={false}
                                >
                                  <div
                                    className="SidebarNavItemIcon"
                                  >
                                    <Icon
                                      className="fa-lg"
                                      size="lg"
                                      type="bell"
                                    >
                                      <i
                                        className="fa fa-bell fa-fw fa-lg"
                                        size="lg"
                                      />
                                    </Icon>
                                  </div>
                                </NavIcon>
                                <div
                                  className="sidebar-nav-label"
                                >
                                  Server jobs
                                </div>
                                <div
                                  style={
                                    Object {
                                      "clear": "both",
                                    }
                                  }
                                />
                              </div>
                            </SidebarNavItem>
                            <SidebarNavItem
                              expanded={true}
                              icon="user"
                              keyName="user"
                              label="Account"
                              onClick={[Function]}
                            >
                              <div
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "borderLeft": "4px solid rgba(0,0,0,0)",
                                    "color": "#ccc",
                                    "cursor": "pointer",
                                    "marginBottom": 5,
                                    "marginLeft": -15,
                                    "marginRight": 0,
                                    "marginTop": 5,
                                    "paddingBottom": 10,
                                    "paddingLeft": 10,
                                    "paddingRight": 10,
                                    "paddingTop": 10,
                                    "textDecoration": "none",
                                  }
                                }
                              >
                                <NavIcon
                                  icon="user"
                                >
                                  <div
                                    className="SidebarNavItemIcon"
                                  >
                                    <Icon
                                      className="fa-lg"
                                      size="lg"
                                      type="user"
                                    >
                                      <i
                                        className="fa fa-user fa-fw fa-lg"
                                        size="lg"
                                      />
                                    </Icon>
                                  </div>
                                </NavIcon>
                                <div
                                  className="sidebar-nav-label"
                                >
                                  Account
                                </div>
                                <div
                                  style={
                                    Object {
                                      "clear": "both",
                                    }
                                  }
                                />
                              </div>
                            </SidebarNavItem>
                            <SidebarNavItem
                              expanded={true}
                              icon="gear"
                              keyName="help"
                              label="Settings"
                              onClick={[Function]}
                            >
                              <div
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "borderLeft": "4px solid rgba(0,0,0,0)",
                                    "color": "#ccc",
                                    "cursor": "pointer",
                                    "marginBottom": 5,
                                    "marginLeft": -15,
                                    "marginRight": 0,
                                    "marginTop": 5,
                                    "paddingBottom": 10,
                                    "paddingLeft": 10,
                                    "paddingRight": 10,
                                    "paddingTop": 10,
                                    "textDecoration": "none",
                                  }
                                }
                              >
                                <NavIcon
                                  icon="gear"
                                >
                                  <div
                                    className="SidebarNavItemIcon"
                                  >
                                    <Icon
                                      className="fa-lg"
                                      size="lg"
                                      type="gear"
                                    >
                                      <i
                                        className="fa fa-gear fa-fw fa-lg"
                                        size="lg"
                                      />
                                    </Icon>
                                  </div>
                                </NavIcon>
                                <div
                                  className="sidebar-nav-label"
                                >
                                  Settings
                                </div>
                                <div
                                  style={
                                    Object {
                                      "clear": "both",
                                    }
                                  }
                                />
                              </div>
                            </SidebarNavItem>
                          </div>
                        </div>
                      </Grid>
                    </nav>
                  </Navbar>
                </Uncontrolled(Navbar)>
                <JobMonitor
                  close={[Function]}
                  expanded={true}
                  jobMonitor={
                    Object {
                      "jobs": Array [],
                      "retired": Array [],
                      "timer": null,
                      "visible": false,
                    }
                  }
                  removeRetiredJob={[Function]}
                  visible={false}
                >
                  <SidebarPopover
                    close={[Function]}
                    expanded={true}
                    fixedHeight={300}
                    jobMonitor={
                      Object {
                        "jobs": Array [],
                        "retired": Array [],
                        "timer": null,
                        "visible": false,
                      }
                    }
                    minMarginBottom={75}
                    removeRetiredJob={[Function]}
                    title="Server Jobs"
                    visible={false}
                  >
                    <Popover
                      arrowOffsetTop={15}
                      bsClass="popover"
                      id="ptest"
                      placement="right"
                      style={
                        Object {
                          "height": 300,
                          "marginLeft": 140,
                          "maxWidth": 276,
                          "position": "fixed",
                          "top": 10,
                          "visibility": "hidden",
                          "width": 276,
                        }
                      }
                      title={
                        <div>
                          <span>
                            Server Jobs
                          </span>
                          <Icon
                            className="pull-right"
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                            type="remove"
                          />
                        </div>
                      }
                    >
                      <div
                        className="popover right"
                        id="ptest"
                        role="tooltip"
                        style={
                          Object {
                            "display": "block",
                            "height": 300,
                            "left": undefined,
                            "marginLeft": 140,
                            "maxWidth": 276,
                            "position": "fixed",
                            "top": 10,
                            "visibility": "hidden",
                            "width": 276,
                          }
                        }
                      >
                        <div
                          className="arrow"
                          style={
                            Object {
                              "left": undefined,
                              "top": 15,
                            }
                          }
                        />
                        <h3
                          className="popover-title"
                        >
                          <div>
                            <span>
                              Server Jobs
                            </span>
                            <Icon
                              className="pull-right"
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                              type="remove"
                            >
                              <i
                                className="fa fa-remove fa-fw pull-right"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "cursor": "pointer",
                                  }
                                }
                              />
                            </Icon>
                          </div>
                        </h3>
                        <div
                          className="popover-content"
                        >
                          <div
                            className="job-monitor"
                          >
                            <div
                              className="job-list"
                            >
                               
                              <ul
                                className="list-unstyled"
                              />
                            </div>
                            <div
                              style={
                                Object {
                                  "marginTop": 8,
                                }
                              }
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsSize="small"
                                bsStyle="default"
                                data-test-id="clear-completed-jobs-button"
                                disabled={true}
                                onClick={[Function]}
                                style={
                                  Object {
                                    "float": "right",
                                  }
                                }
                              >
                                <button
                                  className="btn btn-sm btn-default"
                                  data-test-id="clear-completed-jobs-button"
                                  disabled={true}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "float": "right",
                                    }
                                  }
                                  type="button"
                                >
                                  <Icon
                                    type="times-circle"
                                  >
                                    <i
                                      className="fa fa-times-circle fa-fw "
                                    />
                                  </Icon>
                                   Clear completed
                                </button>
                              </Button>
                              <div
                                style={
                                  Object {
                                    "fontSize": 13,
                                    "paddingTop": 6,
                                  }
                                }
                              >
                                <span
                                  data-test-id="possibly-active-jobs"
                                >
                                  No active jobs
                                </span>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </Popover>
                  </SidebarPopover>
                </JobMonitor>
                <SidebarPopover
                  close={[Function]}
                  expanded={true}
                  title="mock-user@conveyal.com"
                  visible={false}
                >
                  <Popover
                    arrowOffsetTop={15}
                    bsClass="popover"
                    id="ptest"
                    placement="right"
                    style={
                      Object {
                        "height": undefined,
                        "marginLeft": 140,
                        "maxWidth": 276,
                        "position": "fixed",
                        "top": 10,
                        "visibility": "hidden",
                        "width": 276,
                      }
                    }
                    title={
                      <div>
                        <span>
                          mock-user@conveyal.com
                        </span>
                        <Icon
                          className="pull-right"
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                          type="remove"
                        />
                      </div>
                    }
                  >
                    <div
                      className="popover right"
                      id="ptest"
                      role="tooltip"
                      style={
                        Object {
                          "display": "block",
                          "height": undefined,
                          "left": undefined,
                          "marginLeft": 140,
                          "maxWidth": 276,
                          "position": "fixed",
                          "top": 10,
                          "visibility": "hidden",
                          "width": 276,
                        }
                      }
                    >
                      <div
                        className="arrow"
                        style={
                          Object {
                            "left": undefined,
                            "top": 15,
                          }
                        }
                      />
                      <h3
                        className="popover-title"
                      >
                        <div>
                          <span>
                            mock-user@conveyal.com
                          </span>
                          <Icon
                            className="pull-right"
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                            type="remove"
                          >
                            <i
                              className="fa fa-remove fa-fw pull-right"
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            />
                          </Icon>
                        </div>
                      </h3>
                      <div
                        className="popover-content"
                      >
                        <UserButtons
                          logout={[Function]}
                          user={
                            Object {
                              "isCheckingLogin": false,
                              "permissions": UserPermissions {
                                "appPermissionLookup": Object {
                                  "administer-application": Object {
                                    "type": "administer-application",
                                  },
                                },
                                "orgPermissionLookup": Object {},
                                "organizationLookup": Object {},
                                "projectLookup": Object {},
                              },
                              "profile": Object {
                                "app_metadata": Object {
                                  "datatools": Array [
                                    Object {
                                      "client_id": "mock-client-id",
                                      "organizations": Array [],
                                      "permissions": Array [
                                        Object {
                                          "type": "administer-application",
                                        },
                                      ],
                                      "projects": Array [],
                                      "subscriptions": Array [],
                                    },
                                  ],
                                },
                                "clientID": "mock-client-id",
                                "created_at": "2016-03-04T18:59:22.569Z",
                                "email": "mock-user@conveyal.com",
                                "email_verified": true,
                                "identities": Array [
                                  Object {
                                    "connection": "Username-Password-Authentication",
                                    "isSocial": false,
                                    "provider": "auth0",
                                    "user_id": "12345",
                                  },
                                ],
                                "jti": "gibberish",
                                "last_password_reset": "2017-07-13T13:58:01.021Z",
                                "name": "mock-user@conveyal.com",
                                "nickname": "mock-user",
                                "persistent": Object {},
                                "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
                                "sub": "auth0|12345",
                                "updated_at": "2019-03-21T19:05:30.180Z",
                                "user_id": "auth0|12345",
                                "user_metadata": Object {
                                  "datatools": Array [
                                    Object {
                                      "client_id": "mock-client-id",
                                      "editor": Object {
                                        "map_id": "mapbox.streets",
                                      },
                                      "hideTutorial": true,
                                      "sidebarExpanded": false,
                                    },
                                  ],
                                  "lang": "en",
                                },
                              },
                              "recentActivity": null,
                              "redirectOnSuccess": null,
                              "subscriptions": UserSubscriptions {
                                "subscriptionLookup": Object {},
                              },
                              "token": "mock-token",
                            }
                          }
                        >
                          <ButtonToolbar
                            bsClass="btn-toolbar"
                          >
                            <div
                              className="btn-toolbar"
                              role="toolbar"
                            >
                              <LinkContainer
                                action="push"
                                onlyActiveOnIndex={false}
                                to="/settings/profile"
                              >
                                <Button
                                  action="push"
                                  active={false}
                                  block={false}
                                  bsClass="btn"
                                  bsSize="small"
                                  bsStyle="default"
                                  disabled={false}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "margin": 2,
                                    }
                                  }
                                >
                                  <button
                                    action="push"
                                    className="btn btn-sm btn-default"
                                    disabled={false}
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "margin": 2,
                                      }
                                    }
                                    type="button"
                                  >
                                    <Icon
                                      type="user"
                                    >
                                      <i
                                        className="fa fa-user fa-fw "
                                      />
                                    </Icon>
                                     My account
                                  </button>
                                </Button>
                              </LinkContainer>
                              <LinkContainer
                                action="push"
                                onlyActiveOnIndex={false}
                                to="/admin/users"
                              >
                                <Button
                                  action="push"
                                  active={false}
                                  block={false}
                                  bsClass="btn"
                                  bsSize="small"
                                  bsStyle="default"
                                  disabled={false}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "margin": 2,
                                    }
                                  }
                                >
                                  <button
                                    action="push"
                                    className="btn btn-sm btn-default"
                                    disabled={false}
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "margin": 2,
                                      }
                                    }
                                    type="button"
                                  >
                                    <Icon
                                      type="cog"
                                    >
                                      <i
                                        className="fa fa-cog fa-fw "
                                      />
                                    </Icon>
                                     Admin
                                  </button>
                                </Button>
                              </LinkContainer>
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsSize="small"
                                bsStyle="primary"
                                disabled={false}
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 2,
                                  }
                                }
                              >
                                <button
                                  className="btn btn-sm btn-primary"
                                  disabled={false}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "margin": 2,
                                    }
                                  }
                                  type="button"
                                >
                                  <Icon
                                    type="sign-out"
                                  >
                                    <i
                                      className="fa fa-sign-out fa-fw "
                                    />
                                  </Icon>
                                   Log out
                                </button>
                              </Button>
                            </div>
                          </ButtonToolbar>
                        </UserButtons>
                      </div>
                    </div>
                  </Popover>
                </SidebarPopover>
                <SidebarPopover
                  close={[Function]}
                  expanded={true}
                  onMount={[Function]}
                  title="Settings"
                  visible={false}
                  width={300}
                >
                  <Popover
                    arrowOffsetTop={15}
                    bsClass="popover"
                    id="ptest"
                    placement="right"
                    style={
                      Object {
                        "height": undefined,
                        "marginLeft": 140,
                        "maxWidth": 300,
                        "position": "fixed",
                        "top": 10,
                        "visibility": "hidden",
                        "width": 300,
                      }
                    }
                    title={
                      <div>
                        <span>
                          Settings
                        </span>
                        <Icon
                          className="pull-right"
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                          type="remove"
                        />
                      </div>
                    }
                  >
                    <div
                      className="popover right"
                      id="ptest"
                      role="tooltip"
                      style={
                        Object {
                          "display": "block",
                          "height": undefined,
                          "left": undefined,
                          "marginLeft": 140,
                          "maxWidth": 300,
                          "position": "fixed",
                          "top": 10,
                          "visibility": "hidden",
                          "width": 300,
                        }
                      }
                    >
                      <div
                        className="arrow"
                        style={
                          Object {
                            "left": undefined,
                            "top": 15,
                          }
                        }
                      />
                      <h3
                        className="popover-title"
                      >
                        <div>
                          <span>
                            Settings
                          </span>
                          <Icon
                            className="pull-right"
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                            type="remove"
                          >
                            <i
                              className="fa fa-remove fa-fw pull-right"
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            />
                          </Icon>
                        </div>
                      </h3>
                      <div
                        className="popover-content"
                      >
                        <div>
                          <Checkbox
                            bsClass="checkbox"
                            checked={true}
                            disabled={false}
                            inline={false}
                            onChange={[Function]}
                          >
                            <div
                              className="checkbox"
                            >
                              <label>
                                <input
                                  checked={true}
                                  disabled={false}
                                  onChange={[Function]}
                                  type="checkbox"
                                />
                                Show Sidebar Labels
                              </label>
                            </div>
                          </Checkbox>
                          <Checkbox
                            bsClass="checkbox"
                            checked={false}
                            disabled={false}
                            inline={false}
                            onChange={[Function]}
                          >
                            <div
                              className="checkbox"
                            >
                              <label>
                                <input
                                  checked={false}
                                  disabled={false}
                                  onChange={[Function]}
                                  type="checkbox"
                                />
                                Hide editor tutorial
                              </label>
                            </div>
                          </Checkbox>
                          <div
                            className="app-info"
                          >
                            <h5>
                              About this app
                            </h5>
                            <table>
                              <tbody>
                                <tr>
                                  <td>
                                    UI Version:
                                  </td>
                                  <td>
                                    Unknown
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    UI deployed at:
                                  </td>
                                  <td>
                                    Unknown
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    Server version:
                                  </td>
                                  <td>
                                    Unknown
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>
                      </div>
                    </div>
                  </Popover>
                </SidebarPopover>
              </div>
            </Sidebar>
          </Connect(Sidebar)>
          <Connect(Content)>
            <Content
              sidebarExpanded={true}
            >
              <div
                style={
                  Object {
                    "bottom": 0,
                    "left": 130,
                    "overflowX": "hidden",
                    "overflowY": "scroll",
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "marginBottom": "-140px",
                      "minHeight": "100%",
                      "padding": "20px",
                      "paddingBottom": "140px",
                      "position": "relative",
                    }
                  }
                >
                  <Grid
                    bsClass="container"
                    componentClass="div"
                    fluid={true}
                  >
                    <div
                      className="container-fluid"
                    >
                      <Row
                        bsClass="row"
                        className="project-header"
                        componentClass="div"
                      >
                        <div
                          className="project-header row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={12}
                          >
                            <div
                              className="col-xs-12"
                            >
                              <h3>
                                <Icon
                                  className="icon-link"
                                  type="folder-open-o"
                                >
                                  <i
                                    className="fa fa-folder-open-o fa-fw icon-link"
                                  />
                                </Icon>
                                <Link
                                  onlyActiveOnIndex={false}
                                  style={Object {}}
                                  to="/project/mock-project-id"
                                >
                                  <a
                                    onClick={[Function]}
                                    style={Object {}}
                                  >
                                    mock-project
                                  </a>
                                </Link>
                                <ButtonToolbar
                                  bsClass="btn-toolbar"
                                  className="pull-right"
                                >
                                  <div
                                    className="pull-right btn-toolbar"
                                    role="toolbar"
                                  />
                                </ButtonToolbar>
                              </h3>
                              <ul
                                className="list-unstyled list-inline small"
                                style={
                                  Object {
                                    "marginBottom": "0px",
                                  }
                                }
                              >
                                <li>
                                  <Icon
                                    type="map-marker"
                                  >
                                    <i
                                      className="fa fa-map-marker fa-fw "
                                    />
                                  </Icon>
                                  n/a
                                </li>
                                <li>
                                  <Icon
                                    type="cloud-download"
                                  >
                                    <i
                                      className="fa fa-cloud-download fa-fw "
                                    />
                                  </Icon>
                                   
                                  0:00
                                </li>
                              </ul>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Uncontrolled(Tabs)
                        activeKey="sources"
                        id="project-viewer-tabs"
                        onSelect={[Function]}
                      >
                        <Tabs
                          activeKey="sources"
                          animation={true}
                          bsClass="tab"
                          bsStyle="tabs"
                          id="project-viewer-tabs"
                          mountOnEnter={false}
                          onSelect={[Function]}
                          unmountOnExit={false}
                        >
                          <TabContainer
                            activeKey="sources"
                            id="project-viewer-tabs"
                            onSelect={[Function]}
                          >
                            <div
                              id="project-viewer-tabs"
                            >
                              <Nav
                                bsClass="nav"
                                bsStyle="tabs"
                                justified={false}
                                pullLeft={false}
                                pullRight={false}
                                role="tablist"
                                stacked={false}
                              >
                                <ul
                                  className="nav nav-tabs"
                                  role="tablist"
                                >
                                  <NavItem
                                    active={true}
                                    activeKey="sources"
                                    aria-controls="project-viewer-tabs-pane-sources"
                                    disabled={false}
                                    eventKey="sources"
                                    id="project-viewer-tabs-tab-sources"
                                    key=".$.0"
                                    onKeyDown={[Function]}
                                    onSelect={[Function]}
                                    role="tab"
                                  >
                                    <li
                                      className="active"
                                      role="presentation"
                                    >
                                      <SafeAnchor
                                        aria-controls="project-viewer-tabs-pane-sources"
                                        aria-selected={true}
                                        componentClass="a"
                                        disabled={false}
                                        id="project-viewer-tabs-tab-sources"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="tab"
                                      >
                                        <a
                                          aria-controls="project-viewer-tabs-pane-sources"
                                          aria-selected={true}
                                          href="#"
                                          id="project-viewer-tabs-tab-sources"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="tab"
                                        >
                                          <span>
                                            <Glyphicon
                                              bsClass="glyphicon"
                                              className="icon-link"
                                              glyph="list"
                                            >
                                              <span
                                                className="icon-link glyphicon glyphicon-list"
                                              />
                                            </Glyphicon>
                                            <span
                                              className="hidden-xs"
                                            >
                                              Feed Sources
                                            </span>
                                          </span>
                                        </a>
                                      </SafeAnchor>
                                    </li>
                                  </NavItem>
                                  <NavItem
                                    active={false}
                                    activeKey="sources"
                                    aria-controls="project-viewer-tabs-pane-deployments"
                                    disabled={false}
                                    eventKey="deployments"
                                    id="project-viewer-tabs-tab-deployments"
                                    key=".$.1"
                                    onKeyDown={[Function]}
                                    onSelect={[Function]}
                                    role="tab"
                                    tabIndex={-1}
                                  >
                                    <li
                                      className=""
                                      role="presentation"
                                    >
                                      <SafeAnchor
                                        aria-controls="project-viewer-tabs-pane-deployments"
                                        aria-selected={false}
                                        componentClass="a"
                                        disabled={false}
                                        id="project-viewer-tabs-tab-deployments"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="tab"
                                        tabIndex={-1}
                                      >
                                        <a
                                          aria-controls="project-viewer-tabs-pane-deployments"
                                          aria-selected={false}
                                          href="#"
                                          id="project-viewer-tabs-tab-deployments"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="tab"
                                          tabIndex={-1}
                                        >
                                          <span>
                                            <Glyphicon
                                              bsClass="glyphicon"
                                              className="icon-link"
                                              glyph="globe"
                                            >
                                              <span
                                                className="icon-link glyphicon glyphicon-globe"
                                              />
                                            </Glyphicon>
                                            <span
                                              className="hidden-xs"
                                            >
                                              Deployments
                                            </span>
                                          </span>
                                        </a>
                                      </SafeAnchor>
                                    </li>
                                  </NavItem>
                                  <NavItem
                                    active={false}
                                    activeKey="sources"
                                    aria-controls="project-viewer-tabs-pane-settings"
                                    disabled={false}
                                    eventKey="settings"
                                    id="project-viewer-tabs-tab-settings"
                                    key=".$.2"
                                    onKeyDown={[Function]}
                                    onSelect={[Function]}
                                    role="tab"
                                    tabIndex={-1}
                                  >
                                    <li
                                      className=""
                                      role="presentation"
                                    >
                                      <SafeAnchor
                                        aria-controls="project-viewer-tabs-pane-settings"
                                        aria-selected={false}
                                        componentClass="a"
                                        disabled={false}
                                        id="project-viewer-tabs-tab-settings"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="tab"
                                        tabIndex={-1}
                                      >
                                        <a
                                          aria-controls="project-viewer-tabs-pane-settings"
                                          aria-selected={false}
                                          href="#"
                                          id="project-viewer-tabs-tab-settings"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="tab"
                                          tabIndex={-1}
                                        >
                                          <span>
                                            <Glyphicon
                                              bsClass="glyphicon"
                                              className="icon-link"
                                              glyph="cog"
                                            >
                                              <span
                                                className="icon-link glyphicon glyphicon-cog"
                                              />
                                            </Glyphicon>
                                            <span
                                              className="hidden-xs"
                                            >
                                              Settings
                                            </span>
                                          </span>
                                        </a>
                                      </SafeAnchor>
                                    </li>
                                  </NavItem>
                                </ul>
                              </Nav>
                              <TabContent
                                animation={true}
                                bsClass="tab"
                                componentClass="div"
                                mountOnEnter={false}
                                unmountOnExit={false}
                              >
                                <div
                                  className="tab-content"
                                >
                                  <Tab
                                    eventKey="sources"
                                    title={
                                      <span>
                                        <Glyphicon
                                          bsClass="glyphicon"
                                          className="icon-link"
                                          glyph="list"
                                        />
                                        <span
                                          className="hidden-xs"
                                        >
                                          Feed Sources
                                        </span>
                                      </span>
                                    }
                                  >
                                    <TabPane
                                      bsClass="tab-pane"
                                      eventKey="sources"
                                    >
                                      <Fade
                                        in={true}
                                        mountOnEnter={false}
                                        onEnter={[Function]}
                                        onExited={[Function]}
                                        timeout={300}
                                        transitionAppear={false}
                                        unmountOnExit={false}
                                      >
                                        <Transition
                                          className="fade"
                                          enteredClassName="in"
                                          enteringClassName="in"
                                          in={true}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={300}
                                          transitionAppear={false}
                                          unmountOnExit={false}
                                        >
                                          <div
                                            aria-hidden={false}
                                            aria-labelledby="project-viewer-tabs-tab-sources"
                                            className="tab-pane active fade in"
                                            id="project-viewer-tabs-pane-sources"
                                            role="tabpanel"
                                          >
                                            <Row
                                              bsClass="row"
                                              componentClass="div"
                                            >
                                              <div
                                                className="row"
                                              >
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  sm={10}
                                                  xs={12}
                                                >
                                                  <div
                                                    className="col-sm-10 col-xs-12"
                                                  >
                                                    <Connect(FeedSourceTable)
                                                      onNewFeedSourceClick={[Function]}
                                                      project={
                                                        Object {
                                                          "autoFetchFeeds": true,
                                                          "autoFetchHour": 0,
                                                          "autoFetchMinute": 0,
                                                          "bounds": null,
                                                          "buildConfig": Object {
                                                            "fares": null,
                                                            "fetchElevationUS": null,
                                                            "stationTransfers": null,
                                                            "subwayAccessTime": null,
                                                          },
                                                          "dateCreated": 1526305321824,
                                                          "defaultTimeZone": null,
                                                          "deployments": Array [],
                                                          "feedSources": Array [],
                                                          "id": "mock-project-id",
                                                          "lastUpdated": 1553236399556,
                                                          "name": "mock-project",
                                                          "organizationId": null,
                                                          "otpServers": Array [],
                                                          "pinnedDeploymentId": null,
                                                          "routerConfig": Object {
                                                            "carDropoffTime": null,
                                                            "numItineraries": null,
                                                            "requestLogFile": null,
                                                            "stairsReluctance": null,
                                                            "updaters": null,
                                                            "walkSpeed": null,
                                                          },
                                                          "useCustomOsmBounds": false,
                                                          "user": null,
                                                        }
                                                      }
                                                    >
                                                      <FeedSourceTable
                                                        comparisonColumn={null}
                                                        feedSources={Array []}
                                                        filteredFeedSources={Array []}
                                                        isFetching={false}
                                                        isNotAdmin={false}
                                                        onNewFeedSourceClick={[Function]}
                                                        project={
                                                          Object {
                                                            "autoFetchFeeds": true,
                                                            "autoFetchHour": 0,
                                                            "autoFetchMinute": 0,
                                                            "bounds": null,
                                                            "buildConfig": Object {
                                                              "fares": null,
                                                              "fetchElevationUS": null,
                                                              "stationTransfers": null,
                                                              "subwayAccessTime": null,
                                                            },
                                                            "dateCreated": 1526305321824,
                                                            "defaultTimeZone": null,
                                                            "deployments": Array [],
                                                            "feedSources": Array [],
                                                            "id": "mock-project-id",
                                                            "lastUpdated": 1553236399556,
                                                            "name": "mock-project",
                                                            "organizationId": null,
                                                            "otpServers": Array [],
                                                            "pinnedDeploymentId": null,
                                                            "routerConfig": Object {
                                                              "carDropoffTime": null,
                                                              "numItineraries": null,
                                                              "requestLogFile": null,
                                                              "stairsReluctance": null,
                                                              "updaters": null,
                                                              "walkSpeed": null,
                                                            },
                                                            "useCustomOsmBounds": false,
                                                            "user": null,
                                                          }
                                                        }
                                                        sort="alphabetically-asc"
                                                        user={
                                                          Object {
                                                            "isCheckingLogin": false,
                                                            "permissions": UserPermissions {
                                                              "appPermissionLookup": Object {
                                                                "administer-application": Object {
                                                                  "type": "administer-application",
                                                                },
                                                              },
                                                              "orgPermissionLookup": Object {},
                                                              "organizationLookup": Object {},
                                                              "projectLookup": Object {},
                                                            },
                                                            "profile": Object {
                                                              "app_metadata": Object {
                                                                "datatools": Array [
                                                                  Object {
                                                                    "client_id": "mock-client-id",
                                                                    "organizations": Array [],
                                                                    "permissions": Array [
                                                                      Object {
                                                                        "type": "administer-application",
                                                                      },
                                                                    ],
                                                                    "projects": Array [],
                                                                    "subscriptions": Array [],
                                                                  },
                                                                ],
                                                              },
                                                              "clientID": "mock-client-id",
                                                              "created_at": "2016-03-04T18:59:22.569Z",
                                                              "email": "mock-user@conveyal.com",
                                                              "email_verified": true,
                                                              "identities": Array [
                                                                Object {
                                                                  "connection": "Username-Password-Authentication",
                                                                  "isSocial": false,
                                                                  "provider": "auth0",
                                                                  "user_id": "12345",
                                                                },
                                                              ],
                                                              "jti": "gibberish",
                                                              "last_password_reset": "2017-07-13T13:58:01.021Z",
                                                              "name": "mock-user@conveyal.com",
                                                              "nickname": "mock-user",
                                                              "persistent": Object {},
                                                              "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
                                                              "sub": "auth0|12345",
                                                              "updated_at": "2019-03-21T19:05:30.180Z",
                                                              "user_id": "auth0|12345",
                                                              "user_metadata": Object {
                                                                "datatools": Array [
                                                                  Object {
                                                                    "client_id": "mock-client-id",
                                                                    "editor": Object {
                                                                      "map_id": "mapbox.streets",
                                                                    },
                                                                    "hideTutorial": true,
                                                                    "sidebarExpanded": false,
                                                                  },
                                                                ],
                                                                "lang": "en",
                                                              },
                                                            },
                                                            "recentActivity": null,
                                                            "redirectOnSuccess": null,
                                                            "subscriptions": UserSubscriptions {
                                                              "subscriptionLookup": Object {},
                                                            },
                                                            "token": "mock-token",
                                                          }
                                                        }
                                                      >
                                                        <Panel
                                                          bsClass="panel"
                                                          bsStyle="default"
                                                          defaultExpanded={false}
                                                          header={
                                                            <Connect(ProjectFeedListToolbar)
                                                              onNewFeedSourceClick={[Function]}
                                                              project={
                                                                Object {
                                                                  "autoFetchFeeds": true,
                                                                  "autoFetchHour": 0,
                                                                  "autoFetchMinute": 0,
                                                                  "bounds": null,
                                                                  "buildConfig": Object {
                                                                    "fares": null,
                                                                    "fetchElevationUS": null,
                                                                    "stationTransfers": null,
                                                                    "subwayAccessTime": null,
                                                                  },
                                                                  "dateCreated": 1526305321824,
                                                                  "defaultTimeZone": null,
                                                                  "deployments": Array [],
                                                                  "feedSources": Array [],
                                                                  "id": "mock-project-id",
                                                                  "lastUpdated": 1553236399556,
                                                                  "name": "mock-project",
                                                                  "organizationId": null,
                                                                  "otpServers": Array [],
                                                                  "pinnedDeploymentId": null,
                                                                  "routerConfig": Object {
                                                                    "carDropoffTime": null,
                                                                    "numItineraries": null,
                                                                    "requestLogFile": null,
                                                                    "stairsReluctance": null,
                                                                    "updaters": null,
                                                                    "walkSpeed": null,
                                                                  },
                                                                  "useCustomOsmBounds": false,
                                                                  "user": null,
                                                                }
                                                              }
                                                            />
                                                          }
                                                        >
                                                          <div
                                                            className="panel panel-default"
                                                          >
                                                            <div
                                                              className="panel-heading"
                                                            >
                                                              <Connect(ProjectFeedListToolbar)
                                                                className="panel-title"
                                                                onNewFeedSourceClick={[Function]}
                                                                project={
                                                                  Object {
                                                                    "autoFetchFeeds": true,
                                                                    "autoFetchHour": 0,
                                                                    "autoFetchMinute": 0,
                                                                    "bounds": null,
                                                                    "buildConfig": Object {
                                                                      "fares": null,
                                                                      "fetchElevationUS": null,
                                                                      "stationTransfers": null,
                                                                      "subwayAccessTime": null,
                                                                    },
                                                                    "dateCreated": 1526305321824,
                                                                    "defaultTimeZone": null,
                                                                    "deployments": Array [],
                                                                    "feedSources": Array [],
                                                                    "id": "mock-project-id",
                                                                    "lastUpdated": 1553236399556,
                                                                    "name": "mock-project",
                                                                    "organizationId": null,
                                                                    "otpServers": Array [],
                                                                    "pinnedDeploymentId": null,
                                                                    "routerConfig": Object {
                                                                      "carDropoffTime": null,
                                                                      "numItineraries": null,
                                                                      "requestLogFile": null,
                                                                      "stairsReluctance": null,
                                                                      "updaters": null,
                                                                      "walkSpeed": null,
                                                                    },
                                                                    "useCustomOsmBounds": false,
                                                                    "user": null,
                                                                  }
                                                                }
                                                              >
                                                                <ProjectFeedListToolbar
                                                                  calculateFeedSourceTableComparisonColumn={[Function]}
                                                                  className="panel-title"
                                                                  downloadFeedForProject={[Function]}
                                                                  fetchFeedsForProject={[Function]}
                                                                  filter={
                                                                    Object {
                                                                      "feedSourceTableComparisonColumn": null,
                                                                      "feedSourceTableFilterCountStrategy": "LATEST",
                                                                      "filter": null,
                                                                      "searchText": null,
                                                                    }
                                                                  }
                                                                  filterCounts={
                                                                    Object {
                                                                      "active": 0,
                                                                      "all": 0,
                                                                      "expired": 0,
                                                                      "expiring": 0,
                                                                      "future": 0,
                                                                    }
                                                                  }
                                                                  onNewFeedSourceClick={[Function]}
                                                                  possibleComparisons={
                                                                    Array [
                                                                      "LATEST",
                                                                    ]
                                                                  }
                                                                  project={
                                                                    Object {
                                                                      "autoFetchFeeds": true,
                                                                      "autoFetchHour": 0,
                                                                      "autoFetchMinute": 0,
                                                                      "bounds": null,
                                                                      "buildConfig": Object {
                                                                        "fares": null,
                                                                        "fetchElevationUS": null,
                                                                        "stationTransfers": null,
                                                                        "subwayAccessTime": null,
                                                                      },
                                                                      "dateCreated": 1526305321824,
                                                                      "defaultTimeZone": null,
                                                                      "deployments": Array [],
                                                                      "feedSources": Array [],
                                                                      "id": "mock-project-id",
                                                                      "lastUpdated": 1553236399556,
                                                                      "name": "mock-project",
                                                                      "organizationId": null,
                                                                      "otpServers": Array [],
                                                                      "pinnedDeploymentId": null,
                                                                      "routerConfig": Object {
                                                                        "carDropoffTime": null,
                                                                        "numItineraries": null,
                                                                        "requestLogFile": null,
                                                                        "stairsReluctance": null,
                                                                        "updaters": null,
                                                                        "walkSpeed": null,
                                                                      },
                                                                      "useCustomOsmBounds": false,
                                                                      "user": null,
                                                                    }
                                                                  }
                                                                  projectEditDisabled={false}
                                                                  setFeedSort={[Function]}
                                                                  setFeedSourceTableFilterCountStrategy={[Function]}
                                                                  setVisibilityFilter={[Function]}
                                                                  setVisibilitySearchText={[Function]}
                                                                  sort="alphabetically-asc"
                                                                  thirdPartySync={[Function]}
                                                                  user={
                                                                    Object {
                                                                      "isCheckingLogin": false,
                                                                      "permissions": UserPermissions {
                                                                        "appPermissionLookup": Object {
                                                                          "administer-application": Object {
                                                                            "type": "administer-application",
                                                                          },
                                                                        },
                                                                        "orgPermissionLookup": Object {},
                                                                        "organizationLookup": Object {},
                                                                        "projectLookup": Object {},
                                                                      },
                                                                      "profile": Object {
                                                                        "app_metadata": Object {
                                                                          "datatools": Array [
                                                                            Object {
                                                                              "client_id": "mock-client-id",
                                                                              "organizations": Array [],
                                                                              "permissions": Array [
                                                                                Object {
                                                                                  "type": "administer-application",
                                                                                },
                                                                              ],
                                                                              "projects": Array [],
                                                                              "subscriptions": Array [],
                                                                            },
                                                                          ],
                                                                        },
                                                                        "clientID": "mock-client-id",
                                                                        "created_at": "2016-03-04T18:59:22.569Z",
                                                                        "email": "mock-user@conveyal.com",
                                                                        "email_verified": true,
                                                                        "identities": Array [
                                                                          Object {
                                                                            "connection": "Username-Password-Authentication",
                                                                            "isSocial": false,
                                                                            "provider": "auth0",
                                                                            "user_id": "12345",
                                                                          },
                                                                        ],
                                                                        "jti": "gibberish",
                                                                        "last_password_reset": "2017-07-13T13:58:01.021Z",
                                                                        "name": "mock-user@conveyal.com",
                                                                        "nickname": "mock-user",
                                                                        "persistent": Object {},
                                                                        "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
                                                                        "sub": "auth0|12345",
                                                                        "updated_at": "2019-03-21T19:05:30.180Z",
                                                                        "user_id": "auth0|12345",
                                                                        "user_metadata": Object {
                                                                          "datatools": Array [
                                                                            Object {
                                                                              "client_id": "mock-client-id",
                                                                              "editor": Object {
                                                                                "map_id": "mapbox.streets",
                                                                              },
                                                                              "hideTutorial": true,
                                                                              "sidebarExpanded": false,
                                                                            },
                                                                          ],
                                                                          "lang": "en",
                                                                        },
                                                                      },
                                                                      "recentActivity": null,
                                                                      "redirectOnSuccess": null,
                                                                      "subscriptions": UserSubscriptions {
                                                                        "subscriptionLookup": Object {},
                                                                      },
                                                                      "token": "mock-token",
                                                                    }
                                                                  }
                                                                >
                                                                  <Row
                                                                    bsClass="row"
                                                                    componentClass="div"
                                                                  >
                                                                    <div
                                                                      className="row"
                                                                    >
                                                                      <Col
                                                                        bsClass="col"
                                                                        componentClass="div"
                                                                        style={
                                                                          Object {
                                                                            "marginTop": 25,
                                                                          }
                                                                        }
                                                                        xs={4}
                                                                      >
                                                                        <div
                                                                          className="col-xs-4"
                                                                          style={
                                                                            Object {
                                                                              "marginTop": 25,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Form
                                                                            bsClass="form"
                                                                            componentClass="form"
                                                                            horizontal={false}
                                                                            inline={true}
                                                                            style={
                                                                              Object {
                                                                                "display": "inline",
                                                                              }
                                                                            }
                                                                          >
                                                                            <form
                                                                              className="form-inline"
                                                                              style={
                                                                                Object {
                                                                                  "display": "inline",
                                                                                }
                                                                              }
                                                                            >
                                                                              <FormGroup
                                                                                bsClass="form-group"
                                                                                className="feed-source-toolbar-formgroup"
                                                                                controlId="formControlsSelect"
                                                                              >
                                                                                <div
                                                                                  className="feed-source-toolbar-formgroup form-group"
                                                                                >
                                                                                  <FormControl
                                                                                    bsClass="form-control"
                                                                                    componentClass="input"
                                                                                    onChange={[Function]}
                                                                                    placeholder="Search by name"
                                                                                  >
                                                                                    <input
                                                                                      className="form-control"
                                                                                      id="formControlsSelect"
                                                                                      onChange={[Function]}
                                                                                      placeholder="Search by name"
                                                                                    />
                                                                                  </FormControl>
                                                                                </div>
                                                                              </FormGroup>
                                                                            </form>
                                                                          </Form>
                                                                          <DropdownButton
                                                                            id="project-feedsource-table-sort-button"
                                                                            style={
                                                                              Object {
                                                                                "marginLeft": 20,
                                                                              }
                                                                            }
                                                                            title="Sort By"
                                                                          >
                                                                            <Uncontrolled(Dropdown)
                                                                              id="project-feedsource-table-sort-button"
                                                                            >
                                                                              <Dropdown
                                                                                bsClass="dropdown"
                                                                                componentClass={[Function]}
                                                                                id="project-feedsource-table-sort-button"
                                                                                onToggle={[Function]}
                                                                              >
                                                                                <ButtonGroup
                                                                                  block={false}
                                                                                  bsClass="btn-group"
                                                                                  className="dropdown"
                                                                                  justified={false}
                                                                                  vertical={false}
                                                                                >
                                                                                  <div
                                                                                    className="dropdown btn-group"
                                                                                  >
                                                                                    <DropdownToggle
                                                                                      bsClass="dropdown-toggle"
                                                                                      bsRole="toggle"
                                                                                      id="project-feedsource-table-sort-button"
                                                                                      key=".0"
                                                                                      onClick={[Function]}
                                                                                      onKeyDown={[Function]}
                                                                                      open={false}
                                                                                      style={
                                                                                        Object {
                                                                                          "marginLeft": 20,
                                                                                        }
                                                                                      }
                                                                                      useAnchor={false}
                                                                                    >
                                                                                      <Button
                                                                                        active={false}
                                                                                        aria-expanded={false}
                                                                                        aria-haspopup={true}
                                                                                        block={false}
                                                                                        bsClass="btn"
                                                                                        bsStyle="default"
                                                                                        className="dropdown-toggle"
                                                                                        disabled={false}
                                                                                        id="project-feedsource-table-sort-button"
                                                                                        onClick={[Function]}
                                                                                        onKeyDown={[Function]}
                                                                                        role="button"
                                                                                        style={
                                                                                          Object {
                                                                                            "marginLeft": 20,
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <button
                                                                                          aria-expanded={false}
                                                                                          aria-haspopup={true}
                                                                                          className="dropdown-toggle btn btn-default"
                                                                                          disabled={false}
                                                                                          id="project-feedsource-table-sort-button"
                                                                                          onClick={[Function]}
                                                                                          onKeyDown={[Function]}
                                                                                          role="button"
                                                                                          style={
                                                                                            Object {
                                                                                              "marginLeft": 20,
                                                                                            }
                                                                                          }
                                                                                          type="button"
                                                                                        >
                                                                                          Sort By
                                                                                           
                                                                                          <span
                                                                                            className="caret"
                                                                                          />
                                                                                        </button>
                                                                                      </Button>
                                                                                    </DropdownToggle>
                                                                                    <DropdownMenu
                                                                                      bsClass="dropdown-menu"
                                                                                      bsRole="menu"
                                                                                      key=".1"
                                                                                      labelledBy="project-feedsource-table-sort-button"
                                                                                      onClose={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      pullRight={false}
                                                                                    >
                                                                                      <RootCloseWrapper
                                                                                        disabled={true}
                                                                                        event="click"
                                                                                        onRootClose={[Function]}
                                                                                      >
                                                                                        <ul
                                                                                          aria-labelledby="project-feedsource-table-sort-button"
                                                                                          className="dropdown-menu"
                                                                                          role="menu"
                                                                                        >
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={true}
                                                                                            key=".$sort-header-note"
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className="dropdown-header"
                                                                                              onKeyDown={[Function]}
                                                                                              role="heading"
                                                                                            >
                                                                                              Note: sorting only available on latest version data
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={true}
                                                                                            key=".$feed-sort-alphabetically-header"
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className="dropdown-header"
                                                                                              onKeyDown={[Function]}
                                                                                              role="heading"
                                                                                            >
                                                                                              Alphabetically
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$feed-sort-alphabetically-asc"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  A-Z
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$feed-sort-alphabetically-desc"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  Z-A
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={true}
                                                                                            header={false}
                                                                                            key=".$feed-sort-alphabetically-divider"
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className="divider"
                                                                                              onKeyDown={[Function]}
                                                                                              role="separator"
                                                                                            />
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={true}
                                                                                            key=".$feed-sort-endDate-header"
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className="dropdown-header"
                                                                                              onKeyDown={[Function]}
                                                                                              role="heading"
                                                                                            >
                                                                                              Expiration Date
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$feed-sort-endDate-asc"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  Soonest-Latest
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$feed-sort-endDate-desc"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  Latest-Soonest
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={true}
                                                                                            header={false}
                                                                                            key=".$feed-sort-endDate-divider"
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className="divider"
                                                                                              onKeyDown={[Function]}
                                                                                              role="separator"
                                                                                            />
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={true}
                                                                                            key=".$feed-sort-startDate-header"
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className="dropdown-header"
                                                                                              onKeyDown={[Function]}
                                                                                              role="heading"
                                                                                            >
                                                                                              Start Date
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$feed-sort-startDate-asc"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  Soonest-Latest
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$feed-sort-startDate-desc"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  Latest-Soonest
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={true}
                                                                                            header={false}
                                                                                            key=".$feed-sort-startDate-divider"
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className="divider"
                                                                                              onKeyDown={[Function]}
                                                                                              role="separator"
                                                                                            />
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={true}
                                                                                            key=".$feed-sort-lastUpdated-header"
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className="dropdown-header"
                                                                                              onKeyDown={[Function]}
                                                                                              role="heading"
                                                                                            >
                                                                                              Last Update
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$feed-sort-lastUpdated-asc"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  Stale-Recent
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$feed-sort-lastUpdated-desc"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  Recent-Stale
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={true}
                                                                                            header={false}
                                                                                            key=".$feed-sort-lastUpdated-divider"
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className="divider"
                                                                                              onKeyDown={[Function]}
                                                                                              role="separator"
                                                                                            />
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={true}
                                                                                            key=".$feed-sort-numErrors-header"
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className="dropdown-header"
                                                                                              onKeyDown={[Function]}
                                                                                              role="heading"
                                                                                            >
                                                                                              Number of Errors
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$feed-sort-numErrors-asc"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  Least-Most
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$feed-sort-numErrors-desc"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  Most-Least
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                        </ul>
                                                                                      </RootCloseWrapper>
                                                                                    </DropdownMenu>
                                                                                  </div>
                                                                                </ButtonGroup>
                                                                              </Dropdown>
                                                                            </Uncontrolled(Dropdown)>
                                                                          </DropdownButton>
                                                                        </div>
                                                                      </Col>
                                                                      <Col
                                                                        bsClass="col"
                                                                        componentClass="div"
                                                                        xs={6}
                                                                      >
                                                                        <div
                                                                          className="col-xs-6"
                                                                        >
                                                                          <FormGroup
                                                                            bsClass="form-group"
                                                                            id="feedFilterToolbarControl"
                                                                          >
                                                                            <div
                                                                              className="form-group"
                                                                              id="feedFilterToolbarControl"
                                                                            >
                                                                              <ControlLabel
                                                                                bsClass="control-label"
                                                                                srOnly={false}
                                                                                style={
                                                                                  Object {
                                                                                    "display": "block",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <label
                                                                                  className="control-label"
                                                                                  style={
                                                                                    Object {
                                                                                      "display": "block",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  Filter feed sources on
                                                                                  <span
                                                                                    style={
                                                                                      Object {
                                                                                        "marginLeft": 5,
                                                                                        "marginRight": 5,
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    Latest
                                                                                  </span>
                                                                                  version
                                                                                </label>
                                                                              </ControlLabel>
                                                                              <ButtonGroup
                                                                                block={false}
                                                                                bsClass="btn-group"
                                                                                justified={false}
                                                                                vertical={false}
                                                                              >
                                                                                <div
                                                                                  className="btn-group"
                                                                                >
                                                                                  <OptionButton
                                                                                    active={true}
                                                                                    className="active"
                                                                                    key="all"
                                                                                    onClick={[Function]}
                                                                                    value="all"
                                                                                  >
                                                                                    <Button
                                                                                      active={true}
                                                                                      block={false}
                                                                                      bsClass="btn"
                                                                                      bsStyle="default"
                                                                                      className="active"
                                                                                      disabled={false}
                                                                                      href="#"
                                                                                      onClick={[Function]}
                                                                                      value="all"
                                                                                    >
                                                                                      <SafeAnchor
                                                                                        className="active btn btn-default active"
                                                                                        componentClass="a"
                                                                                        disabled={false}
                                                                                        href="#"
                                                                                        onClick={[Function]}
                                                                                        value="all"
                                                                                      >
                                                                                        <a
                                                                                          className="active btn btn-default active"
                                                                                          href="#"
                                                                                          onClick={[Function]}
                                                                                          role="button"
                                                                                          value="all"
                                                                                        >
                                                                                          All
                                                                                           
                                                                                          <Badge
                                                                                            bsClass="badge"
                                                                                            pullRight={false}
                                                                                            style={
                                                                                              Object {
                                                                                                "backgroundColor": "#babec0",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <span
                                                                                              className="badge"
                                                                                              style={
                                                                                                Object {
                                                                                                  "backgroundColor": "#babec0",
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              0
                                                                                            </span>
                                                                                          </Badge>
                                                                                        </a>
                                                                                      </SafeAnchor>
                                                                                    </Button>
                                                                                  </OptionButton>
                                                                                  <OptionButton
                                                                                    active={false}
                                                                                    className=""
                                                                                    key="active"
                                                                                    onClick={[Function]}
                                                                                    value="active"
                                                                                  >
                                                                                    <Button
                                                                                      active={false}
                                                                                      block={false}
                                                                                      bsClass="btn"
                                                                                      bsStyle="default"
                                                                                      className=""
                                                                                      disabled={false}
                                                                                      href="#"
                                                                                      onClick={[Function]}
                                                                                      value="active"
                                                                                    >
                                                                                      <SafeAnchor
                                                                                        className="btn btn-default"
                                                                                        componentClass="a"
                                                                                        disabled={false}
                                                                                        href="#"
                                                                                        onClick={[Function]}
                                                                                        value="active"
                                                                                      >
                                                                                        <a
                                                                                          className="btn btn-default"
                                                                                          href="#"
                                                                                          onClick={[Function]}
                                                                                          role="button"
                                                                                          value="active"
                                                                                        >
                                                                                          Active
                                                                                           
                                                                                          <Badge
                                                                                            bsClass="badge"
                                                                                            pullRight={false}
                                                                                            style={
                                                                                              Object {
                                                                                                "backgroundColor": "#babec0",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <span
                                                                                              className="badge"
                                                                                              style={
                                                                                                Object {
                                                                                                  "backgroundColor": "#babec0",
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              0
                                                                                            </span>
                                                                                          </Badge>
                                                                                        </a>
                                                                                      </SafeAnchor>
                                                                                    </Button>
                                                                                  </OptionButton>
                                                                                  <OptionButton
                                                                                    active={false}
                                                                                    className=""
                                                                                    key="expiring"
                                                                                    onClick={[Function]}
                                                                                    value="expiring"
                                                                                  >
                                                                                    <Button
                                                                                      active={false}
                                                                                      block={false}
                                                                                      bsClass="btn"
                                                                                      bsStyle="default"
                                                                                      className=""
                                                                                      disabled={false}
                                                                                      href="#"
                                                                                      onClick={[Function]}
                                                                                      value="expiring"
                                                                                    >
                                                                                      <SafeAnchor
                                                                                        className="btn btn-default"
                                                                                        componentClass="a"
                                                                                        disabled={false}
                                                                                        href="#"
                                                                                        onClick={[Function]}
                                                                                        value="expiring"
                                                                                      >
                                                                                        <a
                                                                                          className="btn btn-default"
                                                                                          href="#"
                                                                                          onClick={[Function]}
                                                                                          role="button"
                                                                                          value="expiring"
                                                                                        >
                                                                                          Expiring
                                                                                           
                                                                                          <Badge
                                                                                            bsClass="badge"
                                                                                            pullRight={false}
                                                                                            style={
                                                                                              Object {
                                                                                                "backgroundColor": "#babec0",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <span
                                                                                              className="badge"
                                                                                              style={
                                                                                                Object {
                                                                                                  "backgroundColor": "#babec0",
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              0
                                                                                            </span>
                                                                                          </Badge>
                                                                                        </a>
                                                                                      </SafeAnchor>
                                                                                    </Button>
                                                                                  </OptionButton>
                                                                                  <OptionButton
                                                                                    active={false}
                                                                                    className=""
                                                                                    key="expired"
                                                                                    onClick={[Function]}
                                                                                    value="expired"
                                                                                  >
                                                                                    <Button
                                                                                      active={false}
                                                                                      block={false}
                                                                                      bsClass="btn"
                                                                                      bsStyle="default"
                                                                                      className=""
                                                                                      disabled={false}
                                                                                      href="#"
                                                                                      onClick={[Function]}
                                                                                      value="expired"
                                                                                    >
                                                                                      <SafeAnchor
                                                                                        className="btn btn-default"
                                                                                        componentClass="a"
                                                                                        disabled={false}
                                                                                        href="#"
                                                                                        onClick={[Function]}
                                                                                        value="expired"
                                                                                      >
                                                                                        <a
                                                                                          className="btn btn-default"
                                                                                          href="#"
                                                                                          onClick={[Function]}
                                                                                          role="button"
                                                                                          value="expired"
                                                                                        >
                                                                                          Expired
                                                                                           
                                                                                          <Badge
                                                                                            bsClass="badge"
                                                                                            pullRight={false}
                                                                                            style={
                                                                                              Object {
                                                                                                "backgroundColor": "#babec0",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <span
                                                                                              className="badge"
                                                                                              style={
                                                                                                Object {
                                                                                                  "backgroundColor": "#babec0",
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              0
                                                                                            </span>
                                                                                          </Badge>
                                                                                        </a>
                                                                                      </SafeAnchor>
                                                                                    </Button>
                                                                                  </OptionButton>
                                                                                  <OptionButton
                                                                                    active={false}
                                                                                    className=""
                                                                                    key="future"
                                                                                    onClick={[Function]}
                                                                                    value="future"
                                                                                  >
                                                                                    <Button
                                                                                      active={false}
                                                                                      block={false}
                                                                                      bsClass="btn"
                                                                                      bsStyle="default"
                                                                                      className=""
                                                                                      disabled={false}
                                                                                      href="#"
                                                                                      onClick={[Function]}
                                                                                      value="future"
                                                                                    >
                                                                                      <SafeAnchor
                                                                                        className="btn btn-default"
                                                                                        componentClass="a"
                                                                                        disabled={false}
                                                                                        href="#"
                                                                                        onClick={[Function]}
                                                                                        value="future"
                                                                                      >
                                                                                        <a
                                                                                          className="btn btn-default"
                                                                                          href="#"
                                                                                          onClick={[Function]}
                                                                                          role="button"
                                                                                          value="future"
                                                                                        >
                                                                                          Future
                                                                                           
                                                                                          <Badge
                                                                                            bsClass="badge"
                                                                                            pullRight={false}
                                                                                            style={
                                                                                              Object {
                                                                                                "backgroundColor": "#babec0",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <span
                                                                                              className="badge"
                                                                                              style={
                                                                                                Object {
                                                                                                  "backgroundColor": "#babec0",
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              0
                                                                                            </span>
                                                                                          </Badge>
                                                                                        </a>
                                                                                      </SafeAnchor>
                                                                                    </Button>
                                                                                  </OptionButton>
                                                                                </div>
                                                                              </ButtonGroup>
                                                                            </div>
                                                                          </FormGroup>
                                                                        </div>
                                                                      </Col>
                                                                      <Col
                                                                        bsClass="col"
                                                                        componentClass="div"
                                                                        style={
                                                                          Object {
                                                                            "marginTop": 25,
                                                                          }
                                                                        }
                                                                        xs={2}
                                                                      >
                                                                        <div
                                                                          className="col-xs-2"
                                                                          style={
                                                                            Object {
                                                                              "marginTop": 25,
                                                                            }
                                                                          }
                                                                        >
                                                                          <DropdownButton
                                                                            bsStyle="primary"
                                                                            id="project-header-actions"
                                                                            style={
                                                                              Object {
                                                                                "marginLeft": 20,
                                                                              }
                                                                            }
                                                                            title="Actions"
                                                                          >
                                                                            <Uncontrolled(Dropdown)
                                                                              bsStyle="primary"
                                                                              id="project-header-actions"
                                                                            >
                                                                              <Dropdown
                                                                                bsClass="dropdown"
                                                                                bsStyle="primary"
                                                                                componentClass={[Function]}
                                                                                id="project-header-actions"
                                                                                onToggle={[Function]}
                                                                              >
                                                                                <ButtonGroup
                                                                                  block={false}
                                                                                  bsClass="btn-group"
                                                                                  bsStyle="primary"
                                                                                  className="dropdown"
                                                                                  justified={false}
                                                                                  vertical={false}
                                                                                >
                                                                                  <div
                                                                                    className="dropdown btn-group btn-group-primary"
                                                                                  >
                                                                                    <DropdownToggle
                                                                                      bsClass="dropdown-toggle"
                                                                                      bsRole="toggle"
                                                                                      bsStyle="primary"
                                                                                      id="project-header-actions"
                                                                                      key=".0"
                                                                                      onClick={[Function]}
                                                                                      onKeyDown={[Function]}
                                                                                      open={false}
                                                                                      style={
                                                                                        Object {
                                                                                          "marginLeft": 20,
                                                                                        }
                                                                                      }
                                                                                      useAnchor={false}
                                                                                    >
                                                                                      <Button
                                                                                        active={false}
                                                                                        aria-expanded={false}
                                                                                        aria-haspopup={true}
                                                                                        block={false}
                                                                                        bsClass="btn"
                                                                                        bsStyle="primary"
                                                                                        className="dropdown-toggle"
                                                                                        disabled={false}
                                                                                        id="project-header-actions"
                                                                                        onClick={[Function]}
                                                                                        onKeyDown={[Function]}
                                                                                        role="button"
                                                                                        style={
                                                                                          Object {
                                                                                            "marginLeft": 20,
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <button
                                                                                          aria-expanded={false}
                                                                                          aria-haspopup={true}
                                                                                          className="dropdown-toggle btn btn-primary"
                                                                                          disabled={false}
                                                                                          id="project-header-actions"
                                                                                          onClick={[Function]}
                                                                                          onKeyDown={[Function]}
                                                                                          role="button"
                                                                                          style={
                                                                                            Object {
                                                                                              "marginLeft": 20,
                                                                                            }
                                                                                          }
                                                                                          type="button"
                                                                                        >
                                                                                          Actions
                                                                                           
                                                                                          <span
                                                                                            className="caret"
                                                                                          />
                                                                                        </button>
                                                                                      </Button>
                                                                                    </DropdownToggle>
                                                                                    <DropdownMenu
                                                                                      bsClass="dropdown-menu"
                                                                                      bsRole="menu"
                                                                                      key=".1"
                                                                                      labelledBy="project-header-actions"
                                                                                      onClose={[Function]}
                                                                                      onSelect={[Function]}
                                                                                      pullRight={false}
                                                                                    >
                                                                                      <RootCloseWrapper
                                                                                        disabled={true}
                                                                                        event="click"
                                                                                        onRootClose={[Function]}
                                                                                      >
                                                                                        <ul
                                                                                          aria-labelledby="project-header-actions"
                                                                                          className="dropdown-menu"
                                                                                          role="menu"
                                                                                        >
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            data-test-id="project-header-create-new-feed-source-button"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$create-feedsource-button"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                data-test-id="project-header-create-new-feed-source-button"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  data-test-id="project-header-create-new-feed-source-button"
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  <Glyphicon
                                                                                                    bsClass="glyphicon"
                                                                                                    glyph="plus"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="glyphicon glyphicon-plus"
                                                                                                    />
                                                                                                  </Glyphicon>
                                                                                                   
                                                                                                  New
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            bsStyle="default"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$update-feeds-button"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  <Icon
                                                                                                    type="cloud-download"
                                                                                                  >
                                                                                                    <i
                                                                                                      className="fa fa-cloud-download fa-fw "
                                                                                                    />
                                                                                                  </Icon>
                                                                                                   
                                                                                                  Fetch all
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                          <MenuItem
                                                                                            bsClass="dropdown"
                                                                                            bsStyle="primary"
                                                                                            disabled={false}
                                                                                            divider={false}
                                                                                            header={false}
                                                                                            key=".$merge-feeds-button"
                                                                                            onClick={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onSelect={[Function]}
                                                                                          >
                                                                                            <li
                                                                                              className=""
                                                                                              role="presentation"
                                                                                            >
                                                                                              <SafeAnchor
                                                                                                componentClass="a"
                                                                                                onClick={[Function]}
                                                                                                onKeyDown={[Function]}
                                                                                                role="menuitem"
                                                                                                tabIndex="-1"
                                                                                              >
                                                                                                <a
                                                                                                  href="#"
                                                                                                  onClick={[Function]}
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="menuitem"
                                                                                                  tabIndex="-1"
                                                                                                >
                                                                                                  <Glyphicon
                                                                                                    bsClass="glyphicon"
                                                                                                    glyph="download"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="glyphicon glyphicon-download"
                                                                                                    />
                                                                                                  </Glyphicon>
                                                                                                   
                                                                                                  Merge all
                                                                                                </a>
                                                                                              </SafeAnchor>
                                                                                            </li>
                                                                                          </MenuItem>
                                                                                        </ul>
                                                                                      </RootCloseWrapper>
                                                                                    </DropdownMenu>
                                                                                  </div>
                                                                                </ButtonGroup>
                                                                              </Dropdown>
                                                                            </Uncontrolled(Dropdown)>
                                                                          </DropdownButton>
                                                                        </div>
                                                                      </Col>
                                                                    </div>
                                                                  </Row>
                                                                </ProjectFeedListToolbar>
                                                              </Connect(ProjectFeedListToolbar)>
                                                            </div>
                                                            <ListGroup
                                                              bsClass="list-group"
                                                              key=".0"
                                                            >
                                                              <ul
                                                                className="list-group"
                                                              >
                                                                <ListGroupItem
                                                                  bsClass="list-group-item"
                                                                  className="text-center"
                                                                  key=".0"
                                                                  listItem={true}
                                                                >
                                                                  <li
                                                                    className="text-center list-group-item"
                                                                  >
                                                                    <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="success"
                                                                      data-test-id="create-first-feed-source-button"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                    >
                                                                      <button
                                                                        className="btn btn-success"
                                                                        data-test-id="create-first-feed-source-button"
                                                                        disabled={false}
                                                                        onClick={[Function]}
                                                                        type="button"
                                                                      >
                                                                        <Icon
                                                                          type="plus"
                                                                        >
                                                                          <i
                                                                            className="fa fa-plus fa-fw "
                                                                          />
                                                                        </Icon>
                                                                         
                                                                        Create first feed source!
                                                                      </button>
                                                                    </Button>
                                                                  </li>
                                                                </ListGroupItem>
                                                              </ul>
                                                            </ListGroup>
                                                          </div>
                                                        </Panel>
                                                      </FeedSourceTable>
                                                    </Connect(FeedSourceTable)>
                                                  </div>
                                                </Col>
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  sm={2}
                                                  xs={12}
                                                >
                                                  <div
                                                    className="col-sm-2 col-xs-12"
                                                  >
                                                    <div
                                                      style={
                                                        Object {
                                                          "marginBottom": "20px",
                                                        }
                                                      }
                                                    >
                                                      <Button
                                                        active={false}
                                                        block={true}
                                                        bsClass="btn"
                                                        bsStyle="primary"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "marginBottom": "5px",
                                                          }
                                                        }
                                                      >
                                                        <button
                                                          className="btn btn-primary btn-block"
                                                          disabled={false}
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "marginBottom": "5px",
                                                            }
                                                          }
                                                          type="button"
                                                        >
                                                          <Icon
                                                            type="users"
                                                          >
                                                            <i
                                                              className="fa fa-users fa-fw "
                                                            />
                                                          </Icon>
                                                           
                                                          Publish public feeds
                                                        </button>
                                                      </Button>
                                                      <p
                                                        className="small"
                                                      >
                                                        <strong>
                                                          Note:
                                                        </strong>
                                                         Public feeds page can be viewed
                                                         
                                                        <a
                                                          href="https://s3.amazonaws.com/bucket-name/public/index.html"
                                                          target="_blank"
                                                        >
                                                          here
                                                        </a>
                                                        .
                                                      </p>
                                                    </div>
                                                    <ProjectSummaryPanel
                                                      feedSources={Array []}
                                                      project={
                                                        Object {
                                                          "autoFetchFeeds": true,
                                                          "autoFetchHour": 0,
                                                          "autoFetchMinute": 0,
                                                          "bounds": null,
                                                          "buildConfig": Object {
                                                            "fares": null,
                                                            "fetchElevationUS": null,
                                                            "stationTransfers": null,
                                                            "subwayAccessTime": null,
                                                          },
                                                          "dateCreated": 1526305321824,
                                                          "defaultTimeZone": null,
                                                          "deployments": Array [],
                                                          "feedSources": Array [],
                                                          "id": "mock-project-id",
                                                          "lastUpdated": 1553236399556,
                                                          "name": "mock-project",
                                                          "organizationId": null,
                                                          "otpServers": Array [],
                                                          "pinnedDeploymentId": null,
                                                          "routerConfig": Object {
                                                            "carDropoffTime": null,
                                                            "numItineraries": null,
                                                            "requestLogFile": null,
                                                            "stairsReluctance": null,
                                                            "updaters": null,
                                                            "walkSpeed": null,
                                                          },
                                                          "useCustomOsmBounds": false,
                                                          "user": null,
                                                        }
                                                      }
                                                    >
                                                      <Panel
                                                        bsClass="panel"
                                                        bsStyle="default"
                                                        defaultExpanded={false}
                                                        header={
                                                          <h3>
                                                            mock-project
                                                             summary
                                                          </h3>
                                                        }
                                                      >
                                                        <div
                                                          className="panel panel-default"
                                                        >
                                                          <div
                                                            className="panel-heading"
                                                          >
                                                            <h3
                                                              className="panel-title"
                                                            >
                                                              mock-project
                                                               summary
                                                            </h3>
                                                          </div>
                                                          <ListGroup
                                                            bsClass="list-group"
                                                            key=".0"
                                                          >
                                                            <ul
                                                              className="list-group"
                                                            >
                                                              <ListGroupItem
                                                                bsClass="list-group-item"
                                                                key=".0"
                                                                listItem={true}
                                                              >
                                                                <li
                                                                  className="list-group-item"
                                                                >
                                                                  Number of feeds: 
                                                                  0
                                                                </li>
                                                              </ListGroupItem>
                                                              <ListGroupItem
                                                                bsClass="list-group-item"
                                                                key=".1"
                                                                listItem={true}
                                                              >
                                                                <li
                                                                  className="list-group-item"
                                                                >
                                                                  Total errors: 
                                                                  0
                                                                </li>
                                                              </ListGroupItem>
                                                              <ListGroupItem
                                                                bsClass="list-group-item"
                                                                key=".2"
                                                                listItem={true}
                                                              >
                                                                <li
                                                                  className="list-group-item"
                                                                >
                                                                  Total service:
                                                                   
                                                                  0
                                                                   
                                                                  hours per weekday
                                                                </li>
                                                              </ListGroupItem>
                                                            </ul>
                                                          </ListGroup>
                                                        </div>
                                                      </Panel>
                                                    </ProjectSummaryPanel>
                                                    <Panel
                                                      bsClass="panel"
                                                      bsStyle="default"
                                                      defaultExpanded={false}
                                                      header={
                                                        <h3>
                                                          What is a feed source?
                                                        </h3>
                                                      }
                                                    >
                                                      <div
                                                        className="panel panel-default"
                                                      >
                                                        <div
                                                          className="panel-heading"
                                                        >
                                                          <h3
                                                            className="panel-title"
                                                          >
                                                            What is a feed source?
                                                          </h3>
                                                        </div>
                                                        <div
                                                          className="panel-body"
                                                          key="0"
                                                        >
                                                          A feed source defines the location or upstream source of a
                                                           
                                                          GTFS feed. GTFS can be populated via automatic fetch,
                                                           
                                                          directly editing or uploading a zip file.
                                                        </div>
                                                      </div>
                                                    </Panel>
                                                  </div>
                                                </Col>
                                              </div>
                                            </Row>
                                          </div>
                                        </Transition>
                                      </Fade>
                                    </TabPane>
                                  </Tab>
                                  <Tab
                                    disabled={false}
                                    eventKey="deployments"
                                    title={
                                      <span>
                                        <Glyphicon
                                          bsClass="glyphicon"
                                          className="icon-link"
                                          glyph="globe"
                                        />
                                        <span
                                          className="hidden-xs"
                                        >
                                          Deployments
                                        </span>
                                      </span>
                                    }
                                  >
                                    <TabPane
                                      bsClass="tab-pane"
                                      eventKey="deployments"
                                    >
                                      <Fade
                                        in={false}
                                        mountOnEnter={false}
                                        onEnter={[Function]}
                                        onExited={[Function]}
                                        timeout={300}
                                        transitionAppear={false}
                                        unmountOnExit={false}
                                      >
                                        <Transition
                                          className="fade"
                                          enteredClassName="in"
                                          enteringClassName="in"
                                          in={false}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={300}
                                          transitionAppear={false}
                                          unmountOnExit={false}
                                        >
                                          <div
                                            aria-hidden={true}
                                            aria-labelledby="project-viewer-tabs-tab-deployments"
                                            className="tab-pane fade"
                                            id="project-viewer-tabs-pane-deployments"
                                            role="tabpanel"
                                          >
                                            <DeploymentsPanel
                                              createDeployment={[Function]}
                                              createDeploymentFromFeedSource={[Function]}
                                              createFeedSource={[Function]}
                                              deleteDeployment={[Function]}
                                              deleteFeedSource={[Function]}
                                              deleteProject={[Function]}
                                              deployPublic={[Function]}
                                              deployments={Array []}
                                              downloadFeedForProject={[Function]}
                                              expanded={false}
                                              fetchDeployments={[Function]}
                                              fetchFeedsForProject={[Function]}
                                              fetchProjectDeployments={[Function]}
                                              fetchProjectFeeds={[Function]}
                                              isFetching={false}
                                              location={
                                                Object {
                                                  "action": "",
                                                  "hash": "",
                                                  "key": "",
                                                  "pathname": "",
                                                  "query": Object {},
                                                  "search": "",
                                                }
                                              }
                                              onProjectViewerMount={[Function]}
                                              project={
                                                Object {
                                                  "autoFetchFeeds": true,
                                                  "autoFetchHour": 0,
                                                  "autoFetchMinute": 0,
                                                  "bounds": null,
                                                  "buildConfig": Object {
                                                    "fares": null,
                                                    "fetchElevationUS": null,
                                                    "stationTransfers": null,
                                                    "subwayAccessTime": null,
                                                  },
                                                  "dateCreated": 1526305321824,
                                                  "defaultTimeZone": null,
                                                  "deployments": Array [],
                                                  "feedSources": Array [],
                                                  "id": "mock-project-id",
                                                  "lastUpdated": 1553236399556,
                                                  "name": "mock-project",
                                                  "organizationId": null,
                                                  "otpServers": Array [],
                                                  "pinnedDeploymentId": null,
                                                  "routerConfig": Object {
                                                    "carDropoffTime": null,
                                                    "numItineraries": null,
                                                    "requestLogFile": null,
                                                    "stairsReluctance": null,
                                                    "updaters": null,
                                                    "walkSpeed": null,
                                                  },
                                                  "useCustomOsmBounds": false,
                                                  "user": null,
                                                }
                                              }
                                              projectId="mock-project-id"
                                              routeParams={
                                                Object {
                                                  "projectId": "mock-project-id",
                                                }
                                              }
                                              runFetchFeed={[Function]}
                                              saveDeployment={[Function]}
                                              setVisibilityFilter={[Function]}
                                              setVisibilitySearchText={[Function]}
                                              thirdPartySync={[Function]}
                                              updateDeployment={[Function]}
                                              updateFeedSource={[Function]}
                                              updateProject={[Function]}
                                              uploadFeed={[Function]}
                                              user={
                                                Object {
                                                  "isCheckingLogin": false,
                                                  "permissions": UserPermissions {
                                                    "appPermissionLookup": Object {
                                                      "administer-application": Object {
                                                        "type": "administer-application",
                                                      },
                                                    },
                                                    "orgPermissionLookup": Object {},
                                                    "organizationLookup": Object {},
                                                    "projectLookup": Object {},
                                                  },
                                                  "profile": Object {
                                                    "app_metadata": Object {
                                                      "datatools": Array [
                                                        Object {
                                                          "client_id": "mock-client-id",
                                                          "organizations": Array [],
                                                          "permissions": Array [
                                                            Object {
                                                              "type": "administer-application",
                                                            },
                                                          ],
                                                          "projects": Array [],
                                                          "subscriptions": Array [],
                                                        },
                                                      ],
                                                    },
                                                    "clientID": "mock-client-id",
                                                    "created_at": "2016-03-04T18:59:22.569Z",
                                                    "email": "mock-user@conveyal.com",
                                                    "email_verified": true,
                                                    "identities": Array [
                                                      Object {
                                                        "connection": "Username-Password-Authentication",
                                                        "isSocial": false,
                                                        "provider": "auth0",
                                                        "user_id": "12345",
                                                      },
                                                    ],
                                                    "jti": "gibberish",
                                                    "last_password_reset": "2017-07-13T13:58:01.021Z",
                                                    "name": "mock-user@conveyal.com",
                                                    "nickname": "mock-user",
                                                    "persistent": Object {},
                                                    "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
                                                    "sub": "auth0|12345",
                                                    "updated_at": "2019-03-21T19:05:30.180Z",
                                                    "user_id": "auth0|12345",
                                                    "user_metadata": Object {
                                                      "datatools": Array [
                                                        Object {
                                                          "client_id": "mock-client-id",
                                                          "editor": Object {
                                                            "map_id": "mapbox.streets",
                                                          },
                                                          "hideTutorial": true,
                                                          "sidebarExpanded": false,
                                                        },
                                                      ],
                                                      "lang": "en",
                                                    },
                                                  },
                                                  "recentActivity": null,
                                                  "redirectOnSuccess": null,
                                                  "subscriptions": UserSubscriptions {
                                                    "subscriptionLookup": Object {},
                                                  },
                                                  "token": "mock-token",
                                                }
                                              }
                                              visibilityFilter={
                                                Object {
                                                  "feedSourceTableComparisonColumn": null,
                                                  "feedSourceTableFilterCountStrategy": "LATEST",
                                                  "filter": null,
                                                  "searchText": null,
                                                }
                                              }
                                            >
                                              <Row
                                                bsClass="row"
                                                componentClass="div"
                                              >
                                                <div
                                                  className="row"
                                                >
                                                  <ConfirmModal>
                                                    <Modal
                                                      animation={true}
                                                      autoFocus={true}
                                                      backdrop={true}
                                                      bsClass="modal"
                                                      dialogComponentClass={[Function]}
                                                      enforceFocus={true}
                                                      keyboard={true}
                                                      manager={
                                                        ModalManager {
                                                          "containers": Array [],
                                                          "data": Array [],
                                                          "handleContainerOverflow": true,
                                                          "hideSiblingNodes": true,
                                                          "modals": Array [],
                                                        }
                                                      }
                                                      onHide={[Function]}
                                                      renderBackdrop={[Function]}
                                                      restoreFocus={true}
                                                      show={false}
                                                    >
                                                      <Modal
                                                        autoFocus={true}
                                                        backdrop={true}
                                                        backdropClassName="modal-backdrop"
                                                        backdropTransitionTimeout={150}
                                                        containerClassName="modal-open"
                                                        dialogTransitionTimeout={300}
                                                        enforceFocus={true}
                                                        keyboard={true}
                                                        manager={
                                                          ModalManager {
                                                            "containers": Array [],
                                                            "data": Array [],
                                                            "handleContainerOverflow": true,
                                                            "hideSiblingNodes": true,
                                                            "modals": Array [],
                                                          }
                                                        }
                                                        onEntering={[Function]}
                                                        onExited={[Function]}
                                                        onHide={[Function]}
                                                        renderBackdrop={[Function]}
                                                        restoreFocus={true}
                                                        show={false}
                                                        transition={[Function]}
                                                      />
                                                    </Modal>
                                                  </ConfirmModal>
                                                  <Col
                                                    bsClass="col"
                                                    componentClass="div"
                                                    xs={9}
                                                  >
                                                    <div
                                                      className="col-xs-9"
                                                    >
                                                      <DeploymentsList
                                                        createDeployment={[Function]}
                                                        deleteDeployment={[Function]}
                                                        deployments={Array []}
                                                        fetchDeployments={[Function]}
                                                        fetchProjectFeeds={[Function]}
                                                        project={
                                                          Object {
                                                            "autoFetchFeeds": true,
                                                            "autoFetchHour": 0,
                                                            "autoFetchMinute": 0,
                                                            "bounds": null,
                                                            "buildConfig": Object {
                                                              "fares": null,
                                                              "fetchElevationUS": null,
                                                              "stationTransfers": null,
                                                              "subwayAccessTime": null,
                                                            },
                                                            "dateCreated": 1526305321824,
                                                            "defaultTimeZone": null,
                                                            "deployments": Array [],
                                                            "feedSources": Array [],
                                                            "id": "mock-project-id",
                                                            "lastUpdated": 1553236399556,
                                                            "name": "mock-project",
                                                            "organizationId": null,
                                                            "otpServers": Array [],
                                                            "pinnedDeploymentId": null,
                                                            "routerConfig": Object {
                                                              "carDropoffTime": null,
                                                              "numItineraries": null,
                                                              "requestLogFile": null,
                                                              "stairsReluctance": null,
                                                              "updaters": null,
                                                              "walkSpeed": null,
                                                            },
                                                            "useCustomOsmBounds": false,
                                                            "user": null,
                                                          }
                                                        }
                                                        saveDeployment={[Function]}
                                                        updateDeployment={[Function]}
                                                        updateProject={[Function]}
                                                      >
                                                        <Panel
                                                          bsClass="panel"
                                                          bsStyle="default"
                                                          defaultExpanded={false}
                                                          header={
                                                            <Row
                                                              bsClass="row"
                                                              componentClass="div"
                                                            >
                                                              <Col
                                                                bsClass="col"
                                                                componentClass="div"
                                                                xs={4}
                                                              >
                                                                <FormControl
                                                                  bsClass="form-control"
                                                                  componentClass="input"
                                                                  onChange={[Function]}
                                                                  placeholder="Search for deployments"
                                                                />
                                                              </Col>
                                                              <Col
                                                                bsClass="col"
                                                                componentClass="div"
                                                                xs={8}
                                                              >
                                                                <Button
                                                                  active={false}
                                                                  block={false}
                                                                  bsClass="btn"
                                                                  bsStyle="success"
                                                                  className="pull-right"
                                                                  disabled={false}
                                                                  onClick={[Function]}
                                                                >
                                                                  <Glyphicon
                                                                    bsClass="glyphicon"
                                                                    glyph="plus"
                                                                  />
                                                                   
                                                                  New Deployment
                                                                </Button>
                                                              </Col>
                                                            </Row>
                                                          }
                                                        >
                                                          <div
                                                            className="panel panel-default"
                                                          >
                                                            <div
                                                              className="panel-heading"
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="panel-title"
                                                                componentClass="div"
                                                              >
                                                                <div
                                                                  className="panel-title row"
                                                                >
                                                                  <Col
                                                                    bsClass="col"
                                                                    componentClass="div"
                                                                    xs={4}
                                                                  >
                                                                    <div
                                                                      className="col-xs-4"
                                                                    >
                                                                      <FormControl
                                                                        bsClass="form-control"
                                                                        componentClass="input"
                                                                        onChange={[Function]}
                                                                        placeholder="Search for deployments"
                                                                      >
                                                                        <input
                                                                          className="form-control"
                                                                          onChange={[Function]}
                                                                          placeholder="Search for deployments"
                                                                        />
                                                                      </FormControl>
                                                                    </div>
                                                                  </Col>
                                                                  <Col
                                                                    bsClass="col"
                                                                    componentClass="div"
                                                                    xs={8}
                                                                  >
                                                                    <div
                                                                      className="col-xs-8"
                                                                    >
                                                                      <Button
                                                                        active={false}
                                                                        block={false}
                                                                        bsClass="btn"
                                                                        bsStyle="success"
                                                                        className="pull-right"
                                                                        disabled={false}
                                                                        onClick={[Function]}
                                                                      >
                                                                        <button
                                                                          className="pull-right btn btn-success"
                                                                          disabled={false}
                                                                          onClick={[Function]}
                                                                          type="button"
                                                                        >
                                                                          <Glyphicon
                                                                            bsClass="glyphicon"
                                                                            glyph="plus"
                                                                          >
                                                                            <span
                                                                              className="glyphicon glyphicon-plus"
                                                                            />
                                                                          </Glyphicon>
                                                                           
                                                                          New Deployment
                                                                        </button>
                                                                      </Button>
                                                                    </div>
                                                                  </Col>
                                                                </div>
                                                              </Row>
                                                            </div>
                                                            <Table
                                                              bordered={false}
                                                              bsClass="table"
                                                              condensed={false}
                                                              hover={true}
                                                              key=".0"
                                                              responsive={false}
                                                              striped={true}
                                                            >
                                                              <table
                                                                className="table table-striped table-hover"
                                                              >
                                                                <thead>
                                                                  <tr>
                                                                    <th
                                                                      className="col-md-4"
                                                                    >
                                                                      Name
                                                                    </th>
                                                                    <th>
                                                                      Created
                                                                    </th>
                                                                    <th>
                                                                      Last deployed
                                                                    </th>
                                                                    <th>
                                                                      Deployed to
                                                                    </th>
                                                                    <th>
                                                                      # of feeds
                                                                    </th>
                                                                    <th>
                                                                      Test?
                                                                    </th>
                                                                    <th />
                                                                  </tr>
                                                                </thead>
                                                                <tbody />
                                                              </table>
                                                            </Table>
                                                          </div>
                                                        </Panel>
                                                      </DeploymentsList>
                                                    </div>
                                                  </Col>
                                                  <Col
                                                    bsClass="col"
                                                    componentClass="div"
                                                    xs={3}
                                                  >
                                                    <div
                                                      className="col-xs-3"
                                                    >
                                                      <Panel
                                                        bsClass="panel"
                                                        bsStyle="default"
                                                        defaultExpanded={false}
                                                        header={
                                                          <h3>
                                                            Deploying feeds to OTP
                                                          </h3>
                                                        }
                                                      >
                                                        <div
                                                          className="panel panel-default"
                                                        >
                                                          <div
                                                            className="panel-heading"
                                                          >
                                                            <h3
                                                              className="panel-title"
                                                            >
                                                              Deploying feeds to OTP
                                                            </h3>
                                                          </div>
                                                          <div
                                                            className="panel-body"
                                                            key="0"
                                                          >
                                                            <p
                                                              key=".0"
                                                            >
                                                              A collection of feeds can be deployed to OpenTripPlanner (OTP) instances that have been defined in the organization settings.
                                                            </p>
                                                            <LinkContainer
                                                              action="push"
                                                              key=".1"
                                                              onlyActiveOnIndex={false}
                                                              to="/project/mock-project-id/settings/deployment"
                                                            >
                                                              <Button
                                                                action="push"
                                                                active={false}
                                                                block={true}
                                                                bsClass="btn"
                                                                bsStyle="primary"
                                                                disabled={false}
                                                                onClick={[Function]}
                                                              >
                                                                <button
                                                                  action="push"
                                                                  className="btn btn-primary btn-block"
                                                                  disabled={false}
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <Icon
                                                                    type="cog"
                                                                  >
                                                                    <i
                                                                      className="fa fa-cog fa-fw "
                                                                    />
                                                                  </Icon>
                                                                   Edit deployment settings
                                                                </button>
                                                              </Button>
                                                            </LinkContainer>
                                                          </div>
                                                        </div>
                                                      </Panel>
                                                    </div>
                                                  </Col>
                                                </div>
                                              </Row>
                                            </DeploymentsPanel>
                                          </div>
                                        </Transition>
                                      </Fade>
                                    </TabPane>
                                  </Tab>
                                  <Tab
                                    disabled={false}
                                    eventKey="settings"
                                    title={
                                      <span>
                                        <Glyphicon
                                          bsClass="glyphicon"
                                          className="icon-link"
                                          glyph="cog"
                                        />
                                        <span
                                          className="hidden-xs"
                                        >
                                          Settings
                                        </span>
                                      </span>
                                    }
                                  >
                                    <TabPane
                                      bsClass="tab-pane"
                                      eventKey="settings"
                                    >
                                      <Fade
                                        in={false}
                                        mountOnEnter={false}
                                        onEnter={[Function]}
                                        onExited={[Function]}
                                        timeout={300}
                                        transitionAppear={false}
                                        unmountOnExit={false}
                                      >
                                        <Transition
                                          className="fade"
                                          enteredClassName="in"
                                          enteringClassName="in"
                                          in={false}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={300}
                                          transitionAppear={false}
                                          unmountOnExit={false}
                                        >
                                          <div
                                            aria-hidden={true}
                                            aria-labelledby="project-viewer-tabs-tab-settings"
                                            className="tab-pane fade"
                                            id="project-viewer-tabs-pane-settings"
                                            role="tabpanel"
                                          />
                                        </Transition>
                                      </Fade>
                                    </TabPane>
                                  </Tab>
                                </div>
                              </TabContent>
                            </div>
                          </TabContainer>
                        </Tabs>
                      </Uncontrolled(Tabs)>
                    </div>
                  </Grid>
                </div>
                <footer
                  className="manager-footer"
                >
                  <div
                    className="container"
                  >
                    <ul
                      className="list-inline text-center text-muted"
                    >
                      <li>
                        <a
                          href="https://changelog.example.com"
                        >
                          Changelog
                        </a>
                      </li>
                      <li>
                        <a
                          href="http://docs.example.com"
                        >
                          Guide
                        </a>
                      </li>
                      <li>
                        <a
                          href="mailto:support@example.com"
                        >
                          Contact
                        </a>
                      </li>
                    </ul>
                    <p
                      className="text-center text-muted"
                    >
                      <span
                        aria-label="copyright"
                        role="img"
                        title="Copyright"
                      >
                        ©
                      </span>
                       
                      <a
                        href="http://conveyal.com"
                      >
                        Conveyal
                      </a>
                    </p>
                  </div>
                </footer>
              </div>
            </Content>
          </Connect(Content)>
        </div>
      </ManagerPage>
    </ProjectViewer>
  </Connect(ProjectViewer)>
</Provider>
`;
