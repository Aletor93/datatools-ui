// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lib > manager > ActiveProjectViewer should render with newly created project 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ProjectViewer)
    location={
      Object {
        "action": "",
        "hash": "",
        "key": "",
        "pathname": "",
        "query": Object {},
        "search": "",
      }
    }
    routeParams={
      Object {
        "projectId": "mock-project-id",
      }
    }
  >
    <ProjectViewer
      createFeedSource={[Function]}
      deleteProject={[Function]}
      deployPublic={[Function]}
      fetchProjectDeployments={[Function]}
      isFetching={false}
      location={
        Object {
          "action": "",
          "hash": "",
          "key": "",
          "pathname": "",
          "query": Object {},
          "search": "",
        }
      }
      onProjectViewerMount={[Function]}
      project={
        Object {
          "autoFetchFeeds": true,
          "autoFetchHour": 0,
          "autoFetchMinute": 0,
          "bounds": null,
          "buildConfig": Object {
            "fares": null,
            "fetchElevationUS": null,
            "stationTransfers": null,
            "subwayAccessTime": null,
          },
          "dateCreated": 1526305321824,
          "defaultTimeZone": null,
          "deployments": Array [],
          "feedSources": Array [],
          "id": "mock-project-id",
          "lastUpdated": 1553236399556,
          "name": "mock-project",
          "organizationId": null,
          "otpServers": Array [],
          "pinnedDeploymentId": null,
          "routerConfig": Object {
            "carDropoffTime": null,
            "numItineraries": null,
            "requestLogFile": null,
            "stairsReluctance": null,
            "updaters": null,
            "walkSpeed": null,
          },
          "useCustomOsmBounds": false,
          "user": null,
        }
      }
      projectId="mock-project-id"
      routeParams={
        Object {
          "projectId": "mock-project-id",
        }
      }
      updateProject={[Function]}
      user={
        Object {
          "isCheckingLogin": false,
          "permissions": UserPermissions {
            "appPermissionLookup": Object {
              "administer-application": Object {
                "type": "administer-application",
              },
            },
            "orgPermissionLookup": Object {},
            "organizationLookup": Object {},
            "projectLookup": Object {},
          },
          "profile": Object {
            "app_metadata": Object {
              "datatools": Array [
                Object {
                  "client_id": "mock-client-id",
                  "organizations": Array [],
                  "permissions": Array [
                    Object {
                      "type": "administer-application",
                    },
                  ],
                  "projects": Array [],
                  "subscriptions": Array [],
                },
              ],
            },
            "clientID": "mock-client-id",
            "created_at": "2016-03-04T18:59:22.569Z",
            "email": "mock-user@conveyal.com",
            "email_verified": true,
            "identities": Array [
              Object {
                "connection": "Username-Password-Authentication",
                "isSocial": false,
                "provider": "auth0",
                "user_id": "12345",
              },
            ],
            "jti": "gibberish",
            "last_password_reset": "2017-07-13T13:58:01.021Z",
            "name": "mock-user@conveyal.com",
            "nickname": "mock-user",
            "persistent": Object {},
            "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
            "sub": "auth0|12345",
            "updated_at": "2019-03-21T19:05:30.180Z",
            "user_id": "auth0|12345",
            "user_metadata": Object {
              "datatools": Array [
                Object {
                  "client_id": "mock-client-id",
                  "editor": Object {
                    "map_id": "mapbox.streets",
                  },
                  "hideTutorial": true,
                  "sidebarExpanded": false,
                },
              ],
              "lang": "en",
            },
          },
          "recentActivity": null,
          "redirectOnSuccess": null,
          "subscriptions": UserSubscriptions {
            "subscriptionLookup": Object {},
          },
          "token": "mock-token",
        }
      }
    >
      <ManagerPage
        title="mock-project"
      >
        <div>
          <Title />
          <Connect(StatusMessage)>
            <StatusMessage
              dispatch={[Function]}
              message={null}
              sidebarExpanded={true}
            >
              <div
                style={
                  Object {
                    "bottom": "0px",
                    "height": "60px",
                    "left": "140px",
                    "position": "fixed",
                    "zIndex": 1000,
                  }
                }
              />
            </StatusMessage>
          </Connect(StatusMessage)>
          <ConfirmModal>
            <Modal
              animation={true}
              autoFocus={true}
              backdrop={true}
              bsClass="modal"
              dialogComponentClass={[Function]}
              enforceFocus={true}
              keyboard={true}
              manager={
                ModalManager {
                  "add": [Function],
                  "containers": Array [],
                  "data": Array [],
                  "handleContainerOverflow": true,
                  "hideSiblingNodes": true,
                  "isTopModal": [Function],
                  "modals": Array [],
                  "remove": [Function],
                }
              }
              onHide={[Function]}
              renderBackdrop={[Function]}
              restoreFocus={true}
              show={false}
            >
              <Modal
                autoFocus={true}
                backdrop={true}
                backdropClassName="modal-backdrop"
                backdropTransition={[Function]}
                containerClassName="modal-open"
                enforceFocus={true}
                keyboard={true}
                manager={
                  ModalManager {
                    "add": [Function],
                    "containers": Array [],
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "isTopModal": [Function],
                    "modals": Array [],
                    "remove": [Function],
                  }
                }
                onEntering={[Function]}
                onExited={[Function]}
                onHide={[Function]}
                onMouseUp={[Function]}
                renderBackdrop={[Function]}
                restoreFocus={true}
                show={false}
                transition={[Function]}
              />
            </Modal>
          </ConfirmModal>
          <InfoModal>
            <Modal
              animation={true}
              autoFocus={true}
              backdrop={true}
              bsClass="modal"
              dialogComponentClass={[Function]}
              enforceFocus={true}
              keyboard={true}
              manager={
                ModalManager {
                  "add": [Function],
                  "containers": Array [],
                  "data": Array [],
                  "handleContainerOverflow": true,
                  "hideSiblingNodes": true,
                  "isTopModal": [Function],
                  "modals": Array [],
                  "remove": [Function],
                }
              }
              onHide={[Function]}
              renderBackdrop={[Function]}
              restoreFocus={true}
              show={false}
            >
              <Modal
                autoFocus={true}
                backdrop={true}
                backdropClassName="modal-backdrop"
                backdropTransition={[Function]}
                containerClassName="modal-open"
                enforceFocus={true}
                keyboard={true}
                manager={
                  ModalManager {
                    "add": [Function],
                    "containers": Array [],
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "isTopModal": [Function],
                    "modals": Array [],
                    "remove": [Function],
                  }
                }
                onEntering={[Function]}
                onExited={[Function]}
                onHide={[Function]}
                onMouseUp={[Function]}
                renderBackdrop={[Function]}
                restoreFocus={true}
                show={false}
                transition={[Function]}
              />
            </Modal>
          </InfoModal>
          <SelectFileModal>
            <Modal
              animation={true}
              autoFocus={true}
              backdrop={true}
              bsClass="modal"
              dialogComponentClass={[Function]}
              enforceFocus={true}
              keyboard={true}
              manager={
                ModalManager {
                  "add": [Function],
                  "containers": Array [],
                  "data": Array [],
                  "handleContainerOverflow": true,
                  "hideSiblingNodes": true,
                  "isTopModal": [Function],
                  "modals": Array [],
                  "remove": [Function],
                }
              }
              onHide={[Function]}
              renderBackdrop={[Function]}
              restoreFocus={true}
              show={false}
            >
              <Modal
                autoFocus={true}
                backdrop={true}
                backdropClassName="modal-backdrop"
                backdropTransition={[Function]}
                containerClassName="modal-open"
                enforceFocus={true}
                keyboard={true}
                manager={
                  ModalManager {
                    "add": [Function],
                    "containers": Array [],
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "isTopModal": [Function],
                    "modals": Array [],
                    "remove": [Function],
                  }
                }
                onEntering={[Function]}
                onExited={[Function]}
                onHide={[Function]}
                onMouseUp={[Function]}
                renderBackdrop={[Function]}
                restoreFocus={true}
                show={false}
                transition={[Function]}
              />
            </Modal>
          </SelectFileModal>
          <Connect(StatusModal)>
            <StatusModal
              clearStatusModal={[Function]}
              removeEditorLock={[Function]}
            >
              <Modal
                animation={true}
                autoFocus={true}
                backdrop={true}
                bsClass="modal"
                dialogComponentClass={[Function]}
                enforceFocus={true}
                keyboard={true}
                manager={
                  ModalManager {
                    "add": [Function],
                    "containers": Array [],
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "isTopModal": [Function],
                    "modals": Array [],
                    "remove": [Function],
                  }
                }
                onHide={[Function]}
                renderBackdrop={[Function]}
                restoreFocus={true}
                show={false}
              >
                <Modal
                  autoFocus={true}
                  backdrop={true}
                  backdropClassName="modal-backdrop"
                  backdropTransition={[Function]}
                  containerClassName="modal-open"
                  enforceFocus={true}
                  keyboard={true}
                  manager={
                    ModalManager {
                      "add": [Function],
                      "containers": Array [],
                      "data": Array [],
                      "handleContainerOverflow": true,
                      "hideSiblingNodes": true,
                      "isTopModal": [Function],
                      "modals": Array [],
                      "remove": [Function],
                    }
                  }
                  onEntering={[Function]}
                  onExited={[Function]}
                  onHide={[Function]}
                  onMouseUp={[Function]}
                  renderBackdrop={[Function]}
                  restoreFocus={true}
                  show={false}
                  transition={[Function]}
                />
              </Modal>
            </StatusModal>
          </Connect(StatusModal)>
          <Connect(Sidebar)>
            <Sidebar
              appInfo={null}
              expanded={true}
              fetchAppInfo={[Function]}
              hideTutorial={false}
              jobMonitor={
                Object {
                  "jobs": Array [],
                  "retired": Array [],
                  "timer": null,
                  "visible": false,
                }
              }
              logout={[Function]}
              removeRetiredJob={[Function]}
              revokeToken={[Function]}
              setJobMonitorVisible={[Function]}
              startJobMonitor={[Function]}
              user={
                Object {
                  "isCheckingLogin": false,
                  "permissions": UserPermissions {
                    "appPermissionLookup": Object {
                      "administer-application": Object {
                        "type": "administer-application",
                      },
                    },
                    "orgPermissionLookup": Object {},
                    "organizationLookup": Object {},
                    "projectLookup": Object {},
                  },
                  "profile": Object {
                    "app_metadata": Object {
                      "datatools": Array [
                        Object {
                          "client_id": "mock-client-id",
                          "organizations": Array [],
                          "permissions": Array [
                            Object {
                              "type": "administer-application",
                            },
                          ],
                          "projects": Array [],
                          "subscriptions": Array [],
                        },
                      ],
                    },
                    "clientID": "mock-client-id",
                    "created_at": "2016-03-04T18:59:22.569Z",
                    "email": "mock-user@conveyal.com",
                    "email_verified": true,
                    "identities": Array [
                      Object {
                        "connection": "Username-Password-Authentication",
                        "isSocial": false,
                        "provider": "auth0",
                        "user_id": "12345",
                      },
                    ],
                    "jti": "gibberish",
                    "last_password_reset": "2017-07-13T13:58:01.021Z",
                    "name": "mock-user@conveyal.com",
                    "nickname": "mock-user",
                    "persistent": Object {},
                    "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
                    "sub": "auth0|12345",
                    "updated_at": "2019-03-21T19:05:30.180Z",
                    "user_id": "auth0|12345",
                    "user_metadata": Object {
                      "datatools": Array [
                        Object {
                          "client_id": "mock-client-id",
                          "editor": Object {
                            "map_id": "mapbox.streets",
                          },
                          "hideTutorial": true,
                          "sidebarExpanded": false,
                        },
                      ],
                      "lang": "en",
                    },
                  },
                  "recentActivity": null,
                  "redirectOnSuccess": null,
                  "subscriptions": UserSubscriptions {
                    "subscriptionLookup": Object {},
                  },
                  "token": "mock-token",
                }
              }
            >
              <div
                className="Sidebar"
              >
                <Uncontrolled(Navbar)
                  bsStyle="default"
                  inverse={true}
                  style={
                    Object {
                      "minHeight": "500px",
                      "width": 130,
                    }
                  }
                >
                  <Navbar
                    bsClass="navbar"
                    bsStyle="default"
                    collapseOnSelect={false}
                    componentClass="nav"
                    fixedBottom={false}
                    fixedTop={false}
                    fluid={false}
                    inverse={true}
                    onToggle={[Function]}
                    staticTop={false}
                    style={
                      Object {
                        "minHeight": "500px",
                        "width": 130,
                      }
                    }
                  >
                    <nav
                      className="navbar navbar-inverse"
                      style={
                        Object {
                          "minHeight": "500px",
                          "width": 130,
                        }
                      }
                    >
                      <Grid
                        bsClass="container"
                        componentClass="div"
                        fluid={false}
                      >
                        <div
                          className="container"
                        >
                          <Brand
                            expanded={true}
                          >
                            <Link
                              onlyActiveOnIndex={false}
                              style={Object {}}
                              to="/home"
                            >
                              <a
                                onClick={[Function]}
                                style={Object {}}
                              >
                                <div
                                  className="LogoContainer"
                                >
                                  <div
                                    className="Logo"
                                    style={
                                      Object {
                                        "backgroundImage": "url(http://example.com/data_manager.png)",
                                      }
                                    }
                                  />
                                  <div
                                    className="LogoLabel"
                                  >
                                    Data Tools
                                  </div>
                                  <div
                                    className="clearfix"
                                  />
                                </div>
                              </a>
                            </Link>
                          </Brand>
                          <div
                            className="TopNav"
                          >
                            <Connect(SidebarNavItem)
                              active={false}
                              icon="home"
                              label="Home"
                              link="/home"
                            >
                              <SidebarNavItem
                                active={false}
                                expanded={true}
                                icon="home"
                                label="Home"
                                link="/home"
                              >
                                <Link
                                  onlyActiveOnIndex={false}
                                  style={
                                    Object {
                                      "textDecoration": "none",
                                    }
                                  }
                                  to="/home"
                                >
                                  <a
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "textDecoration": "none",
                                      }
                                    }
                                  >
                                    <button
                                      onClick={false}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(0,0,0,0)",
                                          "border": "none",
                                          "borderLeft": "4px solid rgba(0,0,0,0)",
                                          "color": "#ccc",
                                          "cursor": "pointer",
                                          "marginBottom": 5,
                                          "marginLeft": -15,
                                          "marginRight": 0,
                                          "marginTop": 5,
                                          "paddingBottom": 10,
                                          "paddingLeft": 10,
                                          "paddingRight": 10,
                                          "paddingTop": 10,
                                          "textDecoration": "none",
                                        }
                                      }
                                    >
                                      <NavIcon
                                        icon="home"
                                      >
                                        <div
                                          className="SidebarNavItemIcon"
                                        >
                                          <Icon
                                            className="fa-lg"
                                            size="lg"
                                            type="home"
                                          >
                                            <i
                                              className="fa fa-home fa-fw fa-lg"
                                              size="lg"
                                            />
                                          </Icon>
                                        </div>
                                      </NavIcon>
                                      <div
                                        className="sidebar-nav-label"
                                      >
                                        Home
                                      </div>
                                      <div
                                        style={
                                          Object {
                                            "clear": "both",
                                          }
                                        }
                                      />
                                    </button>
                                  </a>
                                </Link>
                              </SidebarNavItem>
                            </Connect(SidebarNavItem)>
                          </div>
                          <div
                            className="BottomNav"
                          >
                            <SidebarNavItem
                              expanded={true}
                              finished={false}
                              icon="bell"
                              keyName="job"
                              label="Server jobs"
                              loading={false}
                              onClick={[Function]}
                            >
                              <button
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "border": "none",
                                    "borderLeft": "4px solid rgba(0,0,0,0)",
                                    "color": "#ccc",
                                    "cursor": "pointer",
                                    "marginBottom": 5,
                                    "marginLeft": -15,
                                    "marginRight": 0,
                                    "marginTop": 5,
                                    "paddingBottom": 10,
                                    "paddingLeft": 10,
                                    "paddingRight": 10,
                                    "paddingTop": 10,
                                    "textDecoration": "none",
                                  }
                                }
                              >
                                <NavIcon
                                  icon="bell"
                                  loading={false}
                                >
                                  <div
                                    className="SidebarNavItemIcon"
                                  >
                                    <Icon
                                      className="fa-lg"
                                      size="lg"
                                      type="bell"
                                    >
                                      <i
                                        className="fa fa-bell fa-fw fa-lg"
                                        size="lg"
                                      />
                                    </Icon>
                                  </div>
                                </NavIcon>
                                <div
                                  className="sidebar-nav-label"
                                >
                                  Server jobs
                                </div>
                                <div
                                  style={
                                    Object {
                                      "clear": "both",
                                    }
                                  }
                                />
                              </button>
                            </SidebarNavItem>
                            <SidebarNavItem
                              expanded={true}
                              icon="user"
                              keyName="user"
                              label="Account"
                              onClick={[Function]}
                            >
                              <button
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "border": "none",
                                    "borderLeft": "4px solid rgba(0,0,0,0)",
                                    "color": "#ccc",
                                    "cursor": "pointer",
                                    "marginBottom": 5,
                                    "marginLeft": -15,
                                    "marginRight": 0,
                                    "marginTop": 5,
                                    "paddingBottom": 10,
                                    "paddingLeft": 10,
                                    "paddingRight": 10,
                                    "paddingTop": 10,
                                    "textDecoration": "none",
                                  }
                                }
                              >
                                <NavIcon
                                  icon="user"
                                >
                                  <div
                                    className="SidebarNavItemIcon"
                                  >
                                    <Icon
                                      className="fa-lg"
                                      size="lg"
                                      type="user"
                                    >
                                      <i
                                        className="fa fa-user fa-fw fa-lg"
                                        size="lg"
                                      />
                                    </Icon>
                                  </div>
                                </NavIcon>
                                <div
                                  className="sidebar-nav-label"
                                >
                                  Account
                                </div>
                                <div
                                  style={
                                    Object {
                                      "clear": "both",
                                    }
                                  }
                                />
                              </button>
                            </SidebarNavItem>
                            <SidebarNavItem
                              expanded={true}
                              icon="gear"
                              keyName="help"
                              label="Settings"
                              onClick={[Function]}
                            >
                              <button
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "border": "none",
                                    "borderLeft": "4px solid rgba(0,0,0,0)",
                                    "color": "#ccc",
                                    "cursor": "pointer",
                                    "marginBottom": 5,
                                    "marginLeft": -15,
                                    "marginRight": 0,
                                    "marginTop": 5,
                                    "paddingBottom": 10,
                                    "paddingLeft": 10,
                                    "paddingRight": 10,
                                    "paddingTop": 10,
                                    "textDecoration": "none",
                                  }
                                }
                              >
                                <NavIcon
                                  icon="gear"
                                >
                                  <div
                                    className="SidebarNavItemIcon"
                                  >
                                    <Icon
                                      className="fa-lg"
                                      size="lg"
                                      type="gear"
                                    >
                                      <i
                                        className="fa fa-gear fa-fw fa-lg"
                                        size="lg"
                                      />
                                    </Icon>
                                  </div>
                                </NavIcon>
                                <div
                                  className="sidebar-nav-label"
                                >
                                  Settings
                                </div>
                                <div
                                  style={
                                    Object {
                                      "clear": "both",
                                    }
                                  }
                                />
                              </button>
                            </SidebarNavItem>
                          </div>
                        </div>
                      </Grid>
                    </nav>
                  </Navbar>
                </Uncontrolled(Navbar)>
                <JobMonitor
                  close={[Function]}
                  expanded={true}
                  jobMonitor={
                    Object {
                      "jobs": Array [],
                      "retired": Array [],
                      "timer": null,
                      "visible": false,
                    }
                  }
                  removeRetiredJob={[Function]}
                  visible={false}
                >
                  <SidebarPopover
                    close={[Function]}
                    expanded={true}
                    fixedHeight={300}
                    jobMonitor={
                      Object {
                        "jobs": Array [],
                        "retired": Array [],
                        "timer": null,
                        "visible": false,
                      }
                    }
                    minMarginBottom={75}
                    removeRetiredJob={[Function]}
                    title="Server Jobs"
                    visible={false}
                  >
                    <Popover
                      arrowOffsetTop={15}
                      bsClass="popover"
                      id="ptest"
                      placement="right"
                      style={
                        Object {
                          "height": 300,
                          "marginLeft": 140,
                          "maxWidth": 276,
                          "position": "fixed",
                          "top": 10,
                          "visibility": "hidden",
                          "width": 276,
                        }
                      }
                      title={
                        <div>
                          <span>
                            Server Jobs
                          </span>
                          <Icon
                            className="pull-right"
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                            type="remove"
                          />
                        </div>
                      }
                    >
                      <div
                        className="popover right"
                        id="ptest"
                        role="tooltip"
                        style={
                          Object {
                            "display": "block",
                            "height": 300,
                            "left": undefined,
                            "marginLeft": 140,
                            "maxWidth": 276,
                            "position": "fixed",
                            "top": 10,
                            "visibility": "hidden",
                            "width": 276,
                          }
                        }
                      >
                        <div
                          className="arrow"
                          style={
                            Object {
                              "left": undefined,
                              "top": 15,
                            }
                          }
                        />
                        <h3
                          className="popover-title"
                        >
                          <div>
                            <span>
                              Server Jobs
                            </span>
                            <Icon
                              className="pull-right"
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                              type="remove"
                            >
                              <i
                                className="fa fa-remove fa-fw pull-right"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "cursor": "pointer",
                                  }
                                }
                              />
                            </Icon>
                          </div>
                        </h3>
                        <div
                          className="popover-content"
                        >
                          <div
                            className="job-monitor"
                          >
                            <div
                              className="job-list"
                            >
                              <ul
                                className="list-unstyled"
                              />
                            </div>
                            <div
                              style={
                                Object {
                                  "marginTop": 8,
                                }
                              }
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsSize="small"
                                bsStyle="default"
                                data-test-id="clear-completed-jobs-button"
                                disabled={true}
                                onClick={[Function]}
                                style={
                                  Object {
                                    "float": "right",
                                  }
                                }
                              >
                                <button
                                  className="btn btn-sm btn-default"
                                  data-test-id="clear-completed-jobs-button"
                                  disabled={true}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "float": "right",
                                    }
                                  }
                                  type="button"
                                >
                                  <Icon
                                    type="times-circle"
                                  >
                                    <i
                                      className="fa fa-times-circle fa-fw "
                                    />
                                  </Icon>
                                   Clear completed
                                </button>
                              </Button>
                              <div
                                style={
                                  Object {
                                    "fontSize": 13,
                                    "paddingTop": 6,
                                  }
                                }
                              >
                                <span
                                  data-test-id="possibly-active-jobs"
                                >
                                  No active jobs
                                </span>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </Popover>
                  </SidebarPopover>
                </JobMonitor>
                <SidebarPopover
                  close={[Function]}
                  expanded={true}
                  title="mock-user@conveyal.com"
                  visible={false}
                >
                  <Popover
                    arrowOffsetTop={15}
                    bsClass="popover"
                    id="ptest"
                    placement="right"
                    style={
                      Object {
                        "height": undefined,
                        "marginLeft": 140,
                        "maxWidth": 276,
                        "position": "fixed",
                        "top": 10,
                        "visibility": "hidden",
                        "width": 276,
                      }
                    }
                    title={
                      <div>
                        <span>
                          mock-user@conveyal.com
                        </span>
                        <Icon
                          className="pull-right"
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                          type="remove"
                        />
                      </div>
                    }
                  >
                    <div
                      className="popover right"
                      id="ptest"
                      role="tooltip"
                      style={
                        Object {
                          "display": "block",
                          "height": undefined,
                          "left": undefined,
                          "marginLeft": 140,
                          "maxWidth": 276,
                          "position": "fixed",
                          "top": 10,
                          "visibility": "hidden",
                          "width": 276,
                        }
                      }
                    >
                      <div
                        className="arrow"
                        style={
                          Object {
                            "left": undefined,
                            "top": 15,
                          }
                        }
                      />
                      <h3
                        className="popover-title"
                      >
                        <div>
                          <span>
                            mock-user@conveyal.com
                          </span>
                          <Icon
                            className="pull-right"
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                            type="remove"
                          >
                            <i
                              className="fa fa-remove fa-fw pull-right"
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            />
                          </Icon>
                        </div>
                      </h3>
                      <div
                        className="popover-content"
                      >
                        <UserButtons
                          logout={[Function]}
                          user={
                            Object {
                              "isCheckingLogin": false,
                              "permissions": UserPermissions {
                                "appPermissionLookup": Object {
                                  "administer-application": Object {
                                    "type": "administer-application",
                                  },
                                },
                                "orgPermissionLookup": Object {},
                                "organizationLookup": Object {},
                                "projectLookup": Object {},
                              },
                              "profile": Object {
                                "app_metadata": Object {
                                  "datatools": Array [
                                    Object {
                                      "client_id": "mock-client-id",
                                      "organizations": Array [],
                                      "permissions": Array [
                                        Object {
                                          "type": "administer-application",
                                        },
                                      ],
                                      "projects": Array [],
                                      "subscriptions": Array [],
                                    },
                                  ],
                                },
                                "clientID": "mock-client-id",
                                "created_at": "2016-03-04T18:59:22.569Z",
                                "email": "mock-user@conveyal.com",
                                "email_verified": true,
                                "identities": Array [
                                  Object {
                                    "connection": "Username-Password-Authentication",
                                    "isSocial": false,
                                    "provider": "auth0",
                                    "user_id": "12345",
                                  },
                                ],
                                "jti": "gibberish",
                                "last_password_reset": "2017-07-13T13:58:01.021Z",
                                "name": "mock-user@conveyal.com",
                                "nickname": "mock-user",
                                "persistent": Object {},
                                "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
                                "sub": "auth0|12345",
                                "updated_at": "2019-03-21T19:05:30.180Z",
                                "user_id": "auth0|12345",
                                "user_metadata": Object {
                                  "datatools": Array [
                                    Object {
                                      "client_id": "mock-client-id",
                                      "editor": Object {
                                        "map_id": "mapbox.streets",
                                      },
                                      "hideTutorial": true,
                                      "sidebarExpanded": false,
                                    },
                                  ],
                                  "lang": "en",
                                },
                              },
                              "recentActivity": null,
                              "redirectOnSuccess": null,
                              "subscriptions": UserSubscriptions {
                                "subscriptionLookup": Object {},
                              },
                              "token": "mock-token",
                            }
                          }
                        >
                          <ButtonToolbar
                            bsClass="btn-toolbar"
                          >
                            <div
                              className="btn-toolbar"
                              role="toolbar"
                            >
                              <LinkContainer
                                action="push"
                                onlyActiveOnIndex={false}
                                to="/settings/profile"
                              >
                                <Button
                                  action="push"
                                  active={false}
                                  block={false}
                                  bsClass="btn"
                                  bsSize="small"
                                  bsStyle="default"
                                  disabled={false}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "margin": 2,
                                    }
                                  }
                                >
                                  <button
                                    action="push"
                                    className="btn btn-sm btn-default"
                                    disabled={false}
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "margin": 2,
                                      }
                                    }
                                    type="button"
                                  >
                                    <Icon
                                      type="user"
                                    >
                                      <i
                                        className="fa fa-user fa-fw "
                                      />
                                    </Icon>
                                     My account
                                  </button>
                                </Button>
                              </LinkContainer>
                              <LinkContainer
                                action="push"
                                onlyActiveOnIndex={false}
                                to="/admin/users"
                              >
                                <Button
                                  action="push"
                                  active={false}
                                  block={false}
                                  bsClass="btn"
                                  bsSize="small"
                                  bsStyle="default"
                                  disabled={false}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "margin": 2,
                                    }
                                  }
                                >
                                  <button
                                    action="push"
                                    className="btn btn-sm btn-default"
                                    disabled={false}
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "margin": 2,
                                      }
                                    }
                                    type="button"
                                  >
                                    <Icon
                                      type="cog"
                                    >
                                      <i
                                        className="fa fa-cog fa-fw "
                                      />
                                    </Icon>
                                     Admin
                                  </button>
                                </Button>
                              </LinkContainer>
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsSize="small"
                                bsStyle="primary"
                                disabled={false}
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 2,
                                  }
                                }
                              >
                                <button
                                  className="btn btn-sm btn-primary"
                                  disabled={false}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "margin": 2,
                                    }
                                  }
                                  type="button"
                                >
                                  <Icon
                                    type="sign-out"
                                  >
                                    <i
                                      className="fa fa-sign-out fa-fw "
                                    />
                                  </Icon>
                                   Log out
                                </button>
                              </Button>
                            </div>
                          </ButtonToolbar>
                        </UserButtons>
                      </div>
                    </div>
                  </Popover>
                </SidebarPopover>
                <SidebarPopover
                  close={[Function]}
                  expanded={true}
                  title="Settings"
                  visible={false}
                  width={300}
                >
                  <Popover
                    arrowOffsetTop={15}
                    bsClass="popover"
                    id="ptest"
                    placement="right"
                    style={
                      Object {
                        "height": undefined,
                        "marginLeft": 140,
                        "maxWidth": 300,
                        "position": "fixed",
                        "top": 10,
                        "visibility": "hidden",
                        "width": 300,
                      }
                    }
                    title={
                      <div>
                        <span>
                          Settings
                        </span>
                        <Icon
                          className="pull-right"
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                          type="remove"
                        />
                      </div>
                    }
                  >
                    <div
                      className="popover right"
                      id="ptest"
                      role="tooltip"
                      style={
                        Object {
                          "display": "block",
                          "height": undefined,
                          "left": undefined,
                          "marginLeft": 140,
                          "maxWidth": 300,
                          "position": "fixed",
                          "top": 10,
                          "visibility": "hidden",
                          "width": 300,
                        }
                      }
                    >
                      <div
                        className="arrow"
                        style={
                          Object {
                            "left": undefined,
                            "top": 15,
                          }
                        }
                      />
                      <h3
                        className="popover-title"
                      >
                        <div>
                          <span>
                            Settings
                          </span>
                          <Icon
                            className="pull-right"
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                            type="remove"
                          >
                            <i
                              className="fa fa-remove fa-fw pull-right"
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            />
                          </Icon>
                        </div>
                      </h3>
                      <div
                        className="popover-content"
                      >
                        <div>
                          <div
                            className="app-info"
                          >
                            <h5>
                              About this app
                            </h5>
                            <table>
                              <tbody>
                                <tr>
                                  <td>
                                    UI Version:
                                  </td>
                                  <td>
                                    Unknown
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    UI deployed at:
                                  </td>
                                  <td>
                                    Unknown
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    Server version:
                                  </td>
                                  <td>
                                    Unknown
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>
                      </div>
                    </div>
                  </Popover>
                </SidebarPopover>
              </div>
            </Sidebar>
          </Connect(Sidebar)>
          <Connect(Content)>
            <Content
              sidebarExpanded={true}
            >
              <div
                style={
                  Object {
                    "bottom": 0,
                    "left": 130,
                    "overflowX": "hidden",
                    "overflowY": "scroll",
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "marginBottom": "-140px",
                      "minHeight": "100%",
                      "padding": "20px",
                      "paddingBottom": "140px",
                      "position": "relative",
                    }
                  }
                >
                  <Grid
                    bsClass="container"
                    componentClass="div"
                    fluid={true}
                  >
                    <div
                      className="container-fluid"
                    >
                      <Row
                        bsClass="row"
                        className="project-header"
                        componentClass="div"
                      >
                        <div
                          className="project-header row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={12}
                          >
                            <div
                              className="col-xs-12"
                            >
                              <h3>
                                <Icon
                                  className="icon-link"
                                  type="folder-open-o"
                                >
                                  <i
                                    className="fa fa-folder-open-o fa-fw icon-link"
                                  />
                                </Icon>
                                <Link
                                  onlyActiveOnIndex={false}
                                  style={Object {}}
                                  to="/project/mock-project-id"
                                >
                                  <a
                                    onClick={[Function]}
                                    style={Object {}}
                                  >
                                    mock-project
                                  </a>
                                </Link>
                                <ButtonToolbar
                                  bsClass="btn-toolbar"
                                  className="pull-right"
                                >
                                  <div
                                    className="pull-right btn-toolbar"
                                    role="toolbar"
                                  />
                                </ButtonToolbar>
                              </h3>
                              <ul
                                className="list-unstyled list-inline small"
                                style={
                                  Object {
                                    "marginBottom": "0px",
                                  }
                                }
                              >
                                <li>
                                  <Icon
                                    type="cloud-download"
                                  >
                                    <i
                                      className="fa fa-cloud-download fa-fw "
                                    />
                                  </Icon>
                                   
                                  0:00
                                </li>
                              </ul>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Uncontrolled(Tabs)
                        activeKey="sources"
                        id="project-viewer-tabs"
                        mountOnEnter={true}
                        onSelect={[Function]}
                      >
                        <Tabs
                          activeKey="sources"
                          animation={true}
                          bsClass="tab"
                          bsStyle="tabs"
                          id="project-viewer-tabs"
                          mountOnEnter={true}
                          onSelect={[Function]}
                          unmountOnExit={false}
                        >
                          <TabContainer
                            activeKey="sources"
                            id="project-viewer-tabs"
                            onSelect={[Function]}
                          >
                            <div
                              id="project-viewer-tabs"
                            >
                              <Nav
                                bsClass="nav"
                                bsStyle="tabs"
                                justified={false}
                                pullLeft={false}
                                pullRight={false}
                                role="tablist"
                                stacked={false}
                              >
                                <ul
                                  className="nav nav-tabs"
                                  role="tablist"
                                >
                                  <NavItem
                                    active={true}
                                    activeKey="sources"
                                    aria-controls="project-viewer-tabs-pane-sources"
                                    disabled={false}
                                    eventKey="sources"
                                    id="project-viewer-tabs-tab-sources"
                                    key=".$.0"
                                    onKeyDown={[Function]}
                                    onSelect={[Function]}
                                    role="tab"
                                  >
                                    <li
                                      className="active"
                                      role="presentation"
                                    >
                                      <SafeAnchor
                                        aria-controls="project-viewer-tabs-pane-sources"
                                        aria-selected={true}
                                        componentClass="a"
                                        disabled={false}
                                        id="project-viewer-tabs-tab-sources"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="tab"
                                      >
                                        <a
                                          aria-controls="project-viewer-tabs-pane-sources"
                                          aria-selected={true}
                                          href="#"
                                          id="project-viewer-tabs-tab-sources"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="tab"
                                        >
                                          <span>
                                            <Glyphicon
                                              bsClass="glyphicon"
                                              className="icon-link"
                                              glyph="list"
                                            >
                                              <span
                                                className="icon-link glyphicon glyphicon-list"
                                              />
                                            </Glyphicon>
                                            <span
                                              className="hidden-xs"
                                            >
                                              Feed Sources
                                            </span>
                                          </span>
                                        </a>
                                      </SafeAnchor>
                                    </li>
                                  </NavItem>
                                  <NavItem
                                    active={false}
                                    activeKey="sources"
                                    aria-controls="project-viewer-tabs-pane-deployments"
                                    disabled={false}
                                    eventKey="deployments"
                                    id="project-viewer-tabs-tab-deployments"
                                    key=".$.1"
                                    onKeyDown={[Function]}
                                    onSelect={[Function]}
                                    role="tab"
                                    tabIndex={-1}
                                  >
                                    <li
                                      className=""
                                      role="presentation"
                                    >
                                      <SafeAnchor
                                        aria-controls="project-viewer-tabs-pane-deployments"
                                        aria-selected={false}
                                        componentClass="a"
                                        disabled={false}
                                        id="project-viewer-tabs-tab-deployments"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="tab"
                                        tabIndex={-1}
                                      >
                                        <a
                                          aria-controls="project-viewer-tabs-pane-deployments"
                                          aria-selected={false}
                                          href="#"
                                          id="project-viewer-tabs-tab-deployments"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="tab"
                                          tabIndex={-1}
                                        >
                                          <span>
                                            <Glyphicon
                                              bsClass="glyphicon"
                                              className="icon-link"
                                              glyph="globe"
                                            >
                                              <span
                                                className="icon-link glyphicon glyphicon-globe"
                                              />
                                            </Glyphicon>
                                            <span
                                              className="hidden-xs"
                                            >
                                              Deployments
                                            </span>
                                          </span>
                                        </a>
                                      </SafeAnchor>
                                    </li>
                                  </NavItem>
                                  <NavItem
                                    active={false}
                                    activeKey="sources"
                                    aria-controls="project-viewer-tabs-pane-settings"
                                    disabled={false}
                                    eventKey="settings"
                                    id="project-viewer-tabs-tab-settings"
                                    key=".$.2"
                                    onKeyDown={[Function]}
                                    onSelect={[Function]}
                                    role="tab"
                                    tabIndex={-1}
                                  >
                                    <li
                                      className=""
                                      role="presentation"
                                    >
                                      <SafeAnchor
                                        aria-controls="project-viewer-tabs-pane-settings"
                                        aria-selected={false}
                                        componentClass="a"
                                        disabled={false}
                                        id="project-viewer-tabs-tab-settings"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="tab"
                                        tabIndex={-1}
                                      >
                                        <a
                                          aria-controls="project-viewer-tabs-pane-settings"
                                          aria-selected={false}
                                          href="#"
                                          id="project-viewer-tabs-tab-settings"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="tab"
                                          tabIndex={-1}
                                        >
                                          <span>
                                            <Glyphicon
                                              bsClass="glyphicon"
                                              className="icon-link"
                                              glyph="cog"
                                            >
                                              <span
                                                className="icon-link glyphicon glyphicon-cog"
                                              />
                                            </Glyphicon>
                                            <span
                                              className="hidden-xs"
                                            >
                                              Settings
                                            </span>
                                          </span>
                                        </a>
                                      </SafeAnchor>
                                    </li>
                                  </NavItem>
                                </ul>
                              </Nav>
                              <TabContent
                                animation={true}
                                bsClass="tab"
                                componentClass="div"
                                mountOnEnter={true}
                                unmountOnExit={false}
                              >
                                <div
                                  className="tab-content"
                                >
                                  <Tab
                                    eventKey="sources"
                                    title={
                                      <span>
                                        <Glyphicon
                                          bsClass="glyphicon"
                                          className="icon-link"
                                          glyph="list"
                                        />
                                        <span
                                          className="hidden-xs"
                                        >
                                          Feed Sources
                                        </span>
                                      </span>
                                    }
                                  >
                                    <TabPane
                                      bsClass="tab-pane"
                                      eventKey="sources"
                                    >
                                      <Fade
                                        appear={false}
                                        in={true}
                                        mountOnEnter={true}
                                        onEnter={[Function]}
                                        onExited={[Function]}
                                        timeout={300}
                                        unmountOnExit={false}
                                      >
                                        <Transition
                                          appear={false}
                                          enter={true}
                                          exit={true}
                                          in={true}
                                          mountOnEnter={true}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={300}
                                          unmountOnExit={false}
                                        >
                                          <div
                                            aria-hidden={false}
                                            aria-labelledby="project-viewer-tabs-tab-sources"
                                            className="fade tab-pane active in"
                                            id="project-viewer-tabs-pane-sources"
                                            role="tabpanel"
                                          >
                                            <Row
                                              bsClass="row"
                                              componentClass="div"
                                            >
                                              <div
                                                className="row"
                                              >
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  sm={10}
                                                  xs={12}
                                                >
                                                  <div
                                                    className="col-sm-10 col-xs-12"
                                                  >
                                                    <Connect(FeedSourceTable)
                                                      onNewFeedSourceClick={[Function]}
                                                      project={
                                                        Object {
                                                          "autoFetchFeeds": true,
                                                          "autoFetchHour": 0,
                                                          "autoFetchMinute": 0,
                                                          "bounds": null,
                                                          "buildConfig": Object {
                                                            "fares": null,
                                                            "fetchElevationUS": null,
                                                            "stationTransfers": null,
                                                            "subwayAccessTime": null,
                                                          },
                                                          "dateCreated": 1526305321824,
                                                          "defaultTimeZone": null,
                                                          "deployments": Array [],
                                                          "feedSources": Array [],
                                                          "id": "mock-project-id",
                                                          "lastUpdated": 1553236399556,
                                                          "name": "mock-project",
                                                          "organizationId": null,
                                                          "otpServers": Array [],
                                                          "pinnedDeploymentId": null,
                                                          "routerConfig": Object {
                                                            "carDropoffTime": null,
                                                            "numItineraries": null,
                                                            "requestLogFile": null,
                                                            "stairsReluctance": null,
                                                            "updaters": null,
                                                            "walkSpeed": null,
                                                          },
                                                          "useCustomOsmBounds": false,
                                                          "user": null,
                                                        }
                                                      }
                                                    >
                                                      <FeedSourceTable
                                                        comparisonColumn={null}
                                                        feedSources={Array []}
                                                        filteredFeedSources={Array []}
                                                        isFetching={false}
                                                        isNotAdmin={false}
                                                        onNewFeedSourceClick={[Function]}
                                                        project={
                                                          Object {
                                                            "autoFetchFeeds": true,
                                                            "autoFetchHour": 0,
                                                            "autoFetchMinute": 0,
                                                            "bounds": null,
                                                            "buildConfig": Object {
                                                              "fares": null,
                                                              "fetchElevationUS": null,
                                                              "stationTransfers": null,
                                                              "subwayAccessTime": null,
                                                            },
                                                            "dateCreated": 1526305321824,
                                                            "defaultTimeZone": null,
                                                            "deployments": Array [],
                                                            "feedSources": Array [],
                                                            "id": "mock-project-id",
                                                            "lastUpdated": 1553236399556,
                                                            "name": "mock-project",
                                                            "organizationId": null,
                                                            "otpServers": Array [],
                                                            "pinnedDeploymentId": null,
                                                            "routerConfig": Object {
                                                              "carDropoffTime": null,
                                                              "numItineraries": null,
                                                              "requestLogFile": null,
                                                              "stairsReluctance": null,
                                                              "updaters": null,
                                                              "walkSpeed": null,
                                                            },
                                                            "useCustomOsmBounds": false,
                                                            "user": null,
                                                          }
                                                        }
                                                        sort="alphabetically-asc"
                                                        user={
                                                          Object {
                                                            "isCheckingLogin": false,
                                                            "permissions": UserPermissions {
                                                              "appPermissionLookup": Object {
                                                                "administer-application": Object {
                                                                  "type": "administer-application",
                                                                },
                                                              },
                                                              "orgPermissionLookup": Object {},
                                                              "organizationLookup": Object {},
                                                              "projectLookup": Object {},
                                                            },
                                                            "profile": Object {
                                                              "app_metadata": Object {
                                                                "datatools": Array [
                                                                  Object {
                                                                    "client_id": "mock-client-id",
                                                                    "organizations": Array [],
                                                                    "permissions": Array [
                                                                      Object {
                                                                        "type": "administer-application",
                                                                      },
                                                                    ],
                                                                    "projects": Array [],
                                                                    "subscriptions": Array [],
                                                                  },
                                                                ],
                                                              },
                                                              "clientID": "mock-client-id",
                                                              "created_at": "2016-03-04T18:59:22.569Z",
                                                              "email": "mock-user@conveyal.com",
                                                              "email_verified": true,
                                                              "identities": Array [
                                                                Object {
                                                                  "connection": "Username-Password-Authentication",
                                                                  "isSocial": false,
                                                                  "provider": "auth0",
                                                                  "user_id": "12345",
                                                                },
                                                              ],
                                                              "jti": "gibberish",
                                                              "last_password_reset": "2017-07-13T13:58:01.021Z",
                                                              "name": "mock-user@conveyal.com",
                                                              "nickname": "mock-user",
                                                              "persistent": Object {},
                                                              "picture": "https://s.gravatar.com/avatar/f8660ca52d1229e3d55e88f2db4affda?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fmu.png",
                                                              "sub": "auth0|12345",
                                                              "updated_at": "2019-03-21T19:05:30.180Z",
                                                              "user_id": "auth0|12345",
                                                              "user_metadata": Object {
                                                                "datatools": Array [
                                                                  Object {
                                                                    "client_id": "mock-client-id",
                                                                    "editor": Object {
                                                                      "map_id": "mapbox.streets",
                                                                    },
                                                                    "hideTutorial": true,
                                                                    "sidebarExpanded": false,
                                                                  },
                                                                ],
                                                                "lang": "en",
                                                              },
                                                            },
                                                            "recentActivity": null,
                                                            "redirectOnSuccess": null,
                                                            "subscriptions": UserSubscriptions {
                                                              "subscriptionLookup": Object {},
                                                            },
                                                            "token": "mock-token",
                                                          }
                                                        }
                                                      >
                                                        <Uncontrolled(Panel)
                                                          header={
                                                            <Connect(ProjectFeedListToolbar)
                                                              onNewFeedSourceClick={[Function]}
                                                              project={
                                                                Object {
                                                                  "autoFetchFeeds": true,
                                                                  "autoFetchHour": 0,
                                                                  "autoFetchMinute": 0,
                                                                  "bounds": null,
                                                                  "buildConfig": Object {
                                                                    "fares": null,
                                                                    "fetchElevationUS": null,
                                                                    "stationTransfers": null,
                                                                    "subwayAccessTime": null,
                                                                  },
                                                                  "dateCreated": 1526305321824,
                                                                  "defaultTimeZone": null,
                                                                  "deployments": Array [],
                                                                  "feedSources": Array [],
                                                                  "id": "mock-project-id",
                                                                  "lastUpdated": 1553236399556,
                                                                  "name": "mock-project",
                                                                  "organizationId": null,
                                                                  "otpServers": Array [],
                                                                  "pinnedDeploymentId": null,
                                                                  "routerConfig": Object {
                                                                    "carDropoffTime": null,
                                                                    "numItineraries": null,
                                                                    "requestLogFile": null,
                                                                    "stairsReluctance": null,
                                                                    "updaters": null,
                                                                    "walkSpeed": null,
                                                                  },
                                                                  "useCustomOsmBounds": false,
                                                                  "user": null,
                                                                }
                                                              }
                                                            />
                                                          }
                                                        >
                                                          <Panel
                                                            bsClass="panel"
                                                            bsStyle="default"
                                                            header={
                                                              <Connect(ProjectFeedListToolbar)
                                                                onNewFeedSourceClick={[Function]}
                                                                project={
                                                                  Object {
                                                                    "autoFetchFeeds": true,
                                                                    "autoFetchHour": 0,
                                                                    "autoFetchMinute": 0,
                                                                    "bounds": null,
                                                                    "buildConfig": Object {
                                                                      "fares": null,
                                                                      "fetchElevationUS": null,
                                                                      "stationTransfers": null,
                                                                      "subwayAccessTime": null,
                                                                    },
                                                                    "dateCreated": 1526305321824,
                                                                    "defaultTimeZone": null,
                                                                    "deployments": Array [],
                                                                    "feedSources": Array [],
                                                                    "id": "mock-project-id",
                                                                    "lastUpdated": 1553236399556,
                                                                    "name": "mock-project",
                                                                    "organizationId": null,
                                                                    "otpServers": Array [],
                                                                    "pinnedDeploymentId": null,
                                                                    "routerConfig": Object {
                                                                      "carDropoffTime": null,
                                                                      "numItineraries": null,
                                                                      "requestLogFile": null,
                                                                      "stairsReluctance": null,
                                                                      "updaters": null,
                                                                      "walkSpeed": null,
                                                                    },
                                                                    "useCustomOsmBounds": false,
                                                                    "user": null,
                                                                  }
                                                                }
                                                              />
                                                            }
                                                            onToggle={[Function]}
                                                          >
                                                            <div
                                                              className="panel panel-default"
                                                              header={
                                                                <Connect(ProjectFeedListToolbar)
                                                                  onNewFeedSourceClick={[Function]}
                                                                  project={
                                                                    Object {
                                                                      "autoFetchFeeds": true,
                                                                      "autoFetchHour": 0,
                                                                      "autoFetchMinute": 0,
                                                                      "bounds": null,
                                                                      "buildConfig": Object {
                                                                        "fares": null,
                                                                        "fetchElevationUS": null,
                                                                        "stationTransfers": null,
                                                                        "subwayAccessTime": null,
                                                                      },
                                                                      "dateCreated": 1526305321824,
                                                                      "defaultTimeZone": null,
                                                                      "deployments": Array [],
                                                                      "feedSources": Array [],
                                                                      "id": "mock-project-id",
                                                                      "lastUpdated": 1553236399556,
                                                                      "name": "mock-project",
                                                                      "organizationId": null,
                                                                      "otpServers": Array [],
                                                                      "pinnedDeploymentId": null,
                                                                      "routerConfig": Object {
                                                                        "carDropoffTime": null,
                                                                        "numItineraries": null,
                                                                        "requestLogFile": null,
                                                                        "stairsReluctance": null,
                                                                        "updaters": null,
                                                                        "walkSpeed": null,
                                                                      },
                                                                      "useCustomOsmBounds": false,
                                                                      "user": null,
                                                                    }
                                                                  }
                                                                />
                                                              }
                                                            >
                                                              <ListGroup
                                                                bsClass="list-group"
                                                                fill={true}
                                                              >
                                                                <ul
                                                                  className="list-group"
                                                                  fill={true}
                                                                >
                                                                  <ListGroupItem
                                                                    bsClass="list-group-item"
                                                                    className="text-center"
                                                                    key=".0"
                                                                    listItem={true}
                                                                  >
                                                                    <li
                                                                      className="text-center list-group-item"
                                                                    >
                                                                      <Button
                                                                        active={false}
                                                                        block={false}
                                                                        bsClass="btn"
                                                                        bsStyle="success"
                                                                        data-test-id="create-first-feed-source-button"
                                                                        disabled={false}
                                                                        onClick={[Function]}
                                                                      >
                                                                        <button
                                                                          className="btn btn-success"
                                                                          data-test-id="create-first-feed-source-button"
                                                                          disabled={false}
                                                                          onClick={[Function]}
                                                                          type="button"
                                                                        >
                                                                          <Icon
                                                                            type="plus"
                                                                          >
                                                                            <i
                                                                              className="fa fa-plus fa-fw "
                                                                            />
                                                                          </Icon>
                                                                           
                                                                          Create first feed source!
                                                                        </button>
                                                                      </Button>
                                                                    </li>
                                                                  </ListGroupItem>
                                                                </ul>
                                                              </ListGroup>
                                                            </div>
                                                          </Panel>
                                                        </Uncontrolled(Panel)>
                                                      </FeedSourceTable>
                                                    </Connect(FeedSourceTable)>
                                                  </div>
                                                </Col>
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  sm={2}
                                                  xs={12}
                                                >
                                                  <div
                                                    className="col-sm-2 col-xs-12"
                                                  >
                                                    <div
                                                      style={
                                                        Object {
                                                          "marginBottom": "20px",
                                                        }
                                                      }
                                                    >
                                                      <Button
                                                        active={false}
                                                        block={true}
                                                        bsClass="btn"
                                                        bsStyle="primary"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "marginBottom": "5px",
                                                          }
                                                        }
                                                      >
                                                        <button
                                                          className="btn btn-primary btn-block"
                                                          disabled={false}
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "marginBottom": "5px",
                                                            }
                                                          }
                                                          type="button"
                                                        >
                                                          <Icon
                                                            type="users"
                                                          >
                                                            <i
                                                              className="fa fa-users fa-fw "
                                                            />
                                                          </Icon>
                                                           
                                                          Publish public feeds
                                                        </button>
                                                      </Button>
                                                      <p
                                                        className="small"
                                                      >
                                                        <strong>
                                                          Note:
                                                        </strong>
                                                         Public feeds page can be viewed
                                                         
                                                        <a
                                                          href="https://s3.amazonaws.com/bucket-name/public/index.html"
                                                          target="_blank"
                                                        >
                                                          here
                                                        </a>
                                                        .
                                                      </p>
                                                    </div>
                                                    <ProjectSummaryPanel
                                                      feedSources={Array []}
                                                      project={
                                                        Object {
                                                          "autoFetchFeeds": true,
                                                          "autoFetchHour": 0,
                                                          "autoFetchMinute": 0,
                                                          "bounds": null,
                                                          "buildConfig": Object {
                                                            "fares": null,
                                                            "fetchElevationUS": null,
                                                            "stationTransfers": null,
                                                            "subwayAccessTime": null,
                                                          },
                                                          "dateCreated": 1526305321824,
                                                          "defaultTimeZone": null,
                                                          "deployments": Array [],
                                                          "feedSources": Array [],
                                                          "id": "mock-project-id",
                                                          "lastUpdated": 1553236399556,
                                                          "name": "mock-project",
                                                          "organizationId": null,
                                                          "otpServers": Array [],
                                                          "pinnedDeploymentId": null,
                                                          "routerConfig": Object {
                                                            "carDropoffTime": null,
                                                            "numItineraries": null,
                                                            "requestLogFile": null,
                                                            "stairsReluctance": null,
                                                            "updaters": null,
                                                            "walkSpeed": null,
                                                          },
                                                          "useCustomOsmBounds": false,
                                                          "user": null,
                                                        }
                                                      }
                                                    >
                                                      <Uncontrolled(Panel)
                                                        header={
                                                          <h3>
                                                            mock-project
                                                             summary
                                                          </h3>
                                                        }
                                                      >
                                                        <Panel
                                                          bsClass="panel"
                                                          bsStyle="default"
                                                          header={
                                                            <h3>
                                                              mock-project
                                                               summary
                                                            </h3>
                                                          }
                                                          onToggle={[Function]}
                                                        >
                                                          <div
                                                            className="panel panel-default"
                                                            header={
                                                              <h3>
                                                                mock-project
                                                                 summary
                                                              </h3>
                                                            }
                                                          >
                                                            <ListGroup
                                                              bsClass="list-group"
                                                              fill={true}
                                                            >
                                                              <ul
                                                                className="list-group"
                                                                fill={true}
                                                              >
                                                                <ListGroupItem
                                                                  bsClass="list-group-item"
                                                                  key=".0"
                                                                  listItem={true}
                                                                >
                                                                  <li
                                                                    className="list-group-item"
                                                                  >
                                                                    Number of feeds: 
                                                                    0
                                                                  </li>
                                                                </ListGroupItem>
                                                                <ListGroupItem
                                                                  bsClass="list-group-item"
                                                                  key=".1"
                                                                  listItem={true}
                                                                >
                                                                  <li
                                                                    className="list-group-item"
                                                                  >
                                                                    Total errors: 
                                                                    0
                                                                  </li>
                                                                </ListGroupItem>
                                                                <ListGroupItem
                                                                  bsClass="list-group-item"
                                                                  key=".2"
                                                                  listItem={true}
                                                                >
                                                                  <li
                                                                    className="list-group-item"
                                                                  >
                                                                    Total service:
                                                                     
                                                                    0
                                                                     
                                                                    hours per weekday
                                                                  </li>
                                                                </ListGroupItem>
                                                              </ul>
                                                            </ListGroup>
                                                          </div>
                                                        </Panel>
                                                      </Uncontrolled(Panel)>
                                                    </ProjectSummaryPanel>
                                                    <Uncontrolled(Panel)
                                                      header={
                                                        <h3>
                                                          What is a feed source?
                                                        </h3>
                                                      }
                                                    >
                                                      <Panel
                                                        bsClass="panel"
                                                        bsStyle="default"
                                                        header={
                                                          <h3>
                                                            What is a feed source?
                                                          </h3>
                                                        }
                                                        onToggle={[Function]}
                                                      >
                                                        <div
                                                          className="panel panel-default"
                                                          header={
                                                            <h3>
                                                              What is a feed source?
                                                            </h3>
                                                          }
                                                        >
                                                          A feed source defines the location or upstream source of a
                                                           
                                                          GTFS feed. GTFS can be populated via automatic fetch,
                                                           
                                                          directly editing or uploading a zip file.
                                                        </div>
                                                      </Panel>
                                                    </Uncontrolled(Panel)>
                                                  </div>
                                                </Col>
                                              </div>
                                            </Row>
                                          </div>
                                        </Transition>
                                      </Fade>
                                    </TabPane>
                                  </Tab>
                                  <Tab
                                    disabled={false}
                                    eventKey="deployments"
                                    title={
                                      <span>
                                        <Glyphicon
                                          bsClass="glyphicon"
                                          className="icon-link"
                                          glyph="globe"
                                        />
                                        <span
                                          className="hidden-xs"
                                        >
                                          Deployments
                                        </span>
                                      </span>
                                    }
                                  >
                                    <TabPane
                                      bsClass="tab-pane"
                                      eventKey="deployments"
                                    >
                                      <Fade
                                        appear={false}
                                        in={false}
                                        mountOnEnter={true}
                                        onEnter={[Function]}
                                        onExited={[Function]}
                                        timeout={300}
                                        unmountOnExit={false}
                                      >
                                        <Transition
                                          appear={false}
                                          enter={true}
                                          exit={true}
                                          in={false}
                                          mountOnEnter={true}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={300}
                                          unmountOnExit={false}
                                        />
                                      </Fade>
                                    </TabPane>
                                  </Tab>
                                  <Tab
                                    disabled={false}
                                    eventKey="settings"
                                    title={
                                      <span>
                                        <Glyphicon
                                          bsClass="glyphicon"
                                          className="icon-link"
                                          glyph="cog"
                                        />
                                        <span
                                          className="hidden-xs"
                                        >
                                          Settings
                                        </span>
                                      </span>
                                    }
                                  >
                                    <TabPane
                                      bsClass="tab-pane"
                                      eventKey="settings"
                                    >
                                      <Fade
                                        appear={false}
                                        in={false}
                                        mountOnEnter={true}
                                        onEnter={[Function]}
                                        onExited={[Function]}
                                        timeout={300}
                                        unmountOnExit={false}
                                      >
                                        <Transition
                                          appear={false}
                                          enter={true}
                                          exit={true}
                                          in={false}
                                          mountOnEnter={true}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={300}
                                          unmountOnExit={false}
                                        />
                                      </Fade>
                                    </TabPane>
                                  </Tab>
                                </div>
                              </TabContent>
                            </div>
                          </TabContainer>
                        </Tabs>
                      </Uncontrolled(Tabs)>
                    </div>
                  </Grid>
                </div>
                <footer
                  className="manager-footer"
                >
                  <div
                    className="container"
                  >
                    <ul
                      className="list-inline text-center text-muted"
                    >
                      <li>
                        <a
                          href="https://changelog.example.com"
                        >
                          Changelog
                        </a>
                      </li>
                      <li>
                        <a
                          href="http://docs.example.com"
                        >
                          Guide
                        </a>
                      </li>
                      <li>
                        <a
                          href="mailto:support@example.com"
                        >
                          Contact
                        </a>
                      </li>
                    </ul>
                    <p
                      className="text-center text-muted"
                    >
                      <span
                        aria-label="copyright"
                        role="img"
                        title="Copyright"
                      >
                        ©
                      </span>
                       
                      <a
                        href="https://www.ibigroup.com"
                      >
                        IBI Group
                      </a>
                    </p>
                  </div>
                </footer>
              </div>
            </Content>
          </Connect(Content)>
        </div>
      </ManagerPage>
    </ProjectViewer>
  </Connect(ProjectViewer)>
</Provider>
`;
